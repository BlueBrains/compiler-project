Terminals unused in grammar

   ENDMARKER
   PRIMARY
   SELF
   ASSERT
   RAISE
   YIELD


Grammar

    0 $accept: file_input $end

    1 file_input: program

    2 program: import_stmt ';' temp2
    3        | temp2

    4 temp2: classdef temp2
    5      | classdef

    6 funcdef: funcheader suite

    7 funcheader: DEF NAME parameters ARROW test ':'
    8           | DEF access NAME parameters ARROW test ':'
    9           | DEF NAME parameters ':'
   10           | DEF access NAME parameters ':'
   11           | DEF STATIC NAME parameters ARROW test ':'
   12           | DEF FINAL NAME parameters ARROW test ':'
   13           | DEF STATIC NAME parameters ':'
   14           | DEF FINAL NAME parameters ':'
   15           | DEF STATIC FINAL NAME parameters ARROW test ':'
   16           | DEF FINAL STATIC NAME parameters ARROW test ':'
   17           | DEF STATIC FINAL NAME parameters ':'
   18           | DEF FINAL STATIC NAME parameters ':'
   19           | DEF FINAL access NAME parameters ARROW test ':'
   20           | DEF STATIC access NAME parameters ARROW test ':'
   21           | DEF STATIC access NAME parameters ':'
   22           | DEF FINAL access NAME parameters ':'
   23           | DEF STATIC FINAL access NAME parameters ARROW test ':'
   24           | DEF FINAL STATIC access NAME parameters ARROW test ':'
   25           | DEF STATIC FINAL access NAME parameters ':'
   26           | DEF FINAL STATIC access NAME parameters ':'
   27           | DEF access STATIC NAME parameters ARROW test ':'
   28           | DEF access FINAL NAME parameters ARROW test ':'
   29           | DEF access STATIC NAME parameters ':'
   30           | DEF access FINAL NAME parameters ':'
   31           | DEF access STATIC FINAL NAME parameters ARROW test ':'
   32           | DEF access FINAL STATIC NAME parameters ARROW test ':'
   33           | DEF access STATIC FINAL NAME parameters ':'
   34           | DEF access FINAL STATIC NAME parameters ':'
   35           | DEF STATIC access FINAL NAME parameters ARROW test ':'
   36           | DEF FINAL access STATIC NAME parameters ARROW test ':'
   37           | DEF STATIC access FINAL NAME parameters ':'
   38           | DEF FINAL access STATIC NAME parameters ':'

   39 parameters: '(' arglist ')'
   40           | '(' ')'

   41 stmt: simple_stmt
   42     | compound_stmt

   43 simple_stmt: small_stmt ';'

   44 small_stmt: expr_stmt
   45           | del_stmt
   46           | pass_stmt
   47           | flow_stmt
   48           | import_stmt
   49           | global_stmt
   50           | nonlocal_stmt
   51           | print_stmt

   52 expr_stmt: testlist_star_expr augassign testlist
   53          | testlist_star_expr
   54          | testlist_star_expr right_testlist

   55 right_testlist: '=' testlist_star_expr right_testlist
   56               | '=' testlist_star_expr

   57 testlist_star_expr: comma_test_star_seqJ
   58                   | comma_test_star_seqJ ','
   59                   | ','
   60                   | test comma_test_star_seqJ
   61                   | test
   62                   | star_expr comma_test_star_seqJ ','
   63                   | star_expr ','

   64 comma_test_star: ',' test
   65                | ',' star_expr

   66 comma_test_star_seqJ: comma_test_star_seqJ comma_test_star
   67                     | comma_test_star

   68 augassign: PLUS_EQUAL
   69          | MINUS_EQUAL
   70          | STAR_EQUAL
   71          | DIV_EQUAL
   72          | MOD_EQUAL
   73          | AND_EQUAL
   74          | OR_EQUAL
   75          | SHAPOO_EQUAL
   76          | LESS_THAN_2_EQUAL
   77          | MORE_THAN_2_EQUAL
   78          | STAR_2_EQUAL
   79          | DIV_2_EQUAL

   80 access: PRIVATE
   81       | PUBLIC
   82       | PROTECTED

   83 print_stmt: PRINT exprlist

   84 del_stmt: DEL exprlist

   85 pass_stmt: PASS

   86 flow_stmt: break_stmt
   87          | continue_stmt
   88          | return_stmt

   89 break_stmt: BREAK

   90 continue_stmt: CONTINUE

   91 return_stmt: RETURN testlist
   92            | RETURN

   93 import_stmt: import_name

   94 import_name: IMPORT dotted_as_names

   95 comma_dotted_as_name_seq: ',' dotted_as_name
   96                         | comma_dotted_as_name_seq ',' dotted_as_name

   97 dotted_as_names: dotted_as_name
   98                | dotted_as_name comma_dotted_as_name_seq

   99 dotted_as_name: dotted_name
  100               | dotted_name AS NAME

  101 dotted_name: NAME
  102            | NAME dotted_name_seq

  103 dotted_name_seq: '.' NAME
  104                | dotted_name_seq '.' NAME

  105 comma_name_seq: ',' NAME
  106               | comma_name_seq ',' NAME

  107 global_stmt: GLOBAL NAME
  108            | GLOBAL NAME comma_name_seq

  109 nonlocal_stmt: NONLOCAL NAME
  110              | NONLOCAL NAME comma_name_seq

  111 compound_stmt: if_stmt
  112              | while_stmt
  113              | for_stmt
  114              | try_stmt
  115              | with_stmt
  116              | funcdef
  117              | vardef ';'
  118              | DEF classdef

  119 vardef: DEF NAME
  120       | DEF access NAME
  121       | DEF STATIC NAME
  122       | DEF FINAL NAME
  123       | DEF STATIC FINAL NAME
  124       | DEF FINAL STATIC NAME
  125       | DEF STATIC access NAME
  126       | DEF FINAL access NAME
  127       | DEF STATIC FINAL access NAME
  128       | DEF FINAL STATIC access NAME
  129       | DEF access STATIC NAME
  130       | DEF access FINAL NAME
  131       | DEF access STATIC FINAL NAME
  132       | DEF access FINAL STATIC NAME
  133       | DEF STATIC access FINAL NAME
  134       | DEF FINAL access STATIC NAME

  135 elif_seq: ELIF test ':' suite
  136         | elif_seq ELIF test ':' suite

  137 if_stmt: IF test ':' suite
  138        | IF test ':' suite elif_seq
  139        | IF test ':' suite ELSE ':' suite
  140        | IF test ':' suite elif_seq ELSE ':' suite

  141 while_stmt: WHILE test ':' suite
  142           | WHILE test ':' suite ELSE ':' suite

  143 for_stmt: FOR exprlist IN testlist ':' suite
  144         | FOR exprlist IN testlist ':' suite ELSE ':' suite

  145 try_stmt: TRY ':' suite try_except_cla_seq
  146         | TRY ':' suite try_except_cla_seq ELSE ':' suite
  147         | TRY ':' suite try_except_cla_seq FINALLY ':' suite
  148         | TRY ':' suite FINALLY ':' suite

  149 try_except_cla_seq: except_clause ':' suite
  150                   | try_except_cla_seq except_clause ':' suite

  151 with_seq: ',' with_item
  152         | with_seq ',' with_item

  153 with_stmt: WITH with_item ':' suite
  154          | WITH with_item with_seq ':' suite

  155 with_item: test
  156          | test AS expr

  157 except_clause: EXCEPT
  158              | EXCEPT test
  159              | EXCEPT test AS NAME

  160 list_stmt: stmt
  161          | list_stmt stmt

  162 suite: list_stmt END
  163      | END

  164 test: or_test
  165     | or_test IF or_test ELSE test

  166 or_seq: OR and_test
  167       | or_seq OR and_test

  168 or_test: and_test
  169        | and_test or_seq

  170 and_seq: AND not_test
  171        | and_seq AND not_test

  172 and_test: not_test
  173         | not_test and_seq

  174 not_test: NOT not_test
  175         | comparison

  176 comp_op_seq: comp_op expr
  177            | comp_op_seq comp_op expr

  178 comparison: expr
  179           | expr comp_op_seq

  180 comp_op: '<'
  181        | '>'
  182        | EQUAL
  183        | MORE_OR_EQUAL
  184        | LESS_OR_EQUAL
  185        | MORE_LESS
  186        | NOT_EQUAL
  187        | IN
  188        | NOT IN
  189        | IS
  190        | IS NOT

  191 star_expr: '*' expr

  192 or_xor_expr_seq: '|' xor_expr
  193                | or_xor_expr_seq '|' xor_expr

  194 expr: xor_expr
  195     | xor_expr or_xor_expr_seq

  196 sha_and_expr_seq: '^' and_expr
  197                 | sha_and_expr_seq '^' and_expr

  198 xor_expr: and_expr
  199         | and_expr sha_and_expr_seq

  200 and_shift_expr_seq: '&' shift_expr
  201                   | and_shift_expr_seq '&' shift_expr

  202 and_expr: shift_expr
  203         | shift_expr and_shift_expr_seq

  204 arith_seq: LESS_THAN_2 arith_expr
  205          | MORE_THAN_2 arith_expr
  206          | arith_seq LESS_THAN_2 arith_expr
  207          | arith_seq MORE_THAN_2 arith_expr

  208 shift_expr: arith_expr
  209           | arith_expr arith_seq

  210 term_seq: '+' term
  211         | '-' term
  212         | term_seq '+' term
  213         | term_seq '-' term

  214 arith_expr: term
  215           | term term_seq

  216 factor_seq: '*' factor
  217           | '/' factor
  218           | '%' factor
  219           | DIV_2 factor
  220           | factor_seq '*' factor
  221           | factor_seq '/' factor
  222           | factor_seq '%' factor
  223           | factor_seq DIV_2 factor

  224 term: factor
  225     | factor factor_seq

  226 factor: '+' factor
  227       | '-' factor
  228       | '~' factor
  229       | power

  230 trailer_seq: trailer
  231            | trailer_seq trailer

  232 power: atom
  233      | atom trailer_seq
  234      | atom trailer_seq STAR_2 factor
  235      | atom STAR_2 factor

  236 str_seq: STRING
  237        | str_seq STRING

  238 atom: '(' ')'
  239     | '(' testlist_comp ')'
  240     | '[' ']'
  241     | '{' '}'
  242     | '[' testlist_comp ']'
  243     | '{' dictorsetmaker '}'
  244     | NAME
  245     | NAME '(' ')'
  246     | NAME '(' arglist ')'
  247     | NAME '[' subscriptlist ']'
  248     | NUMBER_INT
  249     | NUMBER_FLOAT
  250     | NUMBER_LONG
  251     | CHAR_VALUE
  252     | str_seq
  253     | DOT_3
  254     | NONE
  255     | TRUE
  256     | FALSE

  257 comma_test_star_seq: ',' test
  258                    | ',' star_expr
  259                    | comma_test_star_seq ',' test
  260                    | comma_test_star_seq ',' star_expr

  261 testlist_comp: test comp_for
  262              | test
  263              | test comma_test_star_seq
  264              | test ','
  265              | test comma_test_star_seq ','
  266              | star_expr comp_for
  267              | star_expr
  268              | star_expr comma_test_star_seq
  269              | star_expr ','
  270              | star_expr comma_test_star_seq ','

  271 trailer: '.' NAME
  272        | '.' NAME '(' ')'
  273        | '.' NAME '(' arglist ')'
  274        | '.' NAME '[' subscriptlist ']'

  275 comma_subscript_seq: ',' subscript
  276                    | comma_subscript_seq ',' subscript

  277 subscriptlist: subscript
  278              | subscript comma_subscript_seq
  279              | subscript ','
  280              | subscript comma_subscript_seq ','

  281 subscript: test
  282          | ':'
  283          | test ':'
  284          | test ':' test
  285          | test ':' sliceop
  286          | test ':' test sliceop
  287          | ':' test
  288          | ':' sliceop
  289          | ':' test sliceop

  290 sliceop: ':'
  291        | ':' test

  292 comma_expr_star_seq: ',' expr
  293                    | ',' star_expr
  294                    | comma_expr_star_seq ',' expr
  295                    | comma_expr_star_seq ',' star_expr

  296 exprlist: expr
  297         | expr comma_expr_star_seq
  298         | star_expr
  299         | star_expr comma_expr_star_seq
  300         | expr ','
  301         | expr comma_expr_star_seq ','
  302         | star_expr ','
  303         | star_expr comma_expr_star_seq ','

  304 comma_test: ',' test
  305           | ',' test comma_test

  306 testlist: test
  307         | test comma_test
  308         | test ','
  309         | test comma_test ','

  310 comma_test_colon_test_seq: ',' test ':' test
  311                          | comma_test_colon_test_seq ',' test ':' test

  312 comma_test_seq: ',' test
  313               | comma_test_seq ',' test

  314 dictorsetmaker: test ':' test comp_for
  315               | test ':' test
  316               | test ':' test ','
  317               | test ':' test comma_test_colon_test_seq
  318               | test ':' test comma_test_colon_test_seq ','
  319               | test comp_for
  320               | test
  321               | test ','
  322               | test comma_test_seq
  323               | test comma_test_seq ','

  324 classdef: classheader suite

  325 classheader: CLASS NAME ':'
  326            | access CLASS NAME ':'
  327            | STATIC CLASS NAME ':'
  328            | FINAL CLASS NAME ':'
  329            | STATIC FINAL CLASS NAME ':'
  330            | FINAL STATIC CLASS NAME ':'
  331            | FINAL access CLASS NAME ':'
  332            | STATIC access CLASS NAME ':'
  333            | STATIC FINAL access CLASS NAME ':'
  334            | FINAL STATIC access CLASS NAME ':'
  335            | access STATIC CLASS NAME ':'
  336            | access FINAL CLASS NAME ':'
  337            | access STATIC FINAL CLASS NAME ':'
  338            | access FINAL STATIC CLASS NAME ':'
  339            | STATIC access FINAL CLASS NAME ':'
  340            | FINAL access STATIC CLASS NAME ':'
  341            | CLASS NAME '(' ')' ':'
  342            | access CLASS NAME '(' ')' ':'
  343            | STATIC CLASS NAME '(' ')' ':'
  344            | FINAL CLASS NAME '(' ')' ':'
  345            | STATIC FINAL CLASS NAME '(' ')' ':'
  346            | FINAL STATIC CLASS NAME '(' ')' ':'
  347            | STATIC access CLASS NAME '(' ')' ':'
  348            | FINAL access CLASS NAME '(' ')' ':'
  349            | STATIC FINAL access CLASS NAME '(' ')' ':'
  350            | FINAL STATIC access CLASS NAME '(' ')' ':'
  351            | access STATIC CLASS NAME '(' ')' ':'
  352            | access FINAL CLASS NAME '(' ')' ':'
  353            | access STATIC FINAL CLASS NAME '(' ')' ':'
  354            | access FINAL STATIC CLASS NAME '(' ')' ':'
  355            | STATIC access FINAL CLASS NAME '(' ')' ':'
  356            | FINAL access STATIC CLASS NAME '(' ')' ':'
  357            | CLASS NAME '(' dotted_as_names ')' ':'
  358            | access CLASS NAME '(' dotted_as_names ')' ':'
  359            | STATIC CLASS NAME '(' dotted_as_names ')' ':'
  360            | FINAL CLASS NAME '(' dotted_as_names ')' ':'
  361            | STATIC FINAL CLASS NAME '(' dotted_as_names ')' ':'
  362            | FINAL STATIC CLASS NAME '(' dotted_as_names ')' ':'
  363            | STATIC access CLASS NAME '(' dotted_as_names ')' ':'
  364            | FINAL access CLASS NAME '(' dotted_as_names ')' ':'
  365            | STATIC FINAL access CLASS NAME '(' dotted_as_names ')' ':'
  366            | FINAL STATIC access CLASS NAME '(' dotted_as_names ')' ':'
  367            | access STATIC CLASS NAME '(' dotted_as_names ')' ':'
  368            | access FINAL CLASS NAME '(' dotted_as_names ')' ':'
  369            | access STATIC FINAL CLASS NAME '(' dotted_as_names ')' ':'
  370            | access FINAL STATIC CLASS NAME '(' dotted_as_names ')' ':'
  371            | STATIC access FINAL CLASS NAME '(' dotted_as_names ')' ':'
  372            | FINAL access STATIC CLASS NAME '(' dotted_as_names ')' ':'

  373 arg_comma_seq: argument ','
  374              | arg_comma_seq argument ','

  375 comma_arg_seq: ',' argument
  376              | comma_arg_seq ',' argument

  377 arglist: argument
  378        | default_arg
  379        | argument ','
  380        | '*' test
  381        | '*' test ',' STAR_2 test
  382        | '*' test comma_arg_seq
  383        | '*' test comma_default_arg_seq
  384        | '*' test comma_arg_seq comma_default_arg_seq
  385        | '*' test comma_arg_seq ',' STAR_2 test
  386        | STAR_2 test
  387        | arg_comma_seq argument
  388        | arg_comma_seq default_arg
  389        | arg_comma_seq default_arg_comma_seq default_arg
  390        | arg_comma_seq argument ','
  391        | arg_comma_seq '*' test
  392        | arg_comma_seq '*' test ',' STAR_2 test
  393        | arg_comma_seq '*' test comma_arg_seq
  394        | arg_comma_seq '*' test comma_default_arg_seq
  395        | arg_comma_seq '*' test comma_arg_seq comma_default_arg_seq
  396        | arg_comma_seq '*' test comma_arg_seq ',' STAR_2 test
  397        | arg_comma_seq STAR_2 test

  398 comma_default_arg_seq: ',' default_arg
  399                      | comma_default_arg_seq ',' default_arg

  400 default_arg_comma_seq: default_arg ','
  401                      | default_arg_comma_seq default_arg ','

  402 default_arg: test '=' test

  403 argument: test
  404         | test comp_for

  405 comp_iter: comp_for
  406          | comp_if

  407 comp_for: FOR exprlist IN or_test
  408         | FOR exprlist IN or_test comp_iter

  409 comp_if: IF or_test
  410        | IF or_test comp_iter


Terminals, with rules where they appear

$end (0) 0
'%' (37) 218 222
'&' (38) 200 201
'(' (40) 39 40 238 239 245 246 272 273 341 342 343 344 345 346 347
    348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363
    364 365 366 367 368 369 370 371 372
')' (41) 39 40 238 239 245 246 272 273 341 342 343 344 345 346 347
    348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363
    364 365 366 367 368 369 370 371 372
'*' (42) 191 216 220 380 381 382 383 384 385 391 392 393 394 395 396
'+' (43) 210 212 226
',' (44) 58 59 62 63 64 65 95 96 105 106 151 152 257 258 259 260 264
    265 269 270 275 276 279 280 292 293 294 295 300 301 302 303 304
    305 308 309 310 311 312 313 316 318 321 323 373 374 375 376 379
    381 385 390 392 396 398 399 400 401
'-' (45) 211 213 227
'.' (46) 103 104 271 272 273 274
'/' (47) 217 221
':' (58) 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
    28 29 30 31 32 33 34 35 36 37 38 135 136 137 138 139 140 141 142
    143 144 145 146 147 148 149 150 153 154 282 283 284 285 286 287
    288 289 290 291 310 311 314 315 316 317 318 325 326 327 328 329
    330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345
    346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361
    362 363 364 365 366 367 368 369 370 371 372
';' (59) 2 43 117
'<' (60) 180
'=' (61) 55 56 402
'>' (62) 181
'[' (91) 240 242 247 274
']' (93) 240 242 247 274
'^' (94) 196 197
'{' (123) 241 243
'|' (124) 192 193
'}' (125) 241 243
'~' (126) 228
error (256)
ENDMARKER (258)
IMPORT (259) 94
CLASS (260) 325 326 327 328 329 330 331 332 333 334 335 336 337 338
    339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354
    355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370
    371 372
END (261) 162 163
PRIMARY (262)
OR (263) 166 167
AND (264) 170 171
NOT (265) 174 188 190
NOT_EQUAL (266) 186
FINAL (267) 12 14 15 16 17 18 19 22 23 24 25 26 28 30 31 32 33 34 35
    36 37 38 122 123 124 126 127 128 130 131 132 133 134 328 329 330
    331 333 334 336 337 338 339 340 344 345 346 348 349 350 352 353
    354 355 356 360 361 362 364 365 366 368 369 370 371 372
STATIC (268) 11 13 15 16 17 18 20 21 23 24 25 26 27 29 31 32 33 34
    35 36 37 38 121 123 124 125 127 128 129 131 132 133 134 327 329
    330 332 333 334 335 337 338 339 340 343 345 346 347 349 350 351
    353 354 355 356 359 361 362 363 365 366 367 369 370 371 372
SELF (269)
DEF (270) 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26
    27 28 29 30 31 32 33 34 35 36 37 38 118 119 120 121 122 123 124
    125 126 127 128 129 130 131 132 133 134
ELSE (271) 139 140 142 144 146 165
IF (272) 137 138 139 140 165 409 410
ELIF (273) 135 136
WHILE (274) 141 142
FOR (275) 143 144 407 408
IN (276) 143 144 187 188 407 408
TRY (277) 145 146 147 148
FINALLY (278) 147 148
ARROW (279) 7 8 11 12 15 16 19 20 23 24 27 28 31 32 35 36
NONLOCAL (280) 109 110
PLUS_EQUAL (281) 68
MINUS_EQUAL (282) 69
DIV_EQUAL (283) 71
MOD_EQUAL (284) 72
AND_EQUAL (285) 73
OR_EQUAL (286) 74
SHAPOO_EQUAL (287) 75
LESS_THAN_2_EQUAL (288) 76
MORE_THAN_2_EQUAL (289) 77
STAR_2_EQUAL (290) 78
DIV_2_EQUAL (291) 79
MORE_LESS (292) 185
FALSE (293) 256
TRUE (294) 255
STAR_2 (295) 234 235 381 385 386 392 396 397
NUMBER_INT (296) 248
NUMBER_LONG (297) 250
NUMBER_FLOAT (298) 249
NAME (299) 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26
    27 28 29 30 31 32 33 34 35 36 37 38 100 101 102 103 104 105 106
    107 108 109 110 119 120 121 122 123 124 125 126 127 128 129 130
    131 132 133 134 159 244 245 246 247 271 272 273 274 325 326 327
    328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343
    344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359
    360 361 362 363 364 365 366 367 368 369 370 371 372
DOT_3 (300) 253
WITH (301) 153 154
AS (302) 100 156 159
ASSERT (303)
EQUAL (304) 182
DEL (305) 84
RETURN (306) 91 92
PRINT (307) 83
GLOBAL (308) 107 108
STAR_EQUAL (309) 70
LESS_THAN_2 (310) 204 206
RAISE (311)
PRIVATE (312) 80
PUBLIC (313) 81
PROTECTED (314) 82
YIELD (315)
MORE_THAN_2 (316) 205 207
STRING (317) 236 237
NONE (318) 254
IS (319) 189 190
DIV_2 (320) 219 223
LESS_OR_EQUAL (321) 184
MORE_OR_EQUAL (322) 183
EXCEPT (323) 157 158 159
PASS (324) 85
CHAR_VALUE (325) 251
BREAK (326) 89
CONTINUE (327) 90
stmt_14 (328)
stmt_13 (329)
stmt_12 (330)
stmt_11 (331)
stmt_10 (332)
stmt_9 (333)
stmt_8 (334)
stmt_7 (335)
stmt_6 (336)
stmt_5 (337)
stmt_4 (338)
stmt_3 (339)
stmt_2 (340)
stmt_1 (341)


Nonterminals, with rules where they appear

$accept (109)
    on left: 0
file_input (110)
    on left: 1, on right: 0
program (111)
    on left: 2 3, on right: 1
temp2 (112)
    on left: 4 5, on right: 2 3 4
funcdef (113)
    on left: 6, on right: 116
funcheader (114)
    on left: 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25
    26 27 28 29 30 31 32 33 34 35 36 37 38, on right: 6
parameters (115)
    on left: 39 40, on right: 7 8 9 10 11 12 13 14 15 16 17 18 19 20
    21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38
stmt (116)
    on left: 41 42, on right: 160 161
simple_stmt (117)
    on left: 43, on right: 41
small_stmt (118)
    on left: 44 45 46 47 48 49 50 51, on right: 43
expr_stmt (119)
    on left: 52 53 54, on right: 44
right_testlist (120)
    on left: 55 56, on right: 54 55
testlist_star_expr (121)
    on left: 57 58 59 60 61 62 63, on right: 52 53 54 55 56
comma_test_star (122)
    on left: 64 65, on right: 66 67
comma_test_star_seqJ (123)
    on left: 66 67, on right: 57 58 60 62 66
augassign (124)
    on left: 68 69 70 71 72 73 74 75 76 77 78 79, on right: 52
access (125)
    on left: 80 81 82, on right: 8 10 19 20 21 22 23 24 25 26 27 28
    29 30 31 32 33 34 35 36 37 38 120 125 126 127 128 129 130 131 132
    133 134 326 331 332 333 334 335 336 337 338 339 340 342 347 348
    349 350 351 352 353 354 355 356 358 363 364 365 366 367 368 369
    370 371 372
print_stmt (126)
    on left: 83, on right: 51
del_stmt (127)
    on left: 84, on right: 45
pass_stmt (128)
    on left: 85, on right: 46
flow_stmt (129)
    on left: 86 87 88, on right: 47
break_stmt (130)
    on left: 89, on right: 86
continue_stmt (131)
    on left: 90, on right: 87
return_stmt (132)
    on left: 91 92, on right: 88
import_stmt (133)
    on left: 93, on right: 2 48
import_name (134)
    on left: 94, on right: 93
comma_dotted_as_name_seq (135)
    on left: 95 96, on right: 96 98
dotted_as_names (136)
    on left: 97 98, on right: 94 357 358 359 360 361 362 363 364 365
    366 367 368 369 370 371 372
dotted_as_name (137)
    on left: 99 100, on right: 95 96 97 98
dotted_name (138)
    on left: 101 102, on right: 99 100
dotted_name_seq (139)
    on left: 103 104, on right: 102 104
comma_name_seq (140)
    on left: 105 106, on right: 106 108 110
global_stmt (141)
    on left: 107 108, on right: 49
nonlocal_stmt (142)
    on left: 109 110, on right: 50
compound_stmt (143)
    on left: 111 112 113 114 115 116 117 118, on right: 42
vardef (144)
    on left: 119 120 121 122 123 124 125 126 127 128 129 130 131 132
    133 134, on right: 117
elif_seq (145)
    on left: 135 136, on right: 136 138 140
if_stmt (146)
    on left: 137 138 139 140, on right: 111
while_stmt (147)
    on left: 141 142, on right: 112
for_stmt (148)
    on left: 143 144, on right: 113
try_stmt (149)
    on left: 145 146 147 148, on right: 114
try_except_cla_seq (150)
    on left: 149 150, on right: 145 146 147 150
with_seq (151)
    on left: 151 152, on right: 152 154
with_stmt (152)
    on left: 153 154, on right: 115
with_item (153)
    on left: 155 156, on right: 151 152 153 154
except_clause (154)
    on left: 157 158 159, on right: 149 150
list_stmt (155)
    on left: 160 161, on right: 161 162
suite (156)
    on left: 162 163, on right: 6 135 136 137 138 139 140 141 142 143
    144 145 146 147 148 149 150 153 154 324
test (157)
    on left: 164 165, on right: 7 8 11 12 15 16 19 20 23 24 27 28 31
    32 35 36 60 61 64 135 136 137 138 139 140 141 142 155 156 158 159
    165 257 259 261 262 263 264 265 281 283 284 285 286 287 289 291
    304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319
    320 321 322 323 380 381 382 383 384 385 386 391 392 393 394 395
    396 397 402 403 404
or_seq (158)
    on left: 166 167, on right: 167 169
or_test (159)
    on left: 168 169, on right: 164 165 407 408 409 410
and_seq (160)
    on left: 170 171, on right: 171 173
and_test (161)
    on left: 172 173, on right: 166 167 168 169
not_test (162)
    on left: 174 175, on right: 170 171 172 173 174
comp_op_seq (163)
    on left: 176 177, on right: 177 179
comparison (164)
    on left: 178 179, on right: 175
comp_op (165)
    on left: 180 181 182 183 184 185 186 187 188 189 190, on right:
    176 177
star_expr (166)
    on left: 191, on right: 62 63 65 258 260 266 267 268 269 270 293
    295 298 299 302 303
or_xor_expr_seq (167)
    on left: 192 193, on right: 193 195
expr (168)
    on left: 194 195, on right: 156 176 177 178 179 191 292 294 296
    297 300 301
sha_and_expr_seq (169)
    on left: 196 197, on right: 197 199
xor_expr (170)
    on left: 198 199, on right: 192 193 194 195
and_shift_expr_seq (171)
    on left: 200 201, on right: 201 203
and_expr (172)
    on left: 202 203, on right: 196 197 198 199
arith_seq (173)
    on left: 204 205 206 207, on right: 206 207 209
shift_expr (174)
    on left: 208 209, on right: 200 201 202 203
term_seq (175)
    on left: 210 211 212 213, on right: 212 213 215
arith_expr (176)
    on left: 214 215, on right: 204 205 206 207 208 209
factor_seq (177)
    on left: 216 217 218 219 220 221 222 223, on right: 220 221 222
    223 225
term (178)
    on left: 224 225, on right: 210 211 212 213 214 215
factor (179)
    on left: 226 227 228 229, on right: 216 217 218 219 220 221 222
    223 224 225 226 227 228 234 235
trailer_seq (180)
    on left: 230 231, on right: 231 233 234
power (181)
    on left: 232 233 234 235, on right: 229
str_seq (182)
    on left: 236 237, on right: 237 252
atom (183)
    on left: 238 239 240 241 242 243 244 245 246 247 248 249 250 251
    252 253 254 255 256, on right: 232 233 234 235
comma_test_star_seq (184)
    on left: 257 258 259 260, on right: 259 260 263 265 268 270
testlist_comp (185)
    on left: 261 262 263 264 265 266 267 268 269 270, on right: 239
    242
trailer (186)
    on left: 271 272 273 274, on right: 230 231
comma_subscript_seq (187)
    on left: 275 276, on right: 276 278 280
subscriptlist (188)
    on left: 277 278 279 280, on right: 247 274
subscript (189)
    on left: 281 282 283 284 285 286 287 288 289, on right: 275 276
    277 278 279 280
sliceop (190)
    on left: 290 291, on right: 285 286 288 289
comma_expr_star_seq (191)
    on left: 292 293 294 295, on right: 294 295 297 299 301 303
exprlist (192)
    on left: 296 297 298 299 300 301 302 303, on right: 83 84 143 144
    407 408
comma_test (193)
    on left: 304 305, on right: 305 307 309
testlist (194)
    on left: 306 307 308 309, on right: 52 91 143 144
comma_test_colon_test_seq (195)
    on left: 310 311, on right: 311 317 318
comma_test_seq (196)
    on left: 312 313, on right: 313 322 323
dictorsetmaker (197)
    on left: 314 315 316 317 318 319 320 321 322 323, on right: 243
classdef (198)
    on left: 324, on right: 4 5 118
classheader (199)
    on left: 325 326 327 328 329 330 331 332 333 334 335 336 337 338
    339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354
    355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370
    371 372, on right: 324
arg_comma_seq (200)
    on left: 373 374, on right: 374 387 388 389 390 391 392 393 394
    395 396 397
comma_arg_seq (201)
    on left: 375 376, on right: 376 382 384 385 393 395 396
arglist (202)
    on left: 377 378 379 380 381 382 383 384 385 386 387 388 389 390
    391 392 393 394 395 396 397, on right: 39 246 273
comma_default_arg_seq (203)
    on left: 398 399, on right: 383 384 394 395 399
default_arg_comma_seq (204)
    on left: 400 401, on right: 389 401
default_arg (205)
    on left: 402, on right: 378 388 389 398 399 400 401
argument (206)
    on left: 403 404, on right: 373 374 375 376 377 379 387 390
comp_iter (207)
    on left: 405 406, on right: 408 410
comp_for (208)
    on left: 407 408, on right: 261 266 314 319 404 405
comp_if (209)
    on left: 409 410, on right: 406


State 0

    0 $accept: . file_input $end

    IMPORT     shift, and go to state 1
    CLASS      shift, and go to state 2
    FINAL      shift, and go to state 3
    STATIC     shift, and go to state 4
    PRIVATE    shift, and go to state 5
    PUBLIC     shift, and go to state 6
    PROTECTED  shift, and go to state 7

    file_input   go to state 8
    program      go to state 9
    temp2        go to state 10
    access       go to state 11
    import_stmt  go to state 12
    import_name  go to state 13
    classdef     go to state 14
    classheader  go to state 15


State 1

   94 import_name: IMPORT . dotted_as_names

    NAME  shift, and go to state 16

    dotted_as_names  go to state 17
    dotted_as_name   go to state 18
    dotted_name      go to state 19


State 2

  325 classheader: CLASS . NAME ':'
  341            | CLASS . NAME '(' ')' ':'
  357            | CLASS . NAME '(' dotted_as_names ')' ':'

    NAME  shift, and go to state 20


State 3

  328 classheader: FINAL . CLASS NAME ':'
  330            | FINAL . STATIC CLASS NAME ':'
  331            | FINAL . access CLASS NAME ':'
  334            | FINAL . STATIC access CLASS NAME ':'
  340            | FINAL . access STATIC CLASS NAME ':'
  344            | FINAL . CLASS NAME '(' ')' ':'
  346            | FINAL . STATIC CLASS NAME '(' ')' ':'
  348            | FINAL . access CLASS NAME '(' ')' ':'
  350            | FINAL . STATIC access CLASS NAME '(' ')' ':'
  356            | FINAL . access STATIC CLASS NAME '(' ')' ':'
  360            | FINAL . CLASS NAME '(' dotted_as_names ')' ':'
  362            | FINAL . STATIC CLASS NAME '(' dotted_as_names ')' ':'
  364            | FINAL . access CLASS NAME '(' dotted_as_names ')' ':'
  366            | FINAL . STATIC access CLASS NAME '(' dotted_as_names ')' ':'
  372            | FINAL . access STATIC CLASS NAME '(' dotted_as_names ')' ':'

    CLASS      shift, and go to state 21
    STATIC     shift, and go to state 22
    PRIVATE    shift, and go to state 5
    PUBLIC     shift, and go to state 6
    PROTECTED  shift, and go to state 7

    access  go to state 23


State 4

  327 classheader: STATIC . CLASS NAME ':'
  329            | STATIC . FINAL CLASS NAME ':'
  332            | STATIC . access CLASS NAME ':'
  333            | STATIC . FINAL access CLASS NAME ':'
  339            | STATIC . access FINAL CLASS NAME ':'
  343            | STATIC . CLASS NAME '(' ')' ':'
  345            | STATIC . FINAL CLASS NAME '(' ')' ':'
  347            | STATIC . access CLASS NAME '(' ')' ':'
  349            | STATIC . FINAL access CLASS NAME '(' ')' ':'
  355            | STATIC . access FINAL CLASS NAME '(' ')' ':'
  359            | STATIC . CLASS NAME '(' dotted_as_names ')' ':'
  361            | STATIC . FINAL CLASS NAME '(' dotted_as_names ')' ':'
  363            | STATIC . access CLASS NAME '(' dotted_as_names ')' ':'
  365            | STATIC . FINAL access CLASS NAME '(' dotted_as_names ')' ':'
  371            | STATIC . access FINAL CLASS NAME '(' dotted_as_names ')' ':'

    CLASS      shift, and go to state 24
    FINAL      shift, and go to state 25
    PRIVATE    shift, and go to state 5
    PUBLIC     shift, and go to state 6
    PROTECTED  shift, and go to state 7

    access  go to state 26


State 5

   80 access: PRIVATE .

    $default  reduce using rule 80 (access)


State 6

   81 access: PUBLIC .

    $default  reduce using rule 81 (access)


State 7

   82 access: PROTECTED .

    $default  reduce using rule 82 (access)


State 8

    0 $accept: file_input . $end

    $end  shift, and go to state 27


State 9

    1 file_input: program .

    $default  reduce using rule 1 (file_input)


State 10

    3 program: temp2 .

    $default  reduce using rule 3 (program)


State 11

  326 classheader: access . CLASS NAME ':'
  335            | access . STATIC CLASS NAME ':'
  336            | access . FINAL CLASS NAME ':'
  337            | access . STATIC FINAL CLASS NAME ':'
  338            | access . FINAL STATIC CLASS NAME ':'
  342            | access . CLASS NAME '(' ')' ':'
  351            | access . STATIC CLASS NAME '(' ')' ':'
  352            | access . FINAL CLASS NAME '(' ')' ':'
  353            | access . STATIC FINAL CLASS NAME '(' ')' ':'
  354            | access . FINAL STATIC CLASS NAME '(' ')' ':'
  358            | access . CLASS NAME '(' dotted_as_names ')' ':'
  367            | access . STATIC CLASS NAME '(' dotted_as_names ')' ':'
  368            | access . FINAL CLASS NAME '(' dotted_as_names ')' ':'
  369            | access . STATIC FINAL CLASS NAME '(' dotted_as_names ')' ':'
  370            | access . FINAL STATIC CLASS NAME '(' dotted_as_names ')' ':'

    CLASS   shift, and go to state 28
    FINAL   shift, and go to state 29
    STATIC  shift, and go to state 30


State 12

    2 program: import_stmt . ';' temp2

    ';'  shift, and go to state 31


State 13

   93 import_stmt: import_name .

    $default  reduce using rule 93 (import_stmt)


State 14

    4 temp2: classdef . temp2
    5      | classdef .

    CLASS      shift, and go to state 2
    FINAL      shift, and go to state 3
    STATIC     shift, and go to state 4
    PRIVATE    shift, and go to state 5
    PUBLIC     shift, and go to state 6
    PROTECTED  shift, and go to state 7

    $default  reduce using rule 5 (temp2)

    temp2        go to state 32
    access       go to state 11
    classdef     go to state 14
    classheader  go to state 15


State 15

  324 classdef: classheader . suite

    IMPORT        shift, and go to state 1
    END           shift, and go to state 33
    NOT           shift, and go to state 34
    DEF           shift, and go to state 35
    IF            shift, and go to state 36
    WHILE         shift, and go to state 37
    FOR           shift, and go to state 38
    TRY           shift, and go to state 39
    NONLOCAL      shift, and go to state 40
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    WITH          shift, and go to state 48
    DEL           shift, and go to state 49
    RETURN        shift, and go to state 50
    PRINT         shift, and go to state 51
    GLOBAL        shift, and go to state 52
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    PASS          shift, and go to state 55
    CHAR_VALUE    shift, and go to state 56
    BREAK         shift, and go to state 57
    CONTINUE      shift, and go to state 58
    ','           shift, and go to state 59
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    funcdef               go to state 67
    funcheader            go to state 68
    stmt                  go to state 69
    simple_stmt           go to state 70
    small_stmt            go to state 71
    expr_stmt             go to state 72
    testlist_star_expr    go to state 73
    comma_test_star       go to state 74
    comma_test_star_seqJ  go to state 75
    print_stmt            go to state 76
    del_stmt              go to state 77
    pass_stmt             go to state 78
    flow_stmt             go to state 79
    break_stmt            go to state 80
    continue_stmt         go to state 81
    return_stmt           go to state 82
    import_stmt           go to state 83
    import_name           go to state 13
    global_stmt           go to state 84
    nonlocal_stmt         go to state 85
    compound_stmt         go to state 86
    vardef                go to state 87
    if_stmt               go to state 88
    while_stmt            go to state 89
    for_stmt              go to state 90
    try_stmt              go to state 91
    with_stmt             go to state 92
    list_stmt             go to state 93
    suite                 go to state 94
    test                  go to state 95
    or_test               go to state 96
    and_test              go to state 97
    not_test              go to state 98
    comparison            go to state 99
    star_expr             go to state 100
    expr                  go to state 101
    xor_expr              go to state 102
    and_expr              go to state 103
    shift_expr            go to state 104
    arith_expr            go to state 105
    term                  go to state 106
    factor                go to state 107
    power                 go to state 108
    str_seq               go to state 109
    atom                  go to state 110


State 16

  101 dotted_name: NAME .
  102            | NAME . dotted_name_seq

    '.'  shift, and go to state 111

    $default  reduce using rule 101 (dotted_name)

    dotted_name_seq  go to state 112


State 17

   94 import_name: IMPORT dotted_as_names .

    $default  reduce using rule 94 (import_name)


State 18

   97 dotted_as_names: dotted_as_name .
   98                | dotted_as_name . comma_dotted_as_name_seq

    ','  shift, and go to state 113

    $default  reduce using rule 97 (dotted_as_names)

    comma_dotted_as_name_seq  go to state 114


State 19

   99 dotted_as_name: dotted_name .
  100               | dotted_name . AS NAME

    AS  shift, and go to state 115

    $default  reduce using rule 99 (dotted_as_name)


State 20

  325 classheader: CLASS NAME . ':'
  341            | CLASS NAME . '(' ')' ':'
  357            | CLASS NAME . '(' dotted_as_names ')' ':'

    '('  shift, and go to state 116
    ':'  shift, and go to state 117


State 21

  328 classheader: FINAL CLASS . NAME ':'
  344            | FINAL CLASS . NAME '(' ')' ':'
  360            | FINAL CLASS . NAME '(' dotted_as_names ')' ':'

    NAME  shift, and go to state 118


State 22

  330 classheader: FINAL STATIC . CLASS NAME ':'
  334            | FINAL STATIC . access CLASS NAME ':'
  346            | FINAL STATIC . CLASS NAME '(' ')' ':'
  350            | FINAL STATIC . access CLASS NAME '(' ')' ':'
  362            | FINAL STATIC . CLASS NAME '(' dotted_as_names ')' ':'
  366            | FINAL STATIC . access CLASS NAME '(' dotted_as_names ')' ':'

    CLASS      shift, and go to state 119
    PRIVATE    shift, and go to state 5
    PUBLIC     shift, and go to state 6
    PROTECTED  shift, and go to state 7

    access  go to state 120


State 23

  331 classheader: FINAL access . CLASS NAME ':'
  340            | FINAL access . STATIC CLASS NAME ':'
  348            | FINAL access . CLASS NAME '(' ')' ':'
  356            | FINAL access . STATIC CLASS NAME '(' ')' ':'
  364            | FINAL access . CLASS NAME '(' dotted_as_names ')' ':'
  372            | FINAL access . STATIC CLASS NAME '(' dotted_as_names ')' ':'

    CLASS   shift, and go to state 121
    STATIC  shift, and go to state 122


State 24

  327 classheader: STATIC CLASS . NAME ':'
  343            | STATIC CLASS . NAME '(' ')' ':'
  359            | STATIC CLASS . NAME '(' dotted_as_names ')' ':'

    NAME  shift, and go to state 123


State 25

  329 classheader: STATIC FINAL . CLASS NAME ':'
  333            | STATIC FINAL . access CLASS NAME ':'
  345            | STATIC FINAL . CLASS NAME '(' ')' ':'
  349            | STATIC FINAL . access CLASS NAME '(' ')' ':'
  361            | STATIC FINAL . CLASS NAME '(' dotted_as_names ')' ':'
  365            | STATIC FINAL . access CLASS NAME '(' dotted_as_names ')' ':'

    CLASS      shift, and go to state 124
    PRIVATE    shift, and go to state 5
    PUBLIC     shift, and go to state 6
    PROTECTED  shift, and go to state 7

    access  go to state 125


State 26

  332 classheader: STATIC access . CLASS NAME ':'
  339            | STATIC access . FINAL CLASS NAME ':'
  347            | STATIC access . CLASS NAME '(' ')' ':'
  355            | STATIC access . FINAL CLASS NAME '(' ')' ':'
  363            | STATIC access . CLASS NAME '(' dotted_as_names ')' ':'
  371            | STATIC access . FINAL CLASS NAME '(' dotted_as_names ')' ':'

    CLASS  shift, and go to state 126
    FINAL  shift, and go to state 127


State 27

    0 $accept: file_input $end .

    $default  accept


State 28

  326 classheader: access CLASS . NAME ':'
  342            | access CLASS . NAME '(' ')' ':'
  358            | access CLASS . NAME '(' dotted_as_names ')' ':'

    NAME  shift, and go to state 128


State 29

  336 classheader: access FINAL . CLASS NAME ':'
  338            | access FINAL . STATIC CLASS NAME ':'
  352            | access FINAL . CLASS NAME '(' ')' ':'
  354            | access FINAL . STATIC CLASS NAME '(' ')' ':'
  368            | access FINAL . CLASS NAME '(' dotted_as_names ')' ':'
  370            | access FINAL . STATIC CLASS NAME '(' dotted_as_names ')' ':'

    CLASS   shift, and go to state 129
    STATIC  shift, and go to state 130


State 30

  335 classheader: access STATIC . CLASS NAME ':'
  337            | access STATIC . FINAL CLASS NAME ':'
  351            | access STATIC . CLASS NAME '(' ')' ':'
  353            | access STATIC . FINAL CLASS NAME '(' ')' ':'
  367            | access STATIC . CLASS NAME '(' dotted_as_names ')' ':'
  369            | access STATIC . FINAL CLASS NAME '(' dotted_as_names ')' ':'

    CLASS  shift, and go to state 131
    FINAL  shift, and go to state 132


State 31

    2 program: import_stmt ';' . temp2

    CLASS      shift, and go to state 2
    FINAL      shift, and go to state 3
    STATIC     shift, and go to state 4
    PRIVATE    shift, and go to state 5
    PUBLIC     shift, and go to state 6
    PROTECTED  shift, and go to state 7

    temp2        go to state 133
    access       go to state 11
    classdef     go to state 14
    classheader  go to state 15


State 32

    4 temp2: classdef temp2 .

    $default  reduce using rule 4 (temp2)


State 33

  163 suite: END .

    $default  reduce using rule 163 (suite)


State 34

  174 not_test: NOT . not_test

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    not_test    go to state 134
    comparison  go to state 99
    expr        go to state 101
    xor_expr    go to state 102
    and_expr    go to state 103
    shift_expr  go to state 104
    arith_expr  go to state 105
    term        go to state 106
    factor      go to state 107
    power       go to state 108
    str_seq     go to state 109
    atom        go to state 110


State 35

    7 funcheader: DEF . NAME parameters ARROW test ':'
    8           | DEF . access NAME parameters ARROW test ':'
    9           | DEF . NAME parameters ':'
   10           | DEF . access NAME parameters ':'
   11           | DEF . STATIC NAME parameters ARROW test ':'
   12           | DEF . FINAL NAME parameters ARROW test ':'
   13           | DEF . STATIC NAME parameters ':'
   14           | DEF . FINAL NAME parameters ':'
   15           | DEF . STATIC FINAL NAME parameters ARROW test ':'
   16           | DEF . FINAL STATIC NAME parameters ARROW test ':'
   17           | DEF . STATIC FINAL NAME parameters ':'
   18           | DEF . FINAL STATIC NAME parameters ':'
   19           | DEF . FINAL access NAME parameters ARROW test ':'
   20           | DEF . STATIC access NAME parameters ARROW test ':'
   21           | DEF . STATIC access NAME parameters ':'
   22           | DEF . FINAL access NAME parameters ':'
   23           | DEF . STATIC FINAL access NAME parameters ARROW test ':'
   24           | DEF . FINAL STATIC access NAME parameters ARROW test ':'
   25           | DEF . STATIC FINAL access NAME parameters ':'
   26           | DEF . FINAL STATIC access NAME parameters ':'
   27           | DEF . access STATIC NAME parameters ARROW test ':'
   28           | DEF . access FINAL NAME parameters ARROW test ':'
   29           | DEF . access STATIC NAME parameters ':'
   30           | DEF . access FINAL NAME parameters ':'
   31           | DEF . access STATIC FINAL NAME parameters ARROW test ':'
   32           | DEF . access FINAL STATIC NAME parameters ARROW test ':'
   33           | DEF . access STATIC FINAL NAME parameters ':'
   34           | DEF . access FINAL STATIC NAME parameters ':'
   35           | DEF . STATIC access FINAL NAME parameters ARROW test ':'
   36           | DEF . FINAL access STATIC NAME parameters ARROW test ':'
   37           | DEF . STATIC access FINAL NAME parameters ':'
   38           | DEF . FINAL access STATIC NAME parameters ':'
  118 compound_stmt: DEF . classdef
  119 vardef: DEF . NAME
  120       | DEF . access NAME
  121       | DEF . STATIC NAME
  122       | DEF . FINAL NAME
  123       | DEF . STATIC FINAL NAME
  124       | DEF . FINAL STATIC NAME
  125       | DEF . STATIC access NAME
  126       | DEF . FINAL access NAME
  127       | DEF . STATIC FINAL access NAME
  128       | DEF . FINAL STATIC access NAME
  129       | DEF . access STATIC NAME
  130       | DEF . access FINAL NAME
  131       | DEF . access STATIC FINAL NAME
  132       | DEF . access FINAL STATIC NAME
  133       | DEF . STATIC access FINAL NAME
  134       | DEF . FINAL access STATIC NAME

    CLASS      shift, and go to state 2
    FINAL      shift, and go to state 135
    STATIC     shift, and go to state 136
    NAME       shift, and go to state 137
    PRIVATE    shift, and go to state 5
    PUBLIC     shift, and go to state 6
    PROTECTED  shift, and go to state 7

    access       go to state 138
    classdef     go to state 139
    classheader  go to state 15


State 36

  137 if_stmt: IF . test ':' suite
  138        | IF . test ':' suite elif_seq
  139        | IF . test ':' suite ELSE ':' suite
  140        | IF . test ':' suite elif_seq ELSE ':' suite

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    test        go to state 140
    or_test     go to state 96
    and_test    go to state 97
    not_test    go to state 98
    comparison  go to state 99
    expr        go to state 101
    xor_expr    go to state 102
    and_expr    go to state 103
    shift_expr  go to state 104
    arith_expr  go to state 105
    term        go to state 106
    factor      go to state 107
    power       go to state 108
    str_seq     go to state 109
    atom        go to state 110


State 37

  141 while_stmt: WHILE . test ':' suite
  142           | WHILE . test ':' suite ELSE ':' suite

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    test        go to state 141
    or_test     go to state 96
    and_test    go to state 97
    not_test    go to state 98
    comparison  go to state 99
    expr        go to state 101
    xor_expr    go to state 102
    and_expr    go to state 103
    shift_expr  go to state 104
    arith_expr  go to state 105
    term        go to state 106
    factor      go to state 107
    power       go to state 108
    str_seq     go to state 109
    atom        go to state 110


State 38

  143 for_stmt: FOR . exprlist IN testlist ':' suite
  144         | FOR . exprlist IN testlist ':' suite ELSE ':' suite

    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    star_expr   go to state 142
    expr        go to state 143
    xor_expr    go to state 102
    and_expr    go to state 103
    shift_expr  go to state 104
    arith_expr  go to state 105
    term        go to state 106
    factor      go to state 107
    power       go to state 108
    str_seq     go to state 109
    atom        go to state 110
    exprlist    go to state 144


State 39

  145 try_stmt: TRY . ':' suite try_except_cla_seq
  146         | TRY . ':' suite try_except_cla_seq ELSE ':' suite
  147         | TRY . ':' suite try_except_cla_seq FINALLY ':' suite
  148         | TRY . ':' suite FINALLY ':' suite

    ':'  shift, and go to state 145


State 40

  109 nonlocal_stmt: NONLOCAL . NAME
  110              | NONLOCAL . NAME comma_name_seq

    NAME  shift, and go to state 146


State 41

  256 atom: FALSE .

    $default  reduce using rule 256 (atom)


State 42

  255 atom: TRUE .

    $default  reduce using rule 255 (atom)


State 43

  248 atom: NUMBER_INT .

    $default  reduce using rule 248 (atom)


State 44

  250 atom: NUMBER_LONG .

    $default  reduce using rule 250 (atom)


State 45

  249 atom: NUMBER_FLOAT .

    $default  reduce using rule 249 (atom)


State 46

  244 atom: NAME .
  245     | NAME . '(' ')'
  246     | NAME . '(' arglist ')'
  247     | NAME . '[' subscriptlist ']'

    '('  shift, and go to state 147
    '['  shift, and go to state 148

    $default  reduce using rule 244 (atom)


State 47

  253 atom: DOT_3 .

    $default  reduce using rule 253 (atom)


State 48

  153 with_stmt: WITH . with_item ':' suite
  154          | WITH . with_item with_seq ':' suite

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    with_item   go to state 149
    test        go to state 150
    or_test     go to state 96
    and_test    go to state 97
    not_test    go to state 98
    comparison  go to state 99
    expr        go to state 101
    xor_expr    go to state 102
    and_expr    go to state 103
    shift_expr  go to state 104
    arith_expr  go to state 105
    term        go to state 106
    factor      go to state 107
    power       go to state 108
    str_seq     go to state 109
    atom        go to state 110


State 49

   84 del_stmt: DEL . exprlist

    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    star_expr   go to state 142
    expr        go to state 143
    xor_expr    go to state 102
    and_expr    go to state 103
    shift_expr  go to state 104
    arith_expr  go to state 105
    term        go to state 106
    factor      go to state 107
    power       go to state 108
    str_seq     go to state 109
    atom        go to state 110
    exprlist    go to state 151


State 50

   91 return_stmt: RETURN . testlist
   92            | RETURN .

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    $default  reduce using rule 92 (return_stmt)

    test        go to state 152
    or_test     go to state 96
    and_test    go to state 97
    not_test    go to state 98
    comparison  go to state 99
    expr        go to state 101
    xor_expr    go to state 102
    and_expr    go to state 103
    shift_expr  go to state 104
    arith_expr  go to state 105
    term        go to state 106
    factor      go to state 107
    power       go to state 108
    str_seq     go to state 109
    atom        go to state 110
    testlist    go to state 153


State 51

   83 print_stmt: PRINT . exprlist

    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    star_expr   go to state 142
    expr        go to state 143
    xor_expr    go to state 102
    and_expr    go to state 103
    shift_expr  go to state 104
    arith_expr  go to state 105
    term        go to state 106
    factor      go to state 107
    power       go to state 108
    str_seq     go to state 109
    atom        go to state 110
    exprlist    go to state 154


State 52

  107 global_stmt: GLOBAL . NAME
  108            | GLOBAL . NAME comma_name_seq

    NAME  shift, and go to state 155


State 53

  236 str_seq: STRING .

    $default  reduce using rule 236 (str_seq)


State 54

  254 atom: NONE .

    $default  reduce using rule 254 (atom)


State 55

   85 pass_stmt: PASS .

    $default  reduce using rule 85 (pass_stmt)


State 56

  251 atom: CHAR_VALUE .

    $default  reduce using rule 251 (atom)


State 57

   89 break_stmt: BREAK .

    $default  reduce using rule 89 (break_stmt)


State 58

   90 continue_stmt: CONTINUE .

    $default  reduce using rule 90 (continue_stmt)


State 59

   59 testlist_star_expr: ',' .
   64 comma_test_star: ',' . test
   65                | ',' . star_expr

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    $default  reduce using rule 59 (testlist_star_expr)

    test        go to state 156
    or_test     go to state 96
    and_test    go to state 97
    not_test    go to state 98
    comparison  go to state 99
    star_expr   go to state 157
    expr        go to state 101
    xor_expr    go to state 102
    and_expr    go to state 103
    shift_expr  go to state 104
    arith_expr  go to state 105
    term        go to state 106
    factor      go to state 107
    power       go to state 108
    str_seq     go to state 109
    atom        go to state 110


State 60

  238 atom: '(' . ')'
  239     | '(' . testlist_comp ')'

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    ')'           shift, and go to state 158
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    test           go to state 159
    or_test        go to state 96
    and_test       go to state 97
    not_test       go to state 98
    comparison     go to state 99
    star_expr      go to state 160
    expr           go to state 101
    xor_expr       go to state 102
    and_expr       go to state 103
    shift_expr     go to state 104
    arith_expr     go to state 105
    term           go to state 106
    factor         go to state 107
    power          go to state 108
    str_seq        go to state 109
    atom           go to state 110
    testlist_comp  go to state 161


State 61

  240 atom: '[' . ']'
  242     | '[' . testlist_comp ']'

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '~'           shift, and go to state 65
    ']'           shift, and go to state 162
    '{'           shift, and go to state 66

    test           go to state 159
    or_test        go to state 96
    and_test       go to state 97
    not_test       go to state 98
    comparison     go to state 99
    star_expr      go to state 160
    expr           go to state 101
    xor_expr       go to state 102
    and_expr       go to state 103
    shift_expr     go to state 104
    arith_expr     go to state 105
    term           go to state 106
    factor         go to state 107
    power          go to state 108
    str_seq        go to state 109
    atom           go to state 110
    testlist_comp  go to state 163


State 62

  226 factor: '+' . factor

    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    factor   go to state 164
    power    go to state 108
    str_seq  go to state 109
    atom     go to state 110


State 63

  227 factor: '-' . factor

    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    factor   go to state 165
    power    go to state 108
    str_seq  go to state 109
    atom     go to state 110


State 64

  191 star_expr: '*' . expr

    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    expr        go to state 166
    xor_expr    go to state 102
    and_expr    go to state 103
    shift_expr  go to state 104
    arith_expr  go to state 105
    term        go to state 106
    factor      go to state 107
    power       go to state 108
    str_seq     go to state 109
    atom        go to state 110


State 65

  228 factor: '~' . factor

    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    factor   go to state 167
    power    go to state 108
    str_seq  go to state 109
    atom     go to state 110


State 66

  241 atom: '{' . '}'
  243     | '{' . dictorsetmaker '}'

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66
    '}'           shift, and go to state 168

    test            go to state 169
    or_test         go to state 96
    and_test        go to state 97
    not_test        go to state 98
    comparison      go to state 99
    expr            go to state 101
    xor_expr        go to state 102
    and_expr        go to state 103
    shift_expr      go to state 104
    arith_expr      go to state 105
    term            go to state 106
    factor          go to state 107
    power           go to state 108
    str_seq         go to state 109
    atom            go to state 110
    dictorsetmaker  go to state 170


State 67

  116 compound_stmt: funcdef .

    $default  reduce using rule 116 (compound_stmt)


State 68

    6 funcdef: funcheader . suite

    IMPORT        shift, and go to state 1
    END           shift, and go to state 33
    NOT           shift, and go to state 34
    DEF           shift, and go to state 35
    IF            shift, and go to state 36
    WHILE         shift, and go to state 37
    FOR           shift, and go to state 38
    TRY           shift, and go to state 39
    NONLOCAL      shift, and go to state 40
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    WITH          shift, and go to state 48
    DEL           shift, and go to state 49
    RETURN        shift, and go to state 50
    PRINT         shift, and go to state 51
    GLOBAL        shift, and go to state 52
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    PASS          shift, and go to state 55
    CHAR_VALUE    shift, and go to state 56
    BREAK         shift, and go to state 57
    CONTINUE      shift, and go to state 58
    ','           shift, and go to state 59
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    funcdef               go to state 67
    funcheader            go to state 68
    stmt                  go to state 69
    simple_stmt           go to state 70
    small_stmt            go to state 71
    expr_stmt             go to state 72
    testlist_star_expr    go to state 73
    comma_test_star       go to state 74
    comma_test_star_seqJ  go to state 75
    print_stmt            go to state 76
    del_stmt              go to state 77
    pass_stmt             go to state 78
    flow_stmt             go to state 79
    break_stmt            go to state 80
    continue_stmt         go to state 81
    return_stmt           go to state 82
    import_stmt           go to state 83
    import_name           go to state 13
    global_stmt           go to state 84
    nonlocal_stmt         go to state 85
    compound_stmt         go to state 86
    vardef                go to state 87
    if_stmt               go to state 88
    while_stmt            go to state 89
    for_stmt              go to state 90
    try_stmt              go to state 91
    with_stmt             go to state 92
    list_stmt             go to state 93
    suite                 go to state 171
    test                  go to state 95
    or_test               go to state 96
    and_test              go to state 97
    not_test              go to state 98
    comparison            go to state 99
    star_expr             go to state 100
    expr                  go to state 101
    xor_expr              go to state 102
    and_expr              go to state 103
    shift_expr            go to state 104
    arith_expr            go to state 105
    term                  go to state 106
    factor                go to state 107
    power                 go to state 108
    str_seq               go to state 109
    atom                  go to state 110


State 69

  160 list_stmt: stmt .

    $default  reduce using rule 160 (list_stmt)


State 70

   41 stmt: simple_stmt .

    $default  reduce using rule 41 (stmt)


State 71

   43 simple_stmt: small_stmt . ';'

    ';'  shift, and go to state 172


State 72

   44 small_stmt: expr_stmt .

    $default  reduce using rule 44 (small_stmt)


State 73

   52 expr_stmt: testlist_star_expr . augassign testlist
   53          | testlist_star_expr .
   54          | testlist_star_expr . right_testlist

    PLUS_EQUAL         shift, and go to state 173
    MINUS_EQUAL        shift, and go to state 174
    DIV_EQUAL          shift, and go to state 175
    MOD_EQUAL          shift, and go to state 176
    AND_EQUAL          shift, and go to state 177
    OR_EQUAL           shift, and go to state 178
    SHAPOO_EQUAL       shift, and go to state 179
    LESS_THAN_2_EQUAL  shift, and go to state 180
    MORE_THAN_2_EQUAL  shift, and go to state 181
    STAR_2_EQUAL       shift, and go to state 182
    DIV_2_EQUAL        shift, and go to state 183
    STAR_EQUAL         shift, and go to state 184
    '='                shift, and go to state 185

    $default  reduce using rule 53 (expr_stmt)

    right_testlist  go to state 186
    augassign       go to state 187


State 74

   67 comma_test_star_seqJ: comma_test_star .

    $default  reduce using rule 67 (comma_test_star_seqJ)


State 75

   57 testlist_star_expr: comma_test_star_seqJ .
   58                   | comma_test_star_seqJ . ','
   66 comma_test_star_seqJ: comma_test_star_seqJ . comma_test_star

    ','  shift, and go to state 188

    $default  reduce using rule 57 (testlist_star_expr)

    comma_test_star  go to state 189


State 76

   51 small_stmt: print_stmt .

    $default  reduce using rule 51 (small_stmt)


State 77

   45 small_stmt: del_stmt .

    $default  reduce using rule 45 (small_stmt)


State 78

   46 small_stmt: pass_stmt .

    $default  reduce using rule 46 (small_stmt)


State 79

   47 small_stmt: flow_stmt .

    $default  reduce using rule 47 (small_stmt)


State 80

   86 flow_stmt: break_stmt .

    $default  reduce using rule 86 (flow_stmt)


State 81

   87 flow_stmt: continue_stmt .

    $default  reduce using rule 87 (flow_stmt)


State 82

   88 flow_stmt: return_stmt .

    $default  reduce using rule 88 (flow_stmt)


State 83

   48 small_stmt: import_stmt .

    $default  reduce using rule 48 (small_stmt)


State 84

   49 small_stmt: global_stmt .

    $default  reduce using rule 49 (small_stmt)


State 85

   50 small_stmt: nonlocal_stmt .

    $default  reduce using rule 50 (small_stmt)


State 86

   42 stmt: compound_stmt .

    $default  reduce using rule 42 (stmt)


State 87

  117 compound_stmt: vardef . ';'

    ';'  shift, and go to state 190


State 88

  111 compound_stmt: if_stmt .

    $default  reduce using rule 111 (compound_stmt)


State 89

  112 compound_stmt: while_stmt .

    $default  reduce using rule 112 (compound_stmt)


State 90

  113 compound_stmt: for_stmt .

    $default  reduce using rule 113 (compound_stmt)


State 91

  114 compound_stmt: try_stmt .

    $default  reduce using rule 114 (compound_stmt)


State 92

  115 compound_stmt: with_stmt .

    $default  reduce using rule 115 (compound_stmt)


State 93

  161 list_stmt: list_stmt . stmt
  162 suite: list_stmt . END

    IMPORT        shift, and go to state 1
    END           shift, and go to state 191
    NOT           shift, and go to state 34
    DEF           shift, and go to state 35
    IF            shift, and go to state 36
    WHILE         shift, and go to state 37
    FOR           shift, and go to state 38
    TRY           shift, and go to state 39
    NONLOCAL      shift, and go to state 40
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    WITH          shift, and go to state 48
    DEL           shift, and go to state 49
    RETURN        shift, and go to state 50
    PRINT         shift, and go to state 51
    GLOBAL        shift, and go to state 52
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    PASS          shift, and go to state 55
    CHAR_VALUE    shift, and go to state 56
    BREAK         shift, and go to state 57
    CONTINUE      shift, and go to state 58
    ','           shift, and go to state 59
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    funcdef               go to state 67
    funcheader            go to state 68
    stmt                  go to state 192
    simple_stmt           go to state 70
    small_stmt            go to state 71
    expr_stmt             go to state 72
    testlist_star_expr    go to state 73
    comma_test_star       go to state 74
    comma_test_star_seqJ  go to state 75
    print_stmt            go to state 76
    del_stmt              go to state 77
    pass_stmt             go to state 78
    flow_stmt             go to state 79
    break_stmt            go to state 80
    continue_stmt         go to state 81
    return_stmt           go to state 82
    import_stmt           go to state 83
    import_name           go to state 13
    global_stmt           go to state 84
    nonlocal_stmt         go to state 85
    compound_stmt         go to state 86
    vardef                go to state 87
    if_stmt               go to state 88
    while_stmt            go to state 89
    for_stmt              go to state 90
    try_stmt              go to state 91
    with_stmt             go to state 92
    test                  go to state 95
    or_test               go to state 96
    and_test              go to state 97
    not_test              go to state 98
    comparison            go to state 99
    star_expr             go to state 100
    expr                  go to state 101
    xor_expr              go to state 102
    and_expr              go to state 103
    shift_expr            go to state 104
    arith_expr            go to state 105
    term                  go to state 106
    factor                go to state 107
    power                 go to state 108
    str_seq               go to state 109
    atom                  go to state 110


State 94

  324 classdef: classheader suite .

    $default  reduce using rule 324 (classdef)


State 95

   60 testlist_star_expr: test . comma_test_star_seqJ
   61                   | test .

    ','  shift, and go to state 193

    $default  reduce using rule 61 (testlist_star_expr)

    comma_test_star       go to state 74
    comma_test_star_seqJ  go to state 194


State 96

  164 test: or_test .
  165     | or_test . IF or_test ELSE test

    IF  shift, and go to state 195

    $default  reduce using rule 164 (test)


State 97

  168 or_test: and_test .
  169        | and_test . or_seq

    OR  shift, and go to state 196

    $default  reduce using rule 168 (or_test)

    or_seq  go to state 197


State 98

  172 and_test: not_test .
  173         | not_test . and_seq

    AND  shift, and go to state 198

    $default  reduce using rule 172 (and_test)

    and_seq  go to state 199


State 99

  175 not_test: comparison .

    $default  reduce using rule 175 (not_test)


State 100

   62 testlist_star_expr: star_expr . comma_test_star_seqJ ','
   63                   | star_expr . ','

    ','  shift, and go to state 200

    comma_test_star       go to state 74
    comma_test_star_seqJ  go to state 201


State 101

  178 comparison: expr .
  179           | expr . comp_op_seq

    NOT            shift, and go to state 202
    NOT_EQUAL      shift, and go to state 203
    IN             shift, and go to state 204
    MORE_LESS      shift, and go to state 205
    EQUAL          shift, and go to state 206
    IS             shift, and go to state 207
    LESS_OR_EQUAL  shift, and go to state 208
    MORE_OR_EQUAL  shift, and go to state 209
    '<'            shift, and go to state 210
    '>'            shift, and go to state 211

    $default  reduce using rule 178 (comparison)

    comp_op_seq  go to state 212
    comp_op      go to state 213


State 102

  194 expr: xor_expr .
  195     | xor_expr . or_xor_expr_seq

    '|'  shift, and go to state 214

    $default  reduce using rule 194 (expr)

    or_xor_expr_seq  go to state 215


State 103

  198 xor_expr: and_expr .
  199         | and_expr . sha_and_expr_seq

    '^'  shift, and go to state 216

    $default  reduce using rule 198 (xor_expr)

    sha_and_expr_seq  go to state 217


State 104

  202 and_expr: shift_expr .
  203         | shift_expr . and_shift_expr_seq

    '&'  shift, and go to state 218

    $default  reduce using rule 202 (and_expr)

    and_shift_expr_seq  go to state 219


State 105

  208 shift_expr: arith_expr .
  209           | arith_expr . arith_seq

    LESS_THAN_2  shift, and go to state 220
    MORE_THAN_2  shift, and go to state 221

    $default  reduce using rule 208 (shift_expr)

    arith_seq  go to state 222


State 106

  214 arith_expr: term .
  215           | term . term_seq

    '+'  shift, and go to state 223
    '-'  shift, and go to state 224

    $default  reduce using rule 214 (arith_expr)

    term_seq  go to state 225


State 107

  224 term: factor .
  225     | factor . factor_seq

    DIV_2  shift, and go to state 226
    '*'    shift, and go to state 227
    '/'    shift, and go to state 228
    '%'    shift, and go to state 229

    $default  reduce using rule 224 (term)

    factor_seq  go to state 230


State 108

  229 factor: power .

    $default  reduce using rule 229 (factor)


State 109

  237 str_seq: str_seq . STRING
  252 atom: str_seq .

    STRING  shift, and go to state 231

    $default  reduce using rule 252 (atom)


State 110

  232 power: atom .
  233      | atom . trailer_seq
  234      | atom . trailer_seq STAR_2 factor
  235      | atom . STAR_2 factor

    STAR_2  shift, and go to state 232
    '.'     shift, and go to state 233

    $default  reduce using rule 232 (power)

    trailer_seq  go to state 234
    trailer      go to state 235


State 111

  103 dotted_name_seq: '.' . NAME

    NAME  shift, and go to state 236


State 112

  102 dotted_name: NAME dotted_name_seq .
  104 dotted_name_seq: dotted_name_seq . '.' NAME

    '.'  shift, and go to state 237

    $default  reduce using rule 102 (dotted_name)


State 113

   95 comma_dotted_as_name_seq: ',' . dotted_as_name

    NAME  shift, and go to state 16

    dotted_as_name  go to state 238
    dotted_name     go to state 19


State 114

   96 comma_dotted_as_name_seq: comma_dotted_as_name_seq . ',' dotted_as_name
   98 dotted_as_names: dotted_as_name comma_dotted_as_name_seq .

    ','  shift, and go to state 239

    $default  reduce using rule 98 (dotted_as_names)


State 115

  100 dotted_as_name: dotted_name AS . NAME

    NAME  shift, and go to state 240


State 116

  341 classheader: CLASS NAME '(' . ')' ':'
  357            | CLASS NAME '(' . dotted_as_names ')' ':'

    NAME  shift, and go to state 16
    ')'   shift, and go to state 241

    dotted_as_names  go to state 242
    dotted_as_name   go to state 18
    dotted_name      go to state 19


State 117

  325 classheader: CLASS NAME ':' .

    $default  reduce using rule 325 (classheader)


State 118

  328 classheader: FINAL CLASS NAME . ':'
  344            | FINAL CLASS NAME . '(' ')' ':'
  360            | FINAL CLASS NAME . '(' dotted_as_names ')' ':'

    '('  shift, and go to state 243
    ':'  shift, and go to state 244


State 119

  330 classheader: FINAL STATIC CLASS . NAME ':'
  346            | FINAL STATIC CLASS . NAME '(' ')' ':'
  362            | FINAL STATIC CLASS . NAME '(' dotted_as_names ')' ':'

    NAME  shift, and go to state 245


State 120

  334 classheader: FINAL STATIC access . CLASS NAME ':'
  350            | FINAL STATIC access . CLASS NAME '(' ')' ':'
  366            | FINAL STATIC access . CLASS NAME '(' dotted_as_names ')' ':'

    CLASS  shift, and go to state 246


State 121

  331 classheader: FINAL access CLASS . NAME ':'
  348            | FINAL access CLASS . NAME '(' ')' ':'
  364            | FINAL access CLASS . NAME '(' dotted_as_names ')' ':'

    NAME  shift, and go to state 247


State 122

  340 classheader: FINAL access STATIC . CLASS NAME ':'
  356            | FINAL access STATIC . CLASS NAME '(' ')' ':'
  372            | FINAL access STATIC . CLASS NAME '(' dotted_as_names ')' ':'

    CLASS  shift, and go to state 248


State 123

  327 classheader: STATIC CLASS NAME . ':'
  343            | STATIC CLASS NAME . '(' ')' ':'
  359            | STATIC CLASS NAME . '(' dotted_as_names ')' ':'

    '('  shift, and go to state 249
    ':'  shift, and go to state 250


State 124

  329 classheader: STATIC FINAL CLASS . NAME ':'
  345            | STATIC FINAL CLASS . NAME '(' ')' ':'
  361            | STATIC FINAL CLASS . NAME '(' dotted_as_names ')' ':'

    NAME  shift, and go to state 251


State 125

  333 classheader: STATIC FINAL access . CLASS NAME ':'
  349            | STATIC FINAL access . CLASS NAME '(' ')' ':'
  365            | STATIC FINAL access . CLASS NAME '(' dotted_as_names ')' ':'

    CLASS  shift, and go to state 252


State 126

  332 classheader: STATIC access CLASS . NAME ':'
  347            | STATIC access CLASS . NAME '(' ')' ':'
  363            | STATIC access CLASS . NAME '(' dotted_as_names ')' ':'

    NAME  shift, and go to state 253


State 127

  339 classheader: STATIC access FINAL . CLASS NAME ':'
  355            | STATIC access FINAL . CLASS NAME '(' ')' ':'
  371            | STATIC access FINAL . CLASS NAME '(' dotted_as_names ')' ':'

    CLASS  shift, and go to state 254


State 128

  326 classheader: access CLASS NAME . ':'
  342            | access CLASS NAME . '(' ')' ':'
  358            | access CLASS NAME . '(' dotted_as_names ')' ':'

    '('  shift, and go to state 255
    ':'  shift, and go to state 256


State 129

  336 classheader: access FINAL CLASS . NAME ':'
  352            | access FINAL CLASS . NAME '(' ')' ':'
  368            | access FINAL CLASS . NAME '(' dotted_as_names ')' ':'

    NAME  shift, and go to state 257


State 130

  338 classheader: access FINAL STATIC . CLASS NAME ':'
  354            | access FINAL STATIC . CLASS NAME '(' ')' ':'
  370            | access FINAL STATIC . CLASS NAME '(' dotted_as_names ')' ':'

    CLASS  shift, and go to state 258


State 131

  335 classheader: access STATIC CLASS . NAME ':'
  351            | access STATIC CLASS . NAME '(' ')' ':'
  367            | access STATIC CLASS . NAME '(' dotted_as_names ')' ':'

    NAME  shift, and go to state 259


State 132

  337 classheader: access STATIC FINAL . CLASS NAME ':'
  353            | access STATIC FINAL . CLASS NAME '(' ')' ':'
  369            | access STATIC FINAL . CLASS NAME '(' dotted_as_names ')' ':'

    CLASS  shift, and go to state 260


State 133

    2 program: import_stmt ';' temp2 .

    $default  reduce using rule 2 (program)


State 134

  174 not_test: NOT not_test .

    $default  reduce using rule 174 (not_test)


State 135

   12 funcheader: DEF FINAL . NAME parameters ARROW test ':'
   14           | DEF FINAL . NAME parameters ':'
   16           | DEF FINAL . STATIC NAME parameters ARROW test ':'
   18           | DEF FINAL . STATIC NAME parameters ':'
   19           | DEF FINAL . access NAME parameters ARROW test ':'
   22           | DEF FINAL . access NAME parameters ':'
   24           | DEF FINAL . STATIC access NAME parameters ARROW test ':'
   26           | DEF FINAL . STATIC access NAME parameters ':'
   36           | DEF FINAL . access STATIC NAME parameters ARROW test ':'
   38           | DEF FINAL . access STATIC NAME parameters ':'
  122 vardef: DEF FINAL . NAME
  124       | DEF FINAL . STATIC NAME
  126       | DEF FINAL . access NAME
  128       | DEF FINAL . STATIC access NAME
  134       | DEF FINAL . access STATIC NAME
  328 classheader: FINAL . CLASS NAME ':'
  330            | FINAL . STATIC CLASS NAME ':'
  331            | FINAL . access CLASS NAME ':'
  334            | FINAL . STATIC access CLASS NAME ':'
  340            | FINAL . access STATIC CLASS NAME ':'
  344            | FINAL . CLASS NAME '(' ')' ':'
  346            | FINAL . STATIC CLASS NAME '(' ')' ':'
  348            | FINAL . access CLASS NAME '(' ')' ':'
  350            | FINAL . STATIC access CLASS NAME '(' ')' ':'
  356            | FINAL . access STATIC CLASS NAME '(' ')' ':'
  360            | FINAL . CLASS NAME '(' dotted_as_names ')' ':'
  362            | FINAL . STATIC CLASS NAME '(' dotted_as_names ')' ':'
  364            | FINAL . access CLASS NAME '(' dotted_as_names ')' ':'
  366            | FINAL . STATIC access CLASS NAME '(' dotted_as_names ')' ':'
  372            | FINAL . access STATIC CLASS NAME '(' dotted_as_names ')' ':'

    CLASS      shift, and go to state 21
    STATIC     shift, and go to state 261
    NAME       shift, and go to state 262
    PRIVATE    shift, and go to state 5
    PUBLIC     shift, and go to state 6
    PROTECTED  shift, and go to state 7

    access  go to state 263


State 136

   11 funcheader: DEF STATIC . NAME parameters ARROW test ':'
   13           | DEF STATIC . NAME parameters ':'
   15           | DEF STATIC . FINAL NAME parameters ARROW test ':'
   17           | DEF STATIC . FINAL NAME parameters ':'
   20           | DEF STATIC . access NAME parameters ARROW test ':'
   21           | DEF STATIC . access NAME parameters ':'
   23           | DEF STATIC . FINAL access NAME parameters ARROW test ':'
   25           | DEF STATIC . FINAL access NAME parameters ':'
   35           | DEF STATIC . access FINAL NAME parameters ARROW test ':'
   37           | DEF STATIC . access FINAL NAME parameters ':'
  121 vardef: DEF STATIC . NAME
  123       | DEF STATIC . FINAL NAME
  125       | DEF STATIC . access NAME
  127       | DEF STATIC . FINAL access NAME
  133       | DEF STATIC . access FINAL NAME
  327 classheader: STATIC . CLASS NAME ':'
  329            | STATIC . FINAL CLASS NAME ':'
  332            | STATIC . access CLASS NAME ':'
  333            | STATIC . FINAL access CLASS NAME ':'
  339            | STATIC . access FINAL CLASS NAME ':'
  343            | STATIC . CLASS NAME '(' ')' ':'
  345            | STATIC . FINAL CLASS NAME '(' ')' ':'
  347            | STATIC . access CLASS NAME '(' ')' ':'
  349            | STATIC . FINAL access CLASS NAME '(' ')' ':'
  355            | STATIC . access FINAL CLASS NAME '(' ')' ':'
  359            | STATIC . CLASS NAME '(' dotted_as_names ')' ':'
  361            | STATIC . FINAL CLASS NAME '(' dotted_as_names ')' ':'
  363            | STATIC . access CLASS NAME '(' dotted_as_names ')' ':'
  365            | STATIC . FINAL access CLASS NAME '(' dotted_as_names ')' ':'
  371            | STATIC . access FINAL CLASS NAME '(' dotted_as_names ')' ':'

    CLASS      shift, and go to state 24
    FINAL      shift, and go to state 264
    NAME       shift, and go to state 265
    PRIVATE    shift, and go to state 5
    PUBLIC     shift, and go to state 6
    PROTECTED  shift, and go to state 7

    access  go to state 266


State 137

    7 funcheader: DEF NAME . parameters ARROW test ':'
    9           | DEF NAME . parameters ':'
  119 vardef: DEF NAME .

    '('  shift, and go to state 267

    $default  reduce using rule 119 (vardef)

    parameters  go to state 268


State 138

    8 funcheader: DEF access . NAME parameters ARROW test ':'
   10           | DEF access . NAME parameters ':'
   27           | DEF access . STATIC NAME parameters ARROW test ':'
   28           | DEF access . FINAL NAME parameters ARROW test ':'
   29           | DEF access . STATIC NAME parameters ':'
   30           | DEF access . FINAL NAME parameters ':'
   31           | DEF access . STATIC FINAL NAME parameters ARROW test ':'
   32           | DEF access . FINAL STATIC NAME parameters ARROW test ':'
   33           | DEF access . STATIC FINAL NAME parameters ':'
   34           | DEF access . FINAL STATIC NAME parameters ':'
  120 vardef: DEF access . NAME
  129       | DEF access . STATIC NAME
  130       | DEF access . FINAL NAME
  131       | DEF access . STATIC FINAL NAME
  132       | DEF access . FINAL STATIC NAME
  326 classheader: access . CLASS NAME ':'
  335            | access . STATIC CLASS NAME ':'
  336            | access . FINAL CLASS NAME ':'
  337            | access . STATIC FINAL CLASS NAME ':'
  338            | access . FINAL STATIC CLASS NAME ':'
  342            | access . CLASS NAME '(' ')' ':'
  351            | access . STATIC CLASS NAME '(' ')' ':'
  352            | access . FINAL CLASS NAME '(' ')' ':'
  353            | access . STATIC FINAL CLASS NAME '(' ')' ':'
  354            | access . FINAL STATIC CLASS NAME '(' ')' ':'
  358            | access . CLASS NAME '(' dotted_as_names ')' ':'
  367            | access . STATIC CLASS NAME '(' dotted_as_names ')' ':'
  368            | access . FINAL CLASS NAME '(' dotted_as_names ')' ':'
  369            | access . STATIC FINAL CLASS NAME '(' dotted_as_names ')' ':'
  370            | access . FINAL STATIC CLASS NAME '(' dotted_as_names ')' ':'

    CLASS   shift, and go to state 28
    FINAL   shift, and go to state 269
    STATIC  shift, and go to state 270
    NAME    shift, and go to state 271


State 139

  118 compound_stmt: DEF classdef .

    $default  reduce using rule 118 (compound_stmt)


State 140

  137 if_stmt: IF test . ':' suite
  138        | IF test . ':' suite elif_seq
  139        | IF test . ':' suite ELSE ':' suite
  140        | IF test . ':' suite elif_seq ELSE ':' suite

    ':'  shift, and go to state 272


State 141

  141 while_stmt: WHILE test . ':' suite
  142           | WHILE test . ':' suite ELSE ':' suite

    ':'  shift, and go to state 273


State 142

  298 exprlist: star_expr .
  299         | star_expr . comma_expr_star_seq
  302         | star_expr . ','
  303         | star_expr . comma_expr_star_seq ','

    ','  shift, and go to state 274

    $default  reduce using rule 298 (exprlist)

    comma_expr_star_seq  go to state 275


State 143

  296 exprlist: expr .
  297         | expr . comma_expr_star_seq
  300         | expr . ','
  301         | expr . comma_expr_star_seq ','

    ','  shift, and go to state 276

    $default  reduce using rule 296 (exprlist)

    comma_expr_star_seq  go to state 277


State 144

  143 for_stmt: FOR exprlist . IN testlist ':' suite
  144         | FOR exprlist . IN testlist ':' suite ELSE ':' suite

    IN  shift, and go to state 278


State 145

  145 try_stmt: TRY ':' . suite try_except_cla_seq
  146         | TRY ':' . suite try_except_cla_seq ELSE ':' suite
  147         | TRY ':' . suite try_except_cla_seq FINALLY ':' suite
  148         | TRY ':' . suite FINALLY ':' suite

    IMPORT        shift, and go to state 1
    END           shift, and go to state 33
    NOT           shift, and go to state 34
    DEF           shift, and go to state 35
    IF            shift, and go to state 36
    WHILE         shift, and go to state 37
    FOR           shift, and go to state 38
    TRY           shift, and go to state 39
    NONLOCAL      shift, and go to state 40
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    WITH          shift, and go to state 48
    DEL           shift, and go to state 49
    RETURN        shift, and go to state 50
    PRINT         shift, and go to state 51
    GLOBAL        shift, and go to state 52
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    PASS          shift, and go to state 55
    CHAR_VALUE    shift, and go to state 56
    BREAK         shift, and go to state 57
    CONTINUE      shift, and go to state 58
    ','           shift, and go to state 59
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    funcdef               go to state 67
    funcheader            go to state 68
    stmt                  go to state 69
    simple_stmt           go to state 70
    small_stmt            go to state 71
    expr_stmt             go to state 72
    testlist_star_expr    go to state 73
    comma_test_star       go to state 74
    comma_test_star_seqJ  go to state 75
    print_stmt            go to state 76
    del_stmt              go to state 77
    pass_stmt             go to state 78
    flow_stmt             go to state 79
    break_stmt            go to state 80
    continue_stmt         go to state 81
    return_stmt           go to state 82
    import_stmt           go to state 83
    import_name           go to state 13
    global_stmt           go to state 84
    nonlocal_stmt         go to state 85
    compound_stmt         go to state 86
    vardef                go to state 87
    if_stmt               go to state 88
    while_stmt            go to state 89
    for_stmt              go to state 90
    try_stmt              go to state 91
    with_stmt             go to state 92
    list_stmt             go to state 93
    suite                 go to state 279
    test                  go to state 95
    or_test               go to state 96
    and_test              go to state 97
    not_test              go to state 98
    comparison            go to state 99
    star_expr             go to state 100
    expr                  go to state 101
    xor_expr              go to state 102
    and_expr              go to state 103
    shift_expr            go to state 104
    arith_expr            go to state 105
    term                  go to state 106
    factor                go to state 107
    power                 go to state 108
    str_seq               go to state 109
    atom                  go to state 110


State 146

  109 nonlocal_stmt: NONLOCAL NAME .
  110              | NONLOCAL NAME . comma_name_seq

    ','  shift, and go to state 280

    $default  reduce using rule 109 (nonlocal_stmt)

    comma_name_seq  go to state 281


State 147

  245 atom: NAME '(' . ')'
  246     | NAME '(' . arglist ')'

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    STAR_2        shift, and go to state 282
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 283
    ')'           shift, and go to state 284
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    test           go to state 285
    or_test        go to state 96
    and_test       go to state 97
    not_test       go to state 98
    comparison     go to state 99
    expr           go to state 101
    xor_expr       go to state 102
    and_expr       go to state 103
    shift_expr     go to state 104
    arith_expr     go to state 105
    term           go to state 106
    factor         go to state 107
    power          go to state 108
    str_seq        go to state 109
    atom           go to state 110
    arg_comma_seq  go to state 286
    arglist        go to state 287
    default_arg    go to state 288
    argument       go to state 289


State 148

  247 atom: NAME '[' . subscriptlist ']'

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    ':'           shift, and go to state 290
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    test           go to state 291
    or_test        go to state 96
    and_test       go to state 97
    not_test       go to state 98
    comparison     go to state 99
    expr           go to state 101
    xor_expr       go to state 102
    and_expr       go to state 103
    shift_expr     go to state 104
    arith_expr     go to state 105
    term           go to state 106
    factor         go to state 107
    power          go to state 108
    str_seq        go to state 109
    atom           go to state 110
    subscriptlist  go to state 292
    subscript      go to state 293


State 149

  153 with_stmt: WITH with_item . ':' suite
  154          | WITH with_item . with_seq ':' suite

    ','  shift, and go to state 294
    ':'  shift, and go to state 295

    with_seq  go to state 296


State 150

  155 with_item: test .
  156          | test . AS expr

    AS  shift, and go to state 297

    $default  reduce using rule 155 (with_item)


State 151

   84 del_stmt: DEL exprlist .

    $default  reduce using rule 84 (del_stmt)


State 152

  306 testlist: test .
  307         | test . comma_test
  308         | test . ','
  309         | test . comma_test ','

    ','  shift, and go to state 298

    $default  reduce using rule 306 (testlist)

    comma_test  go to state 299


State 153

   91 return_stmt: RETURN testlist .

    $default  reduce using rule 91 (return_stmt)


State 154

   83 print_stmt: PRINT exprlist .

    $default  reduce using rule 83 (print_stmt)


State 155

  107 global_stmt: GLOBAL NAME .
  108            | GLOBAL NAME . comma_name_seq

    ','  shift, and go to state 280

    $default  reduce using rule 107 (global_stmt)

    comma_name_seq  go to state 300


State 156

   64 comma_test_star: ',' test .

    $default  reduce using rule 64 (comma_test_star)


State 157

   65 comma_test_star: ',' star_expr .

    $default  reduce using rule 65 (comma_test_star)


State 158

  238 atom: '(' ')' .

    $default  reduce using rule 238 (atom)


State 159

  261 testlist_comp: test . comp_for
  262              | test .
  263              | test . comma_test_star_seq
  264              | test . ','
  265              | test . comma_test_star_seq ','

    FOR  shift, and go to state 301
    ','  shift, and go to state 302

    $default  reduce using rule 262 (testlist_comp)

    comma_test_star_seq  go to state 303
    comp_for             go to state 304


State 160

  266 testlist_comp: star_expr . comp_for
  267              | star_expr .
  268              | star_expr . comma_test_star_seq
  269              | star_expr . ','
  270              | star_expr . comma_test_star_seq ','

    FOR  shift, and go to state 301
    ','  shift, and go to state 305

    $default  reduce using rule 267 (testlist_comp)

    comma_test_star_seq  go to state 306
    comp_for             go to state 307


State 161

  239 atom: '(' testlist_comp . ')'

    ')'  shift, and go to state 308


State 162

  240 atom: '[' ']' .

    $default  reduce using rule 240 (atom)


State 163

  242 atom: '[' testlist_comp . ']'

    ']'  shift, and go to state 309


State 164

  226 factor: '+' factor .

    $default  reduce using rule 226 (factor)


State 165

  227 factor: '-' factor .

    $default  reduce using rule 227 (factor)


State 166

  191 star_expr: '*' expr .

    $default  reduce using rule 191 (star_expr)


State 167

  228 factor: '~' factor .

    $default  reduce using rule 228 (factor)


State 168

  241 atom: '{' '}' .

    $default  reduce using rule 241 (atom)


State 169

  314 dictorsetmaker: test . ':' test comp_for
  315               | test . ':' test
  316               | test . ':' test ','
  317               | test . ':' test comma_test_colon_test_seq
  318               | test . ':' test comma_test_colon_test_seq ','
  319               | test . comp_for
  320               | test .
  321               | test . ','
  322               | test . comma_test_seq
  323               | test . comma_test_seq ','

    FOR  shift, and go to state 301
    ','  shift, and go to state 310
    ':'  shift, and go to state 311

    $default  reduce using rule 320 (dictorsetmaker)

    comma_test_seq  go to state 312
    comp_for        go to state 313


State 170

  243 atom: '{' dictorsetmaker . '}'

    '}'  shift, and go to state 314


State 171

    6 funcdef: funcheader suite .

    $default  reduce using rule 6 (funcdef)


State 172

   43 simple_stmt: small_stmt ';' .

    $default  reduce using rule 43 (simple_stmt)


State 173

   68 augassign: PLUS_EQUAL .

    $default  reduce using rule 68 (augassign)


State 174

   69 augassign: MINUS_EQUAL .

    $default  reduce using rule 69 (augassign)


State 175

   71 augassign: DIV_EQUAL .

    $default  reduce using rule 71 (augassign)


State 176

   72 augassign: MOD_EQUAL .

    $default  reduce using rule 72 (augassign)


State 177

   73 augassign: AND_EQUAL .

    $default  reduce using rule 73 (augassign)


State 178

   74 augassign: OR_EQUAL .

    $default  reduce using rule 74 (augassign)


State 179

   75 augassign: SHAPOO_EQUAL .

    $default  reduce using rule 75 (augassign)


State 180

   76 augassign: LESS_THAN_2_EQUAL .

    $default  reduce using rule 76 (augassign)


State 181

   77 augassign: MORE_THAN_2_EQUAL .

    $default  reduce using rule 77 (augassign)


State 182

   78 augassign: STAR_2_EQUAL .

    $default  reduce using rule 78 (augassign)


State 183

   79 augassign: DIV_2_EQUAL .

    $default  reduce using rule 79 (augassign)


State 184

   70 augassign: STAR_EQUAL .

    $default  reduce using rule 70 (augassign)


State 185

   55 right_testlist: '=' . testlist_star_expr right_testlist
   56               | '=' . testlist_star_expr

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    ','           shift, and go to state 59
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    testlist_star_expr    go to state 315
    comma_test_star       go to state 74
    comma_test_star_seqJ  go to state 75
    test                  go to state 95
    or_test               go to state 96
    and_test              go to state 97
    not_test              go to state 98
    comparison            go to state 99
    star_expr             go to state 100
    expr                  go to state 101
    xor_expr              go to state 102
    and_expr              go to state 103
    shift_expr            go to state 104
    arith_expr            go to state 105
    term                  go to state 106
    factor                go to state 107
    power                 go to state 108
    str_seq               go to state 109
    atom                  go to state 110


State 186

   54 expr_stmt: testlist_star_expr right_testlist .

    $default  reduce using rule 54 (expr_stmt)


State 187

   52 expr_stmt: testlist_star_expr augassign . testlist

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    test        go to state 152
    or_test     go to state 96
    and_test    go to state 97
    not_test    go to state 98
    comparison  go to state 99
    expr        go to state 101
    xor_expr    go to state 102
    and_expr    go to state 103
    shift_expr  go to state 104
    arith_expr  go to state 105
    term        go to state 106
    factor      go to state 107
    power       go to state 108
    str_seq     go to state 109
    atom        go to state 110
    testlist    go to state 316


State 188

   58 testlist_star_expr: comma_test_star_seqJ ',' .
   64 comma_test_star: ',' . test
   65                | ',' . star_expr

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    $default  reduce using rule 58 (testlist_star_expr)

    test        go to state 156
    or_test     go to state 96
    and_test    go to state 97
    not_test    go to state 98
    comparison  go to state 99
    star_expr   go to state 157
    expr        go to state 101
    xor_expr    go to state 102
    and_expr    go to state 103
    shift_expr  go to state 104
    arith_expr  go to state 105
    term        go to state 106
    factor      go to state 107
    power       go to state 108
    str_seq     go to state 109
    atom        go to state 110


State 189

   66 comma_test_star_seqJ: comma_test_star_seqJ comma_test_star .

    $default  reduce using rule 66 (comma_test_star_seqJ)


State 190

  117 compound_stmt: vardef ';' .

    $default  reduce using rule 117 (compound_stmt)


State 191

  162 suite: list_stmt END .

    $default  reduce using rule 162 (suite)


State 192

  161 list_stmt: list_stmt stmt .

    $default  reduce using rule 161 (list_stmt)


State 193

   64 comma_test_star: ',' . test
   65                | ',' . star_expr

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    test        go to state 156
    or_test     go to state 96
    and_test    go to state 97
    not_test    go to state 98
    comparison  go to state 99
    star_expr   go to state 157
    expr        go to state 101
    xor_expr    go to state 102
    and_expr    go to state 103
    shift_expr  go to state 104
    arith_expr  go to state 105
    term        go to state 106
    factor      go to state 107
    power       go to state 108
    str_seq     go to state 109
    atom        go to state 110


State 194

   60 testlist_star_expr: test comma_test_star_seqJ .
   66 comma_test_star_seqJ: comma_test_star_seqJ . comma_test_star

    ','  shift, and go to state 193

    $default  reduce using rule 60 (testlist_star_expr)

    comma_test_star  go to state 189


State 195

  165 test: or_test IF . or_test ELSE test

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    or_test     go to state 317
    and_test    go to state 97
    not_test    go to state 98
    comparison  go to state 99
    expr        go to state 101
    xor_expr    go to state 102
    and_expr    go to state 103
    shift_expr  go to state 104
    arith_expr  go to state 105
    term        go to state 106
    factor      go to state 107
    power       go to state 108
    str_seq     go to state 109
    atom        go to state 110


State 196

  166 or_seq: OR . and_test

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    and_test    go to state 318
    not_test    go to state 98
    comparison  go to state 99
    expr        go to state 101
    xor_expr    go to state 102
    and_expr    go to state 103
    shift_expr  go to state 104
    arith_expr  go to state 105
    term        go to state 106
    factor      go to state 107
    power       go to state 108
    str_seq     go to state 109
    atom        go to state 110


State 197

  167 or_seq: or_seq . OR and_test
  169 or_test: and_test or_seq .

    OR  shift, and go to state 319

    $default  reduce using rule 169 (or_test)


State 198

  170 and_seq: AND . not_test

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    not_test    go to state 320
    comparison  go to state 99
    expr        go to state 101
    xor_expr    go to state 102
    and_expr    go to state 103
    shift_expr  go to state 104
    arith_expr  go to state 105
    term        go to state 106
    factor      go to state 107
    power       go to state 108
    str_seq     go to state 109
    atom        go to state 110


State 199

  171 and_seq: and_seq . AND not_test
  173 and_test: not_test and_seq .

    AND  shift, and go to state 321

    $default  reduce using rule 173 (and_test)


State 200

   63 testlist_star_expr: star_expr ',' .
   64 comma_test_star: ',' . test
   65                | ',' . star_expr

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    $default  reduce using rule 63 (testlist_star_expr)

    test        go to state 156
    or_test     go to state 96
    and_test    go to state 97
    not_test    go to state 98
    comparison  go to state 99
    star_expr   go to state 157
    expr        go to state 101
    xor_expr    go to state 102
    and_expr    go to state 103
    shift_expr  go to state 104
    arith_expr  go to state 105
    term        go to state 106
    factor      go to state 107
    power       go to state 108
    str_seq     go to state 109
    atom        go to state 110


State 201

   62 testlist_star_expr: star_expr comma_test_star_seqJ . ','
   66 comma_test_star_seqJ: comma_test_star_seqJ . comma_test_star

    ','  shift, and go to state 322

    comma_test_star  go to state 189


State 202

  188 comp_op: NOT . IN

    IN  shift, and go to state 323


State 203

  186 comp_op: NOT_EQUAL .

    $default  reduce using rule 186 (comp_op)


State 204

  187 comp_op: IN .

    $default  reduce using rule 187 (comp_op)


State 205

  185 comp_op: MORE_LESS .

    $default  reduce using rule 185 (comp_op)


State 206

  182 comp_op: EQUAL .

    $default  reduce using rule 182 (comp_op)


State 207

  189 comp_op: IS .
  190        | IS . NOT

    NOT  shift, and go to state 324

    $default  reduce using rule 189 (comp_op)


State 208

  184 comp_op: LESS_OR_EQUAL .

    $default  reduce using rule 184 (comp_op)


State 209

  183 comp_op: MORE_OR_EQUAL .

    $default  reduce using rule 183 (comp_op)


State 210

  180 comp_op: '<' .

    $default  reduce using rule 180 (comp_op)


State 211

  181 comp_op: '>' .

    $default  reduce using rule 181 (comp_op)


State 212

  177 comp_op_seq: comp_op_seq . comp_op expr
  179 comparison: expr comp_op_seq .

    NOT            shift, and go to state 202
    NOT_EQUAL      shift, and go to state 203
    IN             shift, and go to state 204
    MORE_LESS      shift, and go to state 205
    EQUAL          shift, and go to state 206
    IS             shift, and go to state 207
    LESS_OR_EQUAL  shift, and go to state 208
    MORE_OR_EQUAL  shift, and go to state 209
    '<'            shift, and go to state 210
    '>'            shift, and go to state 211

    $default  reduce using rule 179 (comparison)

    comp_op  go to state 325


State 213

  176 comp_op_seq: comp_op . expr

    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    expr        go to state 326
    xor_expr    go to state 102
    and_expr    go to state 103
    shift_expr  go to state 104
    arith_expr  go to state 105
    term        go to state 106
    factor      go to state 107
    power       go to state 108
    str_seq     go to state 109
    atom        go to state 110


State 214

  192 or_xor_expr_seq: '|' . xor_expr

    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    xor_expr    go to state 327
    and_expr    go to state 103
    shift_expr  go to state 104
    arith_expr  go to state 105
    term        go to state 106
    factor      go to state 107
    power       go to state 108
    str_seq     go to state 109
    atom        go to state 110


State 215

  193 or_xor_expr_seq: or_xor_expr_seq . '|' xor_expr
  195 expr: xor_expr or_xor_expr_seq .

    '|'  shift, and go to state 328

    $default  reduce using rule 195 (expr)


State 216

  196 sha_and_expr_seq: '^' . and_expr

    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    and_expr    go to state 329
    shift_expr  go to state 104
    arith_expr  go to state 105
    term        go to state 106
    factor      go to state 107
    power       go to state 108
    str_seq     go to state 109
    atom        go to state 110


State 217

  197 sha_and_expr_seq: sha_and_expr_seq . '^' and_expr
  199 xor_expr: and_expr sha_and_expr_seq .

    '^'  shift, and go to state 330

    $default  reduce using rule 199 (xor_expr)


State 218

  200 and_shift_expr_seq: '&' . shift_expr

    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    shift_expr  go to state 331
    arith_expr  go to state 105
    term        go to state 106
    factor      go to state 107
    power       go to state 108
    str_seq     go to state 109
    atom        go to state 110


State 219

  201 and_shift_expr_seq: and_shift_expr_seq . '&' shift_expr
  203 and_expr: shift_expr and_shift_expr_seq .

    '&'  shift, and go to state 332

    $default  reduce using rule 203 (and_expr)


State 220

  204 arith_seq: LESS_THAN_2 . arith_expr

    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    arith_expr  go to state 333
    term        go to state 106
    factor      go to state 107
    power       go to state 108
    str_seq     go to state 109
    atom        go to state 110


State 221

  205 arith_seq: MORE_THAN_2 . arith_expr

    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    arith_expr  go to state 334
    term        go to state 106
    factor      go to state 107
    power       go to state 108
    str_seq     go to state 109
    atom        go to state 110


State 222

  206 arith_seq: arith_seq . LESS_THAN_2 arith_expr
  207          | arith_seq . MORE_THAN_2 arith_expr
  209 shift_expr: arith_expr arith_seq .

    LESS_THAN_2  shift, and go to state 335
    MORE_THAN_2  shift, and go to state 336

    $default  reduce using rule 209 (shift_expr)


State 223

  210 term_seq: '+' . term

    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    term     go to state 337
    factor   go to state 107
    power    go to state 108
    str_seq  go to state 109
    atom     go to state 110


State 224

  211 term_seq: '-' . term

    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    term     go to state 338
    factor   go to state 107
    power    go to state 108
    str_seq  go to state 109
    atom     go to state 110


State 225

  212 term_seq: term_seq . '+' term
  213         | term_seq . '-' term
  215 arith_expr: term term_seq .

    '+'  shift, and go to state 339
    '-'  shift, and go to state 340

    $default  reduce using rule 215 (arith_expr)


State 226

  219 factor_seq: DIV_2 . factor

    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    factor   go to state 341
    power    go to state 108
    str_seq  go to state 109
    atom     go to state 110


State 227

  216 factor_seq: '*' . factor

    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    factor   go to state 342
    power    go to state 108
    str_seq  go to state 109
    atom     go to state 110


State 228

  217 factor_seq: '/' . factor

    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    factor   go to state 343
    power    go to state 108
    str_seq  go to state 109
    atom     go to state 110


State 229

  218 factor_seq: '%' . factor

    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    factor   go to state 344
    power    go to state 108
    str_seq  go to state 109
    atom     go to state 110


State 230

  220 factor_seq: factor_seq . '*' factor
  221           | factor_seq . '/' factor
  222           | factor_seq . '%' factor
  223           | factor_seq . DIV_2 factor
  225 term: factor factor_seq .

    DIV_2  shift, and go to state 345
    '*'    shift, and go to state 346
    '/'    shift, and go to state 347
    '%'    shift, and go to state 348

    $default  reduce using rule 225 (term)


State 231

  237 str_seq: str_seq STRING .

    $default  reduce using rule 237 (str_seq)


State 232

  235 power: atom STAR_2 . factor

    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    factor   go to state 349
    power    go to state 108
    str_seq  go to state 109
    atom     go to state 110


State 233

  271 trailer: '.' . NAME
  272        | '.' . NAME '(' ')'
  273        | '.' . NAME '(' arglist ')'
  274        | '.' . NAME '[' subscriptlist ']'

    NAME  shift, and go to state 350


State 234

  231 trailer_seq: trailer_seq . trailer
  233 power: atom trailer_seq .
  234      | atom trailer_seq . STAR_2 factor

    STAR_2  shift, and go to state 351
    '.'     shift, and go to state 233

    $default  reduce using rule 233 (power)

    trailer  go to state 352


State 235

  230 trailer_seq: trailer .

    $default  reduce using rule 230 (trailer_seq)


State 236

  103 dotted_name_seq: '.' NAME .

    $default  reduce using rule 103 (dotted_name_seq)


State 237

  104 dotted_name_seq: dotted_name_seq '.' . NAME

    NAME  shift, and go to state 353


State 238

   95 comma_dotted_as_name_seq: ',' dotted_as_name .

    $default  reduce using rule 95 (comma_dotted_as_name_seq)


State 239

   96 comma_dotted_as_name_seq: comma_dotted_as_name_seq ',' . dotted_as_name

    NAME  shift, and go to state 16

    dotted_as_name  go to state 354
    dotted_name     go to state 19


State 240

  100 dotted_as_name: dotted_name AS NAME .

    $default  reduce using rule 100 (dotted_as_name)


State 241

  341 classheader: CLASS NAME '(' ')' . ':'

    ':'  shift, and go to state 355


State 242

  357 classheader: CLASS NAME '(' dotted_as_names . ')' ':'

    ')'  shift, and go to state 356


State 243

  344 classheader: FINAL CLASS NAME '(' . ')' ':'
  360            | FINAL CLASS NAME '(' . dotted_as_names ')' ':'

    NAME  shift, and go to state 16
    ')'   shift, and go to state 357

    dotted_as_names  go to state 358
    dotted_as_name   go to state 18
    dotted_name      go to state 19


State 244

  328 classheader: FINAL CLASS NAME ':' .

    $default  reduce using rule 328 (classheader)


State 245

  330 classheader: FINAL STATIC CLASS NAME . ':'
  346            | FINAL STATIC CLASS NAME . '(' ')' ':'
  362            | FINAL STATIC CLASS NAME . '(' dotted_as_names ')' ':'

    '('  shift, and go to state 359
    ':'  shift, and go to state 360


State 246

  334 classheader: FINAL STATIC access CLASS . NAME ':'
  350            | FINAL STATIC access CLASS . NAME '(' ')' ':'
  366            | FINAL STATIC access CLASS . NAME '(' dotted_as_names ')' ':'

    NAME  shift, and go to state 361


State 247

  331 classheader: FINAL access CLASS NAME . ':'
  348            | FINAL access CLASS NAME . '(' ')' ':'
  364            | FINAL access CLASS NAME . '(' dotted_as_names ')' ':'

    '('  shift, and go to state 362
    ':'  shift, and go to state 363


State 248

  340 classheader: FINAL access STATIC CLASS . NAME ':'
  356            | FINAL access STATIC CLASS . NAME '(' ')' ':'
  372            | FINAL access STATIC CLASS . NAME '(' dotted_as_names ')' ':'

    NAME  shift, and go to state 364


State 249

  343 classheader: STATIC CLASS NAME '(' . ')' ':'
  359            | STATIC CLASS NAME '(' . dotted_as_names ')' ':'

    NAME  shift, and go to state 16
    ')'   shift, and go to state 365

    dotted_as_names  go to state 366
    dotted_as_name   go to state 18
    dotted_name      go to state 19


State 250

  327 classheader: STATIC CLASS NAME ':' .

    $default  reduce using rule 327 (classheader)


State 251

  329 classheader: STATIC FINAL CLASS NAME . ':'
  345            | STATIC FINAL CLASS NAME . '(' ')' ':'
  361            | STATIC FINAL CLASS NAME . '(' dotted_as_names ')' ':'

    '('  shift, and go to state 367
    ':'  shift, and go to state 368


State 252

  333 classheader: STATIC FINAL access CLASS . NAME ':'
  349            | STATIC FINAL access CLASS . NAME '(' ')' ':'
  365            | STATIC FINAL access CLASS . NAME '(' dotted_as_names ')' ':'

    NAME  shift, and go to state 369


State 253

  332 classheader: STATIC access CLASS NAME . ':'
  347            | STATIC access CLASS NAME . '(' ')' ':'
  363            | STATIC access CLASS NAME . '(' dotted_as_names ')' ':'

    '('  shift, and go to state 370
    ':'  shift, and go to state 371


State 254

  339 classheader: STATIC access FINAL CLASS . NAME ':'
  355            | STATIC access FINAL CLASS . NAME '(' ')' ':'
  371            | STATIC access FINAL CLASS . NAME '(' dotted_as_names ')' ':'

    NAME  shift, and go to state 372


State 255

  342 classheader: access CLASS NAME '(' . ')' ':'
  358            | access CLASS NAME '(' . dotted_as_names ')' ':'

    NAME  shift, and go to state 16
    ')'   shift, and go to state 373

    dotted_as_names  go to state 374
    dotted_as_name   go to state 18
    dotted_name      go to state 19


State 256

  326 classheader: access CLASS NAME ':' .

    $default  reduce using rule 326 (classheader)


State 257

  336 classheader: access FINAL CLASS NAME . ':'
  352            | access FINAL CLASS NAME . '(' ')' ':'
  368            | access FINAL CLASS NAME . '(' dotted_as_names ')' ':'

    '('  shift, and go to state 375
    ':'  shift, and go to state 376


State 258

  338 classheader: access FINAL STATIC CLASS . NAME ':'
  354            | access FINAL STATIC CLASS . NAME '(' ')' ':'
  370            | access FINAL STATIC CLASS . NAME '(' dotted_as_names ')' ':'

    NAME  shift, and go to state 377


State 259

  335 classheader: access STATIC CLASS NAME . ':'
  351            | access STATIC CLASS NAME . '(' ')' ':'
  367            | access STATIC CLASS NAME . '(' dotted_as_names ')' ':'

    '('  shift, and go to state 378
    ':'  shift, and go to state 379


State 260

  337 classheader: access STATIC FINAL CLASS . NAME ':'
  353            | access STATIC FINAL CLASS . NAME '(' ')' ':'
  369            | access STATIC FINAL CLASS . NAME '(' dotted_as_names ')' ':'

    NAME  shift, and go to state 380


State 261

   16 funcheader: DEF FINAL STATIC . NAME parameters ARROW test ':'
   18           | DEF FINAL STATIC . NAME parameters ':'
   24           | DEF FINAL STATIC . access NAME parameters ARROW test ':'
   26           | DEF FINAL STATIC . access NAME parameters ':'
  124 vardef: DEF FINAL STATIC . NAME
  128       | DEF FINAL STATIC . access NAME
  330 classheader: FINAL STATIC . CLASS NAME ':'
  334            | FINAL STATIC . access CLASS NAME ':'
  346            | FINAL STATIC . CLASS NAME '(' ')' ':'
  350            | FINAL STATIC . access CLASS NAME '(' ')' ':'
  362            | FINAL STATIC . CLASS NAME '(' dotted_as_names ')' ':'
  366            | FINAL STATIC . access CLASS NAME '(' dotted_as_names ')' ':'

    CLASS      shift, and go to state 119
    NAME       shift, and go to state 381
    PRIVATE    shift, and go to state 5
    PUBLIC     shift, and go to state 6
    PROTECTED  shift, and go to state 7

    access  go to state 382


State 262

   12 funcheader: DEF FINAL NAME . parameters ARROW test ':'
   14           | DEF FINAL NAME . parameters ':'
  122 vardef: DEF FINAL NAME .

    '('  shift, and go to state 267

    $default  reduce using rule 122 (vardef)

    parameters  go to state 383


State 263

   19 funcheader: DEF FINAL access . NAME parameters ARROW test ':'
   22           | DEF FINAL access . NAME parameters ':'
   36           | DEF FINAL access . STATIC NAME parameters ARROW test ':'
   38           | DEF FINAL access . STATIC NAME parameters ':'
  126 vardef: DEF FINAL access . NAME
  134       | DEF FINAL access . STATIC NAME
  331 classheader: FINAL access . CLASS NAME ':'
  340            | FINAL access . STATIC CLASS NAME ':'
  348            | FINAL access . CLASS NAME '(' ')' ':'
  356            | FINAL access . STATIC CLASS NAME '(' ')' ':'
  364            | FINAL access . CLASS NAME '(' dotted_as_names ')' ':'
  372            | FINAL access . STATIC CLASS NAME '(' dotted_as_names ')' ':'

    CLASS   shift, and go to state 121
    STATIC  shift, and go to state 384
    NAME    shift, and go to state 385


State 264

   15 funcheader: DEF STATIC FINAL . NAME parameters ARROW test ':'
   17           | DEF STATIC FINAL . NAME parameters ':'
   23           | DEF STATIC FINAL . access NAME parameters ARROW test ':'
   25           | DEF STATIC FINAL . access NAME parameters ':'
  123 vardef: DEF STATIC FINAL . NAME
  127       | DEF STATIC FINAL . access NAME
  329 classheader: STATIC FINAL . CLASS NAME ':'
  333            | STATIC FINAL . access CLASS NAME ':'
  345            | STATIC FINAL . CLASS NAME '(' ')' ':'
  349            | STATIC FINAL . access CLASS NAME '(' ')' ':'
  361            | STATIC FINAL . CLASS NAME '(' dotted_as_names ')' ':'
  365            | STATIC FINAL . access CLASS NAME '(' dotted_as_names ')' ':'

    CLASS      shift, and go to state 124
    NAME       shift, and go to state 386
    PRIVATE    shift, and go to state 5
    PUBLIC     shift, and go to state 6
    PROTECTED  shift, and go to state 7

    access  go to state 387


State 265

   11 funcheader: DEF STATIC NAME . parameters ARROW test ':'
   13           | DEF STATIC NAME . parameters ':'
  121 vardef: DEF STATIC NAME .

    '('  shift, and go to state 267

    $default  reduce using rule 121 (vardef)

    parameters  go to state 388


State 266

   20 funcheader: DEF STATIC access . NAME parameters ARROW test ':'
   21           | DEF STATIC access . NAME parameters ':'
   35           | DEF STATIC access . FINAL NAME parameters ARROW test ':'
   37           | DEF STATIC access . FINAL NAME parameters ':'
  125 vardef: DEF STATIC access . NAME
  133       | DEF STATIC access . FINAL NAME
  332 classheader: STATIC access . CLASS NAME ':'
  339            | STATIC access . FINAL CLASS NAME ':'
  347            | STATIC access . CLASS NAME '(' ')' ':'
  355            | STATIC access . FINAL CLASS NAME '(' ')' ':'
  363            | STATIC access . CLASS NAME '(' dotted_as_names ')' ':'
  371            | STATIC access . FINAL CLASS NAME '(' dotted_as_names ')' ':'

    CLASS  shift, and go to state 126
    FINAL  shift, and go to state 389
    NAME   shift, and go to state 390


State 267

   39 parameters: '(' . arglist ')'
   40           | '(' . ')'

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    STAR_2        shift, and go to state 282
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 283
    ')'           shift, and go to state 391
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    test           go to state 285
    or_test        go to state 96
    and_test       go to state 97
    not_test       go to state 98
    comparison     go to state 99
    expr           go to state 101
    xor_expr       go to state 102
    and_expr       go to state 103
    shift_expr     go to state 104
    arith_expr     go to state 105
    term           go to state 106
    factor         go to state 107
    power          go to state 108
    str_seq        go to state 109
    atom           go to state 110
    arg_comma_seq  go to state 286
    arglist        go to state 392
    default_arg    go to state 288
    argument       go to state 289


State 268

    7 funcheader: DEF NAME parameters . ARROW test ':'
    9           | DEF NAME parameters . ':'

    ARROW  shift, and go to state 393
    ':'    shift, and go to state 394


State 269

   28 funcheader: DEF access FINAL . NAME parameters ARROW test ':'
   30           | DEF access FINAL . NAME parameters ':'
   32           | DEF access FINAL . STATIC NAME parameters ARROW test ':'
   34           | DEF access FINAL . STATIC NAME parameters ':'
  130 vardef: DEF access FINAL . NAME
  132       | DEF access FINAL . STATIC NAME
  336 classheader: access FINAL . CLASS NAME ':'
  338            | access FINAL . STATIC CLASS NAME ':'
  352            | access FINAL . CLASS NAME '(' ')' ':'
  354            | access FINAL . STATIC CLASS NAME '(' ')' ':'
  368            | access FINAL . CLASS NAME '(' dotted_as_names ')' ':'
  370            | access FINAL . STATIC CLASS NAME '(' dotted_as_names ')' ':'

    CLASS   shift, and go to state 129
    STATIC  shift, and go to state 395
    NAME    shift, and go to state 396


State 270

   27 funcheader: DEF access STATIC . NAME parameters ARROW test ':'
   29           | DEF access STATIC . NAME parameters ':'
   31           | DEF access STATIC . FINAL NAME parameters ARROW test ':'
   33           | DEF access STATIC . FINAL NAME parameters ':'
  129 vardef: DEF access STATIC . NAME
  131       | DEF access STATIC . FINAL NAME
  335 classheader: access STATIC . CLASS NAME ':'
  337            | access STATIC . FINAL CLASS NAME ':'
  351            | access STATIC . CLASS NAME '(' ')' ':'
  353            | access STATIC . FINAL CLASS NAME '(' ')' ':'
  367            | access STATIC . CLASS NAME '(' dotted_as_names ')' ':'
  369            | access STATIC . FINAL CLASS NAME '(' dotted_as_names ')' ':'

    CLASS  shift, and go to state 131
    FINAL  shift, and go to state 397
    NAME   shift, and go to state 398


State 271

    8 funcheader: DEF access NAME . parameters ARROW test ':'
   10           | DEF access NAME . parameters ':'
  120 vardef: DEF access NAME .

    '('  shift, and go to state 267

    $default  reduce using rule 120 (vardef)

    parameters  go to state 399


State 272

  137 if_stmt: IF test ':' . suite
  138        | IF test ':' . suite elif_seq
  139        | IF test ':' . suite ELSE ':' suite
  140        | IF test ':' . suite elif_seq ELSE ':' suite

    IMPORT        shift, and go to state 1
    END           shift, and go to state 33
    NOT           shift, and go to state 34
    DEF           shift, and go to state 35
    IF            shift, and go to state 36
    WHILE         shift, and go to state 37
    FOR           shift, and go to state 38
    TRY           shift, and go to state 39
    NONLOCAL      shift, and go to state 40
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    WITH          shift, and go to state 48
    DEL           shift, and go to state 49
    RETURN        shift, and go to state 50
    PRINT         shift, and go to state 51
    GLOBAL        shift, and go to state 52
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    PASS          shift, and go to state 55
    CHAR_VALUE    shift, and go to state 56
    BREAK         shift, and go to state 57
    CONTINUE      shift, and go to state 58
    ','           shift, and go to state 59
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    funcdef               go to state 67
    funcheader            go to state 68
    stmt                  go to state 69
    simple_stmt           go to state 70
    small_stmt            go to state 71
    expr_stmt             go to state 72
    testlist_star_expr    go to state 73
    comma_test_star       go to state 74
    comma_test_star_seqJ  go to state 75
    print_stmt            go to state 76
    del_stmt              go to state 77
    pass_stmt             go to state 78
    flow_stmt             go to state 79
    break_stmt            go to state 80
    continue_stmt         go to state 81
    return_stmt           go to state 82
    import_stmt           go to state 83
    import_name           go to state 13
    global_stmt           go to state 84
    nonlocal_stmt         go to state 85
    compound_stmt         go to state 86
    vardef                go to state 87
    if_stmt               go to state 88
    while_stmt            go to state 89
    for_stmt              go to state 90
    try_stmt              go to state 91
    with_stmt             go to state 92
    list_stmt             go to state 93
    suite                 go to state 400
    test                  go to state 95
    or_test               go to state 96
    and_test              go to state 97
    not_test              go to state 98
    comparison            go to state 99
    star_expr             go to state 100
    expr                  go to state 101
    xor_expr              go to state 102
    and_expr              go to state 103
    shift_expr            go to state 104
    arith_expr            go to state 105
    term                  go to state 106
    factor                go to state 107
    power                 go to state 108
    str_seq               go to state 109
    atom                  go to state 110


State 273

  141 while_stmt: WHILE test ':' . suite
  142           | WHILE test ':' . suite ELSE ':' suite

    IMPORT        shift, and go to state 1
    END           shift, and go to state 33
    NOT           shift, and go to state 34
    DEF           shift, and go to state 35
    IF            shift, and go to state 36
    WHILE         shift, and go to state 37
    FOR           shift, and go to state 38
    TRY           shift, and go to state 39
    NONLOCAL      shift, and go to state 40
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    WITH          shift, and go to state 48
    DEL           shift, and go to state 49
    RETURN        shift, and go to state 50
    PRINT         shift, and go to state 51
    GLOBAL        shift, and go to state 52
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    PASS          shift, and go to state 55
    CHAR_VALUE    shift, and go to state 56
    BREAK         shift, and go to state 57
    CONTINUE      shift, and go to state 58
    ','           shift, and go to state 59
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    funcdef               go to state 67
    funcheader            go to state 68
    stmt                  go to state 69
    simple_stmt           go to state 70
    small_stmt            go to state 71
    expr_stmt             go to state 72
    testlist_star_expr    go to state 73
    comma_test_star       go to state 74
    comma_test_star_seqJ  go to state 75
    print_stmt            go to state 76
    del_stmt              go to state 77
    pass_stmt             go to state 78
    flow_stmt             go to state 79
    break_stmt            go to state 80
    continue_stmt         go to state 81
    return_stmt           go to state 82
    import_stmt           go to state 83
    import_name           go to state 13
    global_stmt           go to state 84
    nonlocal_stmt         go to state 85
    compound_stmt         go to state 86
    vardef                go to state 87
    if_stmt               go to state 88
    while_stmt            go to state 89
    for_stmt              go to state 90
    try_stmt              go to state 91
    with_stmt             go to state 92
    list_stmt             go to state 93
    suite                 go to state 401
    test                  go to state 95
    or_test               go to state 96
    and_test              go to state 97
    not_test              go to state 98
    comparison            go to state 99
    star_expr             go to state 100
    expr                  go to state 101
    xor_expr              go to state 102
    and_expr              go to state 103
    shift_expr            go to state 104
    arith_expr            go to state 105
    term                  go to state 106
    factor                go to state 107
    power                 go to state 108
    str_seq               go to state 109
    atom                  go to state 110


State 274

  292 comma_expr_star_seq: ',' . expr
  293                    | ',' . star_expr
  302 exprlist: star_expr ',' .

    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    $default  reduce using rule 302 (exprlist)

    star_expr   go to state 402
    expr        go to state 403
    xor_expr    go to state 102
    and_expr    go to state 103
    shift_expr  go to state 104
    arith_expr  go to state 105
    term        go to state 106
    factor      go to state 107
    power       go to state 108
    str_seq     go to state 109
    atom        go to state 110


State 275

  294 comma_expr_star_seq: comma_expr_star_seq . ',' expr
  295                    | comma_expr_star_seq . ',' star_expr
  299 exprlist: star_expr comma_expr_star_seq .
  303         | star_expr comma_expr_star_seq . ','

    ','  shift, and go to state 404

    $default  reduce using rule 299 (exprlist)


State 276

  292 comma_expr_star_seq: ',' . expr
  293                    | ',' . star_expr
  300 exprlist: expr ',' .

    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    $default  reduce using rule 300 (exprlist)

    star_expr   go to state 402
    expr        go to state 403
    xor_expr    go to state 102
    and_expr    go to state 103
    shift_expr  go to state 104
    arith_expr  go to state 105
    term        go to state 106
    factor      go to state 107
    power       go to state 108
    str_seq     go to state 109
    atom        go to state 110


State 277

  294 comma_expr_star_seq: comma_expr_star_seq . ',' expr
  295                    | comma_expr_star_seq . ',' star_expr
  297 exprlist: expr comma_expr_star_seq .
  301         | expr comma_expr_star_seq . ','

    ','  shift, and go to state 405

    $default  reduce using rule 297 (exprlist)


State 278

  143 for_stmt: FOR exprlist IN . testlist ':' suite
  144         | FOR exprlist IN . testlist ':' suite ELSE ':' suite

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    test        go to state 152
    or_test     go to state 96
    and_test    go to state 97
    not_test    go to state 98
    comparison  go to state 99
    expr        go to state 101
    xor_expr    go to state 102
    and_expr    go to state 103
    shift_expr  go to state 104
    arith_expr  go to state 105
    term        go to state 106
    factor      go to state 107
    power       go to state 108
    str_seq     go to state 109
    atom        go to state 110
    testlist    go to state 406


State 279

  145 try_stmt: TRY ':' suite . try_except_cla_seq
  146         | TRY ':' suite . try_except_cla_seq ELSE ':' suite
  147         | TRY ':' suite . try_except_cla_seq FINALLY ':' suite
  148         | TRY ':' suite . FINALLY ':' suite

    FINALLY  shift, and go to state 407
    EXCEPT   shift, and go to state 408

    try_except_cla_seq  go to state 409
    except_clause       go to state 410


State 280

  105 comma_name_seq: ',' . NAME

    NAME  shift, and go to state 411


State 281

  106 comma_name_seq: comma_name_seq . ',' NAME
  110 nonlocal_stmt: NONLOCAL NAME comma_name_seq .

    ','  shift, and go to state 412

    $default  reduce using rule 110 (nonlocal_stmt)


State 282

  386 arglist: STAR_2 . test

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    test        go to state 413
    or_test     go to state 96
    and_test    go to state 97
    not_test    go to state 98
    comparison  go to state 99
    expr        go to state 101
    xor_expr    go to state 102
    and_expr    go to state 103
    shift_expr  go to state 104
    arith_expr  go to state 105
    term        go to state 106
    factor      go to state 107
    power       go to state 108
    str_seq     go to state 109
    atom        go to state 110


State 283

  380 arglist: '*' . test
  381        | '*' . test ',' STAR_2 test
  382        | '*' . test comma_arg_seq
  383        | '*' . test comma_default_arg_seq
  384        | '*' . test comma_arg_seq comma_default_arg_seq
  385        | '*' . test comma_arg_seq ',' STAR_2 test

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    test        go to state 414
    or_test     go to state 96
    and_test    go to state 97
    not_test    go to state 98
    comparison  go to state 99
    expr        go to state 101
    xor_expr    go to state 102
    and_expr    go to state 103
    shift_expr  go to state 104
    arith_expr  go to state 105
    term        go to state 106
    factor      go to state 107
    power       go to state 108
    str_seq     go to state 109
    atom        go to state 110


State 284

  245 atom: NAME '(' ')' .

    $default  reduce using rule 245 (atom)


State 285

  402 default_arg: test . '=' test
  403 argument: test .
  404         | test . comp_for

    FOR  shift, and go to state 301
    '='  shift, and go to state 415

    $default  reduce using rule 403 (argument)

    comp_for  go to state 416


State 286

  374 arg_comma_seq: arg_comma_seq . argument ','
  387 arglist: arg_comma_seq . argument
  388        | arg_comma_seq . default_arg
  389        | arg_comma_seq . default_arg_comma_seq default_arg
  390        | arg_comma_seq . argument ','
  391        | arg_comma_seq . '*' test
  392        | arg_comma_seq . '*' test ',' STAR_2 test
  393        | arg_comma_seq . '*' test comma_arg_seq
  394        | arg_comma_seq . '*' test comma_default_arg_seq
  395        | arg_comma_seq . '*' test comma_arg_seq comma_default_arg_seq
  396        | arg_comma_seq . '*' test comma_arg_seq ',' STAR_2 test
  397        | arg_comma_seq . STAR_2 test

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    STAR_2        shift, and go to state 417
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 418
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    test                   go to state 285
    or_test                go to state 96
    and_test               go to state 97
    not_test               go to state 98
    comparison             go to state 99
    expr                   go to state 101
    xor_expr               go to state 102
    and_expr               go to state 103
    shift_expr             go to state 104
    arith_expr             go to state 105
    term                   go to state 106
    factor                 go to state 107
    power                  go to state 108
    str_seq                go to state 109
    atom                   go to state 110
    default_arg_comma_seq  go to state 419
    default_arg            go to state 420
    argument               go to state 421


State 287

  246 atom: NAME '(' arglist . ')'

    ')'  shift, and go to state 422


State 288

  378 arglist: default_arg .

    $default  reduce using rule 378 (arglist)


State 289

  373 arg_comma_seq: argument . ','
  377 arglist: argument .
  379        | argument . ','

    ','  shift, and go to state 423

    $default  reduce using rule 377 (arglist)


State 290

  282 subscript: ':' .
  287          | ':' . test
  288          | ':' . sliceop
  289          | ':' . test sliceop

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    ':'           shift, and go to state 424
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    $default  reduce using rule 282 (subscript)

    test        go to state 425
    or_test     go to state 96
    and_test    go to state 97
    not_test    go to state 98
    comparison  go to state 99
    expr        go to state 101
    xor_expr    go to state 102
    and_expr    go to state 103
    shift_expr  go to state 104
    arith_expr  go to state 105
    term        go to state 106
    factor      go to state 107
    power       go to state 108
    str_seq     go to state 109
    atom        go to state 110
    sliceop     go to state 426


State 291

  281 subscript: test .
  283          | test . ':'
  284          | test . ':' test
  285          | test . ':' sliceop
  286          | test . ':' test sliceop

    ':'  shift, and go to state 427

    $default  reduce using rule 281 (subscript)


State 292

  247 atom: NAME '[' subscriptlist . ']'

    ']'  shift, and go to state 428


State 293

  277 subscriptlist: subscript .
  278              | subscript . comma_subscript_seq
  279              | subscript . ','
  280              | subscript . comma_subscript_seq ','

    ','  shift, and go to state 429

    $default  reduce using rule 277 (subscriptlist)

    comma_subscript_seq  go to state 430


State 294

  151 with_seq: ',' . with_item

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    with_item   go to state 431
    test        go to state 150
    or_test     go to state 96
    and_test    go to state 97
    not_test    go to state 98
    comparison  go to state 99
    expr        go to state 101
    xor_expr    go to state 102
    and_expr    go to state 103
    shift_expr  go to state 104
    arith_expr  go to state 105
    term        go to state 106
    factor      go to state 107
    power       go to state 108
    str_seq     go to state 109
    atom        go to state 110


State 295

  153 with_stmt: WITH with_item ':' . suite

    IMPORT        shift, and go to state 1
    END           shift, and go to state 33
    NOT           shift, and go to state 34
    DEF           shift, and go to state 35
    IF            shift, and go to state 36
    WHILE         shift, and go to state 37
    FOR           shift, and go to state 38
    TRY           shift, and go to state 39
    NONLOCAL      shift, and go to state 40
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    WITH          shift, and go to state 48
    DEL           shift, and go to state 49
    RETURN        shift, and go to state 50
    PRINT         shift, and go to state 51
    GLOBAL        shift, and go to state 52
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    PASS          shift, and go to state 55
    CHAR_VALUE    shift, and go to state 56
    BREAK         shift, and go to state 57
    CONTINUE      shift, and go to state 58
    ','           shift, and go to state 59
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    funcdef               go to state 67
    funcheader            go to state 68
    stmt                  go to state 69
    simple_stmt           go to state 70
    small_stmt            go to state 71
    expr_stmt             go to state 72
    testlist_star_expr    go to state 73
    comma_test_star       go to state 74
    comma_test_star_seqJ  go to state 75
    print_stmt            go to state 76
    del_stmt              go to state 77
    pass_stmt             go to state 78
    flow_stmt             go to state 79
    break_stmt            go to state 80
    continue_stmt         go to state 81
    return_stmt           go to state 82
    import_stmt           go to state 83
    import_name           go to state 13
    global_stmt           go to state 84
    nonlocal_stmt         go to state 85
    compound_stmt         go to state 86
    vardef                go to state 87
    if_stmt               go to state 88
    while_stmt            go to state 89
    for_stmt              go to state 90
    try_stmt              go to state 91
    with_stmt             go to state 92
    list_stmt             go to state 93
    suite                 go to state 432
    test                  go to state 95
    or_test               go to state 96
    and_test              go to state 97
    not_test              go to state 98
    comparison            go to state 99
    star_expr             go to state 100
    expr                  go to state 101
    xor_expr              go to state 102
    and_expr              go to state 103
    shift_expr            go to state 104
    arith_expr            go to state 105
    term                  go to state 106
    factor                go to state 107
    power                 go to state 108
    str_seq               go to state 109
    atom                  go to state 110


State 296

  152 with_seq: with_seq . ',' with_item
  154 with_stmt: WITH with_item with_seq . ':' suite

    ','  shift, and go to state 433
    ':'  shift, and go to state 434


State 297

  156 with_item: test AS . expr

    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    expr        go to state 435
    xor_expr    go to state 102
    and_expr    go to state 103
    shift_expr  go to state 104
    arith_expr  go to state 105
    term        go to state 106
    factor      go to state 107
    power       go to state 108
    str_seq     go to state 109
    atom        go to state 110


State 298

  304 comma_test: ',' . test
  305           | ',' . test comma_test
  308 testlist: test ',' .

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    $default  reduce using rule 308 (testlist)

    test        go to state 436
    or_test     go to state 96
    and_test    go to state 97
    not_test    go to state 98
    comparison  go to state 99
    expr        go to state 101
    xor_expr    go to state 102
    and_expr    go to state 103
    shift_expr  go to state 104
    arith_expr  go to state 105
    term        go to state 106
    factor      go to state 107
    power       go to state 108
    str_seq     go to state 109
    atom        go to state 110


State 299

  307 testlist: test comma_test .
  309         | test comma_test . ','

    ','  shift, and go to state 437

    $default  reduce using rule 307 (testlist)


State 300

  106 comma_name_seq: comma_name_seq . ',' NAME
  108 global_stmt: GLOBAL NAME comma_name_seq .

    ','  shift, and go to state 412

    $default  reduce using rule 108 (global_stmt)


State 301

  407 comp_for: FOR . exprlist IN or_test
  408         | FOR . exprlist IN or_test comp_iter

    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    star_expr   go to state 142
    expr        go to state 143
    xor_expr    go to state 102
    and_expr    go to state 103
    shift_expr  go to state 104
    arith_expr  go to state 105
    term        go to state 106
    factor      go to state 107
    power       go to state 108
    str_seq     go to state 109
    atom        go to state 110
    exprlist    go to state 438


State 302

  257 comma_test_star_seq: ',' . test
  258                    | ',' . star_expr
  264 testlist_comp: test ',' .

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    $default  reduce using rule 264 (testlist_comp)

    test        go to state 439
    or_test     go to state 96
    and_test    go to state 97
    not_test    go to state 98
    comparison  go to state 99
    star_expr   go to state 440
    expr        go to state 101
    xor_expr    go to state 102
    and_expr    go to state 103
    shift_expr  go to state 104
    arith_expr  go to state 105
    term        go to state 106
    factor      go to state 107
    power       go to state 108
    str_seq     go to state 109
    atom        go to state 110


State 303

  259 comma_test_star_seq: comma_test_star_seq . ',' test
  260                    | comma_test_star_seq . ',' star_expr
  263 testlist_comp: test comma_test_star_seq .
  265              | test comma_test_star_seq . ','

    ','  shift, and go to state 441

    $default  reduce using rule 263 (testlist_comp)


State 304

  261 testlist_comp: test comp_for .

    $default  reduce using rule 261 (testlist_comp)


State 305

  257 comma_test_star_seq: ',' . test
  258                    | ',' . star_expr
  269 testlist_comp: star_expr ',' .

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    $default  reduce using rule 269 (testlist_comp)

    test        go to state 439
    or_test     go to state 96
    and_test    go to state 97
    not_test    go to state 98
    comparison  go to state 99
    star_expr   go to state 440
    expr        go to state 101
    xor_expr    go to state 102
    and_expr    go to state 103
    shift_expr  go to state 104
    arith_expr  go to state 105
    term        go to state 106
    factor      go to state 107
    power       go to state 108
    str_seq     go to state 109
    atom        go to state 110


State 306

  259 comma_test_star_seq: comma_test_star_seq . ',' test
  260                    | comma_test_star_seq . ',' star_expr
  268 testlist_comp: star_expr comma_test_star_seq .
  270              | star_expr comma_test_star_seq . ','

    ','  shift, and go to state 442

    $default  reduce using rule 268 (testlist_comp)


State 307

  266 testlist_comp: star_expr comp_for .

    $default  reduce using rule 266 (testlist_comp)


State 308

  239 atom: '(' testlist_comp ')' .

    $default  reduce using rule 239 (atom)


State 309

  242 atom: '[' testlist_comp ']' .

    $default  reduce using rule 242 (atom)


State 310

  312 comma_test_seq: ',' . test
  321 dictorsetmaker: test ',' .

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    $default  reduce using rule 321 (dictorsetmaker)

    test        go to state 443
    or_test     go to state 96
    and_test    go to state 97
    not_test    go to state 98
    comparison  go to state 99
    expr        go to state 101
    xor_expr    go to state 102
    and_expr    go to state 103
    shift_expr  go to state 104
    arith_expr  go to state 105
    term        go to state 106
    factor      go to state 107
    power       go to state 108
    str_seq     go to state 109
    atom        go to state 110


State 311

  314 dictorsetmaker: test ':' . test comp_for
  315               | test ':' . test
  316               | test ':' . test ','
  317               | test ':' . test comma_test_colon_test_seq
  318               | test ':' . test comma_test_colon_test_seq ','

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    test        go to state 444
    or_test     go to state 96
    and_test    go to state 97
    not_test    go to state 98
    comparison  go to state 99
    expr        go to state 101
    xor_expr    go to state 102
    and_expr    go to state 103
    shift_expr  go to state 104
    arith_expr  go to state 105
    term        go to state 106
    factor      go to state 107
    power       go to state 108
    str_seq     go to state 109
    atom        go to state 110


State 312

  313 comma_test_seq: comma_test_seq . ',' test
  322 dictorsetmaker: test comma_test_seq .
  323               | test comma_test_seq . ','

    ','  shift, and go to state 445

    $default  reduce using rule 322 (dictorsetmaker)


State 313

  319 dictorsetmaker: test comp_for .

    $default  reduce using rule 319 (dictorsetmaker)


State 314

  243 atom: '{' dictorsetmaker '}' .

    $default  reduce using rule 243 (atom)


State 315

   55 right_testlist: '=' testlist_star_expr . right_testlist
   56               | '=' testlist_star_expr .

    '='  shift, and go to state 185

    $default  reduce using rule 56 (right_testlist)

    right_testlist  go to state 446


State 316

   52 expr_stmt: testlist_star_expr augassign testlist .

    $default  reduce using rule 52 (expr_stmt)


State 317

  165 test: or_test IF or_test . ELSE test

    ELSE  shift, and go to state 447


State 318

  166 or_seq: OR and_test .

    $default  reduce using rule 166 (or_seq)


State 319

  167 or_seq: or_seq OR . and_test

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    and_test    go to state 448
    not_test    go to state 98
    comparison  go to state 99
    expr        go to state 101
    xor_expr    go to state 102
    and_expr    go to state 103
    shift_expr  go to state 104
    arith_expr  go to state 105
    term        go to state 106
    factor      go to state 107
    power       go to state 108
    str_seq     go to state 109
    atom        go to state 110


State 320

  170 and_seq: AND not_test .

    $default  reduce using rule 170 (and_seq)


State 321

  171 and_seq: and_seq AND . not_test

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    not_test    go to state 449
    comparison  go to state 99
    expr        go to state 101
    xor_expr    go to state 102
    and_expr    go to state 103
    shift_expr  go to state 104
    arith_expr  go to state 105
    term        go to state 106
    factor      go to state 107
    power       go to state 108
    str_seq     go to state 109
    atom        go to state 110


State 322

   62 testlist_star_expr: star_expr comma_test_star_seqJ ',' .
   64 comma_test_star: ',' . test
   65                | ',' . star_expr

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    $default  reduce using rule 62 (testlist_star_expr)

    test        go to state 156
    or_test     go to state 96
    and_test    go to state 97
    not_test    go to state 98
    comparison  go to state 99
    star_expr   go to state 157
    expr        go to state 101
    xor_expr    go to state 102
    and_expr    go to state 103
    shift_expr  go to state 104
    arith_expr  go to state 105
    term        go to state 106
    factor      go to state 107
    power       go to state 108
    str_seq     go to state 109
    atom        go to state 110


State 323

  188 comp_op: NOT IN .

    $default  reduce using rule 188 (comp_op)


State 324

  190 comp_op: IS NOT .

    $default  reduce using rule 190 (comp_op)


State 325

  177 comp_op_seq: comp_op_seq comp_op . expr

    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    expr        go to state 450
    xor_expr    go to state 102
    and_expr    go to state 103
    shift_expr  go to state 104
    arith_expr  go to state 105
    term        go to state 106
    factor      go to state 107
    power       go to state 108
    str_seq     go to state 109
    atom        go to state 110


State 326

  176 comp_op_seq: comp_op expr .

    $default  reduce using rule 176 (comp_op_seq)


State 327

  192 or_xor_expr_seq: '|' xor_expr .

    $default  reduce using rule 192 (or_xor_expr_seq)


State 328

  193 or_xor_expr_seq: or_xor_expr_seq '|' . xor_expr

    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    xor_expr    go to state 451
    and_expr    go to state 103
    shift_expr  go to state 104
    arith_expr  go to state 105
    term        go to state 106
    factor      go to state 107
    power       go to state 108
    str_seq     go to state 109
    atom        go to state 110


State 329

  196 sha_and_expr_seq: '^' and_expr .

    $default  reduce using rule 196 (sha_and_expr_seq)


State 330

  197 sha_and_expr_seq: sha_and_expr_seq '^' . and_expr

    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    and_expr    go to state 452
    shift_expr  go to state 104
    arith_expr  go to state 105
    term        go to state 106
    factor      go to state 107
    power       go to state 108
    str_seq     go to state 109
    atom        go to state 110


State 331

  200 and_shift_expr_seq: '&' shift_expr .

    $default  reduce using rule 200 (and_shift_expr_seq)


State 332

  201 and_shift_expr_seq: and_shift_expr_seq '&' . shift_expr

    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    shift_expr  go to state 453
    arith_expr  go to state 105
    term        go to state 106
    factor      go to state 107
    power       go to state 108
    str_seq     go to state 109
    atom        go to state 110


State 333

  204 arith_seq: LESS_THAN_2 arith_expr .

    $default  reduce using rule 204 (arith_seq)


State 334

  205 arith_seq: MORE_THAN_2 arith_expr .

    $default  reduce using rule 205 (arith_seq)


State 335

  206 arith_seq: arith_seq LESS_THAN_2 . arith_expr

    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    arith_expr  go to state 454
    term        go to state 106
    factor      go to state 107
    power       go to state 108
    str_seq     go to state 109
    atom        go to state 110


State 336

  207 arith_seq: arith_seq MORE_THAN_2 . arith_expr

    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    arith_expr  go to state 455
    term        go to state 106
    factor      go to state 107
    power       go to state 108
    str_seq     go to state 109
    atom        go to state 110


State 337

  210 term_seq: '+' term .

    $default  reduce using rule 210 (term_seq)


State 338

  211 term_seq: '-' term .

    $default  reduce using rule 211 (term_seq)


State 339

  212 term_seq: term_seq '+' . term

    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    term     go to state 456
    factor   go to state 107
    power    go to state 108
    str_seq  go to state 109
    atom     go to state 110


State 340

  213 term_seq: term_seq '-' . term

    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    term     go to state 457
    factor   go to state 107
    power    go to state 108
    str_seq  go to state 109
    atom     go to state 110


State 341

  219 factor_seq: DIV_2 factor .

    $default  reduce using rule 219 (factor_seq)


State 342

  216 factor_seq: '*' factor .

    $default  reduce using rule 216 (factor_seq)


State 343

  217 factor_seq: '/' factor .

    $default  reduce using rule 217 (factor_seq)


State 344

  218 factor_seq: '%' factor .

    $default  reduce using rule 218 (factor_seq)


State 345

  223 factor_seq: factor_seq DIV_2 . factor

    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    factor   go to state 458
    power    go to state 108
    str_seq  go to state 109
    atom     go to state 110


State 346

  220 factor_seq: factor_seq '*' . factor

    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    factor   go to state 459
    power    go to state 108
    str_seq  go to state 109
    atom     go to state 110


State 347

  221 factor_seq: factor_seq '/' . factor

    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    factor   go to state 460
    power    go to state 108
    str_seq  go to state 109
    atom     go to state 110


State 348

  222 factor_seq: factor_seq '%' . factor

    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    factor   go to state 461
    power    go to state 108
    str_seq  go to state 109
    atom     go to state 110


State 349

  235 power: atom STAR_2 factor .

    $default  reduce using rule 235 (power)


State 350

  271 trailer: '.' NAME .
  272        | '.' NAME . '(' ')'
  273        | '.' NAME . '(' arglist ')'
  274        | '.' NAME . '[' subscriptlist ']'

    '('  shift, and go to state 462
    '['  shift, and go to state 463

    $default  reduce using rule 271 (trailer)


State 351

  234 power: atom trailer_seq STAR_2 . factor

    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    factor   go to state 464
    power    go to state 108
    str_seq  go to state 109
    atom     go to state 110


State 352

  231 trailer_seq: trailer_seq trailer .

    $default  reduce using rule 231 (trailer_seq)


State 353

  104 dotted_name_seq: dotted_name_seq '.' NAME .

    $default  reduce using rule 104 (dotted_name_seq)


State 354

   96 comma_dotted_as_name_seq: comma_dotted_as_name_seq ',' dotted_as_name .

    $default  reduce using rule 96 (comma_dotted_as_name_seq)


State 355

  341 classheader: CLASS NAME '(' ')' ':' .

    $default  reduce using rule 341 (classheader)


State 356

  357 classheader: CLASS NAME '(' dotted_as_names ')' . ':'

    ':'  shift, and go to state 465


State 357

  344 classheader: FINAL CLASS NAME '(' ')' . ':'

    ':'  shift, and go to state 466


State 358

  360 classheader: FINAL CLASS NAME '(' dotted_as_names . ')' ':'

    ')'  shift, and go to state 467


State 359

  346 classheader: FINAL STATIC CLASS NAME '(' . ')' ':'
  362            | FINAL STATIC CLASS NAME '(' . dotted_as_names ')' ':'

    NAME  shift, and go to state 16
    ')'   shift, and go to state 468

    dotted_as_names  go to state 469
    dotted_as_name   go to state 18
    dotted_name      go to state 19


State 360

  330 classheader: FINAL STATIC CLASS NAME ':' .

    $default  reduce using rule 330 (classheader)


State 361

  334 classheader: FINAL STATIC access CLASS NAME . ':'
  350            | FINAL STATIC access CLASS NAME . '(' ')' ':'
  366            | FINAL STATIC access CLASS NAME . '(' dotted_as_names ')' ':'

    '('  shift, and go to state 470
    ':'  shift, and go to state 471


State 362

  348 classheader: FINAL access CLASS NAME '(' . ')' ':'
  364            | FINAL access CLASS NAME '(' . dotted_as_names ')' ':'

    NAME  shift, and go to state 16
    ')'   shift, and go to state 472

    dotted_as_names  go to state 473
    dotted_as_name   go to state 18
    dotted_name      go to state 19


State 363

  331 classheader: FINAL access CLASS NAME ':' .

    $default  reduce using rule 331 (classheader)


State 364

  340 classheader: FINAL access STATIC CLASS NAME . ':'
  356            | FINAL access STATIC CLASS NAME . '(' ')' ':'
  372            | FINAL access STATIC CLASS NAME . '(' dotted_as_names ')' ':'

    '('  shift, and go to state 474
    ':'  shift, and go to state 475


State 365

  343 classheader: STATIC CLASS NAME '(' ')' . ':'

    ':'  shift, and go to state 476


State 366

  359 classheader: STATIC CLASS NAME '(' dotted_as_names . ')' ':'

    ')'  shift, and go to state 477


State 367

  345 classheader: STATIC FINAL CLASS NAME '(' . ')' ':'
  361            | STATIC FINAL CLASS NAME '(' . dotted_as_names ')' ':'

    NAME  shift, and go to state 16
    ')'   shift, and go to state 478

    dotted_as_names  go to state 479
    dotted_as_name   go to state 18
    dotted_name      go to state 19


State 368

  329 classheader: STATIC FINAL CLASS NAME ':' .

    $default  reduce using rule 329 (classheader)


State 369

  333 classheader: STATIC FINAL access CLASS NAME . ':'
  349            | STATIC FINAL access CLASS NAME . '(' ')' ':'
  365            | STATIC FINAL access CLASS NAME . '(' dotted_as_names ')' ':'

    '('  shift, and go to state 480
    ':'  shift, and go to state 481


State 370

  347 classheader: STATIC access CLASS NAME '(' . ')' ':'
  363            | STATIC access CLASS NAME '(' . dotted_as_names ')' ':'

    NAME  shift, and go to state 16
    ')'   shift, and go to state 482

    dotted_as_names  go to state 483
    dotted_as_name   go to state 18
    dotted_name      go to state 19


State 371

  332 classheader: STATIC access CLASS NAME ':' .

    $default  reduce using rule 332 (classheader)


State 372

  339 classheader: STATIC access FINAL CLASS NAME . ':'
  355            | STATIC access FINAL CLASS NAME . '(' ')' ':'
  371            | STATIC access FINAL CLASS NAME . '(' dotted_as_names ')' ':'

    '('  shift, and go to state 484
    ':'  shift, and go to state 485


State 373

  342 classheader: access CLASS NAME '(' ')' . ':'

    ':'  shift, and go to state 486


State 374

  358 classheader: access CLASS NAME '(' dotted_as_names . ')' ':'

    ')'  shift, and go to state 487


State 375

  352 classheader: access FINAL CLASS NAME '(' . ')' ':'
  368            | access FINAL CLASS NAME '(' . dotted_as_names ')' ':'

    NAME  shift, and go to state 16
    ')'   shift, and go to state 488

    dotted_as_names  go to state 489
    dotted_as_name   go to state 18
    dotted_name      go to state 19


State 376

  336 classheader: access FINAL CLASS NAME ':' .

    $default  reduce using rule 336 (classheader)


State 377

  338 classheader: access FINAL STATIC CLASS NAME . ':'
  354            | access FINAL STATIC CLASS NAME . '(' ')' ':'
  370            | access FINAL STATIC CLASS NAME . '(' dotted_as_names ')' ':'

    '('  shift, and go to state 490
    ':'  shift, and go to state 491


State 378

  351 classheader: access STATIC CLASS NAME '(' . ')' ':'
  367            | access STATIC CLASS NAME '(' . dotted_as_names ')' ':'

    NAME  shift, and go to state 16
    ')'   shift, and go to state 492

    dotted_as_names  go to state 493
    dotted_as_name   go to state 18
    dotted_name      go to state 19


State 379

  335 classheader: access STATIC CLASS NAME ':' .

    $default  reduce using rule 335 (classheader)


State 380

  337 classheader: access STATIC FINAL CLASS NAME . ':'
  353            | access STATIC FINAL CLASS NAME . '(' ')' ':'
  369            | access STATIC FINAL CLASS NAME . '(' dotted_as_names ')' ':'

    '('  shift, and go to state 494
    ':'  shift, and go to state 495


State 381

   16 funcheader: DEF FINAL STATIC NAME . parameters ARROW test ':'
   18           | DEF FINAL STATIC NAME . parameters ':'
  124 vardef: DEF FINAL STATIC NAME .

    '('  shift, and go to state 267

    $default  reduce using rule 124 (vardef)

    parameters  go to state 496


State 382

   24 funcheader: DEF FINAL STATIC access . NAME parameters ARROW test ':'
   26           | DEF FINAL STATIC access . NAME parameters ':'
  128 vardef: DEF FINAL STATIC access . NAME
  334 classheader: FINAL STATIC access . CLASS NAME ':'
  350            | FINAL STATIC access . CLASS NAME '(' ')' ':'
  366            | FINAL STATIC access . CLASS NAME '(' dotted_as_names ')' ':'

    CLASS  shift, and go to state 246
    NAME   shift, and go to state 497


State 383

   12 funcheader: DEF FINAL NAME parameters . ARROW test ':'
   14           | DEF FINAL NAME parameters . ':'

    ARROW  shift, and go to state 498
    ':'    shift, and go to state 499


State 384

   36 funcheader: DEF FINAL access STATIC . NAME parameters ARROW test ':'
   38           | DEF FINAL access STATIC . NAME parameters ':'
  134 vardef: DEF FINAL access STATIC . NAME
  340 classheader: FINAL access STATIC . CLASS NAME ':'
  356            | FINAL access STATIC . CLASS NAME '(' ')' ':'
  372            | FINAL access STATIC . CLASS NAME '(' dotted_as_names ')' ':'

    CLASS  shift, and go to state 248
    NAME   shift, and go to state 500


State 385

   19 funcheader: DEF FINAL access NAME . parameters ARROW test ':'
   22           | DEF FINAL access NAME . parameters ':'
  126 vardef: DEF FINAL access NAME .

    '('  shift, and go to state 267

    $default  reduce using rule 126 (vardef)

    parameters  go to state 501


State 386

   15 funcheader: DEF STATIC FINAL NAME . parameters ARROW test ':'
   17           | DEF STATIC FINAL NAME . parameters ':'
  123 vardef: DEF STATIC FINAL NAME .

    '('  shift, and go to state 267

    $default  reduce using rule 123 (vardef)

    parameters  go to state 502


State 387

   23 funcheader: DEF STATIC FINAL access . NAME parameters ARROW test ':'
   25           | DEF STATIC FINAL access . NAME parameters ':'
  127 vardef: DEF STATIC FINAL access . NAME
  333 classheader: STATIC FINAL access . CLASS NAME ':'
  349            | STATIC FINAL access . CLASS NAME '(' ')' ':'
  365            | STATIC FINAL access . CLASS NAME '(' dotted_as_names ')' ':'

    CLASS  shift, and go to state 252
    NAME   shift, and go to state 503


State 388

   11 funcheader: DEF STATIC NAME parameters . ARROW test ':'
   13           | DEF STATIC NAME parameters . ':'

    ARROW  shift, and go to state 504
    ':'    shift, and go to state 505


State 389

   35 funcheader: DEF STATIC access FINAL . NAME parameters ARROW test ':'
   37           | DEF STATIC access FINAL . NAME parameters ':'
  133 vardef: DEF STATIC access FINAL . NAME
  339 classheader: STATIC access FINAL . CLASS NAME ':'
  355            | STATIC access FINAL . CLASS NAME '(' ')' ':'
  371            | STATIC access FINAL . CLASS NAME '(' dotted_as_names ')' ':'

    CLASS  shift, and go to state 254
    NAME   shift, and go to state 506


State 390

   20 funcheader: DEF STATIC access NAME . parameters ARROW test ':'
   21           | DEF STATIC access NAME . parameters ':'
  125 vardef: DEF STATIC access NAME .

    '('  shift, and go to state 267

    $default  reduce using rule 125 (vardef)

    parameters  go to state 507


State 391

   40 parameters: '(' ')' .

    $default  reduce using rule 40 (parameters)


State 392

   39 parameters: '(' arglist . ')'

    ')'  shift, and go to state 508


State 393

    7 funcheader: DEF NAME parameters ARROW . test ':'

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    test        go to state 509
    or_test     go to state 96
    and_test    go to state 97
    not_test    go to state 98
    comparison  go to state 99
    expr        go to state 101
    xor_expr    go to state 102
    and_expr    go to state 103
    shift_expr  go to state 104
    arith_expr  go to state 105
    term        go to state 106
    factor      go to state 107
    power       go to state 108
    str_seq     go to state 109
    atom        go to state 110


State 394

    9 funcheader: DEF NAME parameters ':' .

    $default  reduce using rule 9 (funcheader)


State 395

   32 funcheader: DEF access FINAL STATIC . NAME parameters ARROW test ':'
   34           | DEF access FINAL STATIC . NAME parameters ':'
  132 vardef: DEF access FINAL STATIC . NAME
  338 classheader: access FINAL STATIC . CLASS NAME ':'
  354            | access FINAL STATIC . CLASS NAME '(' ')' ':'
  370            | access FINAL STATIC . CLASS NAME '(' dotted_as_names ')' ':'

    CLASS  shift, and go to state 258
    NAME   shift, and go to state 510


State 396

   28 funcheader: DEF access FINAL NAME . parameters ARROW test ':'
   30           | DEF access FINAL NAME . parameters ':'
  130 vardef: DEF access FINAL NAME .

    '('  shift, and go to state 267

    $default  reduce using rule 130 (vardef)

    parameters  go to state 511


State 397

   31 funcheader: DEF access STATIC FINAL . NAME parameters ARROW test ':'
   33           | DEF access STATIC FINAL . NAME parameters ':'
  131 vardef: DEF access STATIC FINAL . NAME
  337 classheader: access STATIC FINAL . CLASS NAME ':'
  353            | access STATIC FINAL . CLASS NAME '(' ')' ':'
  369            | access STATIC FINAL . CLASS NAME '(' dotted_as_names ')' ':'

    CLASS  shift, and go to state 260
    NAME   shift, and go to state 512


State 398

   27 funcheader: DEF access STATIC NAME . parameters ARROW test ':'
   29           | DEF access STATIC NAME . parameters ':'
  129 vardef: DEF access STATIC NAME .

    '('  shift, and go to state 267

    $default  reduce using rule 129 (vardef)

    parameters  go to state 513


State 399

    8 funcheader: DEF access NAME parameters . ARROW test ':'
   10           | DEF access NAME parameters . ':'

    ARROW  shift, and go to state 514
    ':'    shift, and go to state 515


State 400

  137 if_stmt: IF test ':' suite .
  138        | IF test ':' suite . elif_seq
  139        | IF test ':' suite . ELSE ':' suite
  140        | IF test ':' suite . elif_seq ELSE ':' suite

    ELSE  shift, and go to state 516
    ELIF  shift, and go to state 517

    $default  reduce using rule 137 (if_stmt)

    elif_seq  go to state 518


State 401

  141 while_stmt: WHILE test ':' suite .
  142           | WHILE test ':' suite . ELSE ':' suite

    ELSE  shift, and go to state 519

    $default  reduce using rule 141 (while_stmt)


State 402

  293 comma_expr_star_seq: ',' star_expr .

    $default  reduce using rule 293 (comma_expr_star_seq)


State 403

  292 comma_expr_star_seq: ',' expr .

    $default  reduce using rule 292 (comma_expr_star_seq)


State 404

  294 comma_expr_star_seq: comma_expr_star_seq ',' . expr
  295                    | comma_expr_star_seq ',' . star_expr
  303 exprlist: star_expr comma_expr_star_seq ',' .

    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    $default  reduce using rule 303 (exprlist)

    star_expr   go to state 520
    expr        go to state 521
    xor_expr    go to state 102
    and_expr    go to state 103
    shift_expr  go to state 104
    arith_expr  go to state 105
    term        go to state 106
    factor      go to state 107
    power       go to state 108
    str_seq     go to state 109
    atom        go to state 110


State 405

  294 comma_expr_star_seq: comma_expr_star_seq ',' . expr
  295                    | comma_expr_star_seq ',' . star_expr
  301 exprlist: expr comma_expr_star_seq ',' .

    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    $default  reduce using rule 301 (exprlist)

    star_expr   go to state 520
    expr        go to state 521
    xor_expr    go to state 102
    and_expr    go to state 103
    shift_expr  go to state 104
    arith_expr  go to state 105
    term        go to state 106
    factor      go to state 107
    power       go to state 108
    str_seq     go to state 109
    atom        go to state 110


State 406

  143 for_stmt: FOR exprlist IN testlist . ':' suite
  144         | FOR exprlist IN testlist . ':' suite ELSE ':' suite

    ':'  shift, and go to state 522


State 407

  148 try_stmt: TRY ':' suite FINALLY . ':' suite

    ':'  shift, and go to state 523


State 408

  157 except_clause: EXCEPT .
  158              | EXCEPT . test
  159              | EXCEPT . test AS NAME

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    $default  reduce using rule 157 (except_clause)

    test        go to state 524
    or_test     go to state 96
    and_test    go to state 97
    not_test    go to state 98
    comparison  go to state 99
    expr        go to state 101
    xor_expr    go to state 102
    and_expr    go to state 103
    shift_expr  go to state 104
    arith_expr  go to state 105
    term        go to state 106
    factor      go to state 107
    power       go to state 108
    str_seq     go to state 109
    atom        go to state 110


State 409

  145 try_stmt: TRY ':' suite try_except_cla_seq .
  146         | TRY ':' suite try_except_cla_seq . ELSE ':' suite
  147         | TRY ':' suite try_except_cla_seq . FINALLY ':' suite
  150 try_except_cla_seq: try_except_cla_seq . except_clause ':' suite

    ELSE     shift, and go to state 525
    FINALLY  shift, and go to state 526
    EXCEPT   shift, and go to state 408

    $default  reduce using rule 145 (try_stmt)

    except_clause  go to state 527


State 410

  149 try_except_cla_seq: except_clause . ':' suite

    ':'  shift, and go to state 528


State 411

  105 comma_name_seq: ',' NAME .

    $default  reduce using rule 105 (comma_name_seq)


State 412

  106 comma_name_seq: comma_name_seq ',' . NAME

    NAME  shift, and go to state 529


State 413

  386 arglist: STAR_2 test .

    $default  reduce using rule 386 (arglist)


State 414

  380 arglist: '*' test .
  381        | '*' test . ',' STAR_2 test
  382        | '*' test . comma_arg_seq
  383        | '*' test . comma_default_arg_seq
  384        | '*' test . comma_arg_seq comma_default_arg_seq
  385        | '*' test . comma_arg_seq ',' STAR_2 test

    ','  shift, and go to state 530

    $default  reduce using rule 380 (arglist)

    comma_arg_seq          go to state 531
    comma_default_arg_seq  go to state 532


State 415

  402 default_arg: test '=' . test

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    test        go to state 533
    or_test     go to state 96
    and_test    go to state 97
    not_test    go to state 98
    comparison  go to state 99
    expr        go to state 101
    xor_expr    go to state 102
    and_expr    go to state 103
    shift_expr  go to state 104
    arith_expr  go to state 105
    term        go to state 106
    factor      go to state 107
    power       go to state 108
    str_seq     go to state 109
    atom        go to state 110


State 416

  404 argument: test comp_for .

    $default  reduce using rule 404 (argument)


State 417

  397 arglist: arg_comma_seq STAR_2 . test

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    test        go to state 534
    or_test     go to state 96
    and_test    go to state 97
    not_test    go to state 98
    comparison  go to state 99
    expr        go to state 101
    xor_expr    go to state 102
    and_expr    go to state 103
    shift_expr  go to state 104
    arith_expr  go to state 105
    term        go to state 106
    factor      go to state 107
    power       go to state 108
    str_seq     go to state 109
    atom        go to state 110


State 418

  391 arglist: arg_comma_seq '*' . test
  392        | arg_comma_seq '*' . test ',' STAR_2 test
  393        | arg_comma_seq '*' . test comma_arg_seq
  394        | arg_comma_seq '*' . test comma_default_arg_seq
  395        | arg_comma_seq '*' . test comma_arg_seq comma_default_arg_seq
  396        | arg_comma_seq '*' . test comma_arg_seq ',' STAR_2 test

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    test        go to state 535
    or_test     go to state 96
    and_test    go to state 97
    not_test    go to state 98
    comparison  go to state 99
    expr        go to state 101
    xor_expr    go to state 102
    and_expr    go to state 103
    shift_expr  go to state 104
    arith_expr  go to state 105
    term        go to state 106
    factor      go to state 107
    power       go to state 108
    str_seq     go to state 109
    atom        go to state 110


State 419

  389 arglist: arg_comma_seq default_arg_comma_seq . default_arg
  401 default_arg_comma_seq: default_arg_comma_seq . default_arg ','

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    test         go to state 536
    or_test      go to state 96
    and_test     go to state 97
    not_test     go to state 98
    comparison   go to state 99
    expr         go to state 101
    xor_expr     go to state 102
    and_expr     go to state 103
    shift_expr   go to state 104
    arith_expr   go to state 105
    term         go to state 106
    factor       go to state 107
    power        go to state 108
    str_seq      go to state 109
    atom         go to state 110
    default_arg  go to state 537


State 420

  388 arglist: arg_comma_seq default_arg .
  400 default_arg_comma_seq: default_arg . ','

    ','  shift, and go to state 538

    $default  reduce using rule 388 (arglist)


State 421

  374 arg_comma_seq: arg_comma_seq argument . ','
  387 arglist: arg_comma_seq argument .
  390        | arg_comma_seq argument . ','

    ','  shift, and go to state 539

    $default  reduce using rule 387 (arglist)


State 422

  246 atom: NAME '(' arglist ')' .

    $default  reduce using rule 246 (atom)


State 423

  373 arg_comma_seq: argument ',' .
  379 arglist: argument ',' .

    ')'       reduce using rule 379 (arglist)
    $default  reduce using rule 373 (arg_comma_seq)


State 424

  290 sliceop: ':' .
  291        | ':' . test

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    $default  reduce using rule 290 (sliceop)

    test        go to state 540
    or_test     go to state 96
    and_test    go to state 97
    not_test    go to state 98
    comparison  go to state 99
    expr        go to state 101
    xor_expr    go to state 102
    and_expr    go to state 103
    shift_expr  go to state 104
    arith_expr  go to state 105
    term        go to state 106
    factor      go to state 107
    power       go to state 108
    str_seq     go to state 109
    atom        go to state 110


State 425

  287 subscript: ':' test .
  289          | ':' test . sliceop

    ':'  shift, and go to state 424

    $default  reduce using rule 287 (subscript)

    sliceop  go to state 541


State 426

  288 subscript: ':' sliceop .

    $default  reduce using rule 288 (subscript)


State 427

  283 subscript: test ':' .
  284          | test ':' . test
  285          | test ':' . sliceop
  286          | test ':' . test sliceop

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    ':'           shift, and go to state 424
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    $default  reduce using rule 283 (subscript)

    test        go to state 542
    or_test     go to state 96
    and_test    go to state 97
    not_test    go to state 98
    comparison  go to state 99
    expr        go to state 101
    xor_expr    go to state 102
    and_expr    go to state 103
    shift_expr  go to state 104
    arith_expr  go to state 105
    term        go to state 106
    factor      go to state 107
    power       go to state 108
    str_seq     go to state 109
    atom        go to state 110
    sliceop     go to state 543


State 428

  247 atom: NAME '[' subscriptlist ']' .

    $default  reduce using rule 247 (atom)


State 429

  275 comma_subscript_seq: ',' . subscript
  279 subscriptlist: subscript ',' .

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    ':'           shift, and go to state 290
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    $default  reduce using rule 279 (subscriptlist)

    test        go to state 291
    or_test     go to state 96
    and_test    go to state 97
    not_test    go to state 98
    comparison  go to state 99
    expr        go to state 101
    xor_expr    go to state 102
    and_expr    go to state 103
    shift_expr  go to state 104
    arith_expr  go to state 105
    term        go to state 106
    factor      go to state 107
    power       go to state 108
    str_seq     go to state 109
    atom        go to state 110
    subscript   go to state 544


State 430

  276 comma_subscript_seq: comma_subscript_seq . ',' subscript
  278 subscriptlist: subscript comma_subscript_seq .
  280              | subscript comma_subscript_seq . ','

    ','  shift, and go to state 545

    $default  reduce using rule 278 (subscriptlist)


State 431

  151 with_seq: ',' with_item .

    $default  reduce using rule 151 (with_seq)


State 432

  153 with_stmt: WITH with_item ':' suite .

    $default  reduce using rule 153 (with_stmt)


State 433

  152 with_seq: with_seq ',' . with_item

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    with_item   go to state 546
    test        go to state 150
    or_test     go to state 96
    and_test    go to state 97
    not_test    go to state 98
    comparison  go to state 99
    expr        go to state 101
    xor_expr    go to state 102
    and_expr    go to state 103
    shift_expr  go to state 104
    arith_expr  go to state 105
    term        go to state 106
    factor      go to state 107
    power       go to state 108
    str_seq     go to state 109
    atom        go to state 110


State 434

  154 with_stmt: WITH with_item with_seq ':' . suite

    IMPORT        shift, and go to state 1
    END           shift, and go to state 33
    NOT           shift, and go to state 34
    DEF           shift, and go to state 35
    IF            shift, and go to state 36
    WHILE         shift, and go to state 37
    FOR           shift, and go to state 38
    TRY           shift, and go to state 39
    NONLOCAL      shift, and go to state 40
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    WITH          shift, and go to state 48
    DEL           shift, and go to state 49
    RETURN        shift, and go to state 50
    PRINT         shift, and go to state 51
    GLOBAL        shift, and go to state 52
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    PASS          shift, and go to state 55
    CHAR_VALUE    shift, and go to state 56
    BREAK         shift, and go to state 57
    CONTINUE      shift, and go to state 58
    ','           shift, and go to state 59
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    funcdef               go to state 67
    funcheader            go to state 68
    stmt                  go to state 69
    simple_stmt           go to state 70
    small_stmt            go to state 71
    expr_stmt             go to state 72
    testlist_star_expr    go to state 73
    comma_test_star       go to state 74
    comma_test_star_seqJ  go to state 75
    print_stmt            go to state 76
    del_stmt              go to state 77
    pass_stmt             go to state 78
    flow_stmt             go to state 79
    break_stmt            go to state 80
    continue_stmt         go to state 81
    return_stmt           go to state 82
    import_stmt           go to state 83
    import_name           go to state 13
    global_stmt           go to state 84
    nonlocal_stmt         go to state 85
    compound_stmt         go to state 86
    vardef                go to state 87
    if_stmt               go to state 88
    while_stmt            go to state 89
    for_stmt              go to state 90
    try_stmt              go to state 91
    with_stmt             go to state 92
    list_stmt             go to state 93
    suite                 go to state 547
    test                  go to state 95
    or_test               go to state 96
    and_test              go to state 97
    not_test              go to state 98
    comparison            go to state 99
    star_expr             go to state 100
    expr                  go to state 101
    xor_expr              go to state 102
    and_expr              go to state 103
    shift_expr            go to state 104
    arith_expr            go to state 105
    term                  go to state 106
    factor                go to state 107
    power                 go to state 108
    str_seq               go to state 109
    atom                  go to state 110


State 435

  156 with_item: test AS expr .

    $default  reduce using rule 156 (with_item)


State 436

  304 comma_test: ',' test .
  305           | ',' test . comma_test

    ','  error (nonassociative)

    $default  reduce using rule 304 (comma_test)

    comma_test  go to state 548


State 437

  309 testlist: test comma_test ',' .

    $default  reduce using rule 309 (testlist)


State 438

  407 comp_for: FOR exprlist . IN or_test
  408         | FOR exprlist . IN or_test comp_iter

    IN  shift, and go to state 549


State 439

  257 comma_test_star_seq: ',' test .

    $default  reduce using rule 257 (comma_test_star_seq)


State 440

  258 comma_test_star_seq: ',' star_expr .

    $default  reduce using rule 258 (comma_test_star_seq)


State 441

  259 comma_test_star_seq: comma_test_star_seq ',' . test
  260                    | comma_test_star_seq ',' . star_expr
  265 testlist_comp: test comma_test_star_seq ',' .

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    $default  reduce using rule 265 (testlist_comp)

    test        go to state 550
    or_test     go to state 96
    and_test    go to state 97
    not_test    go to state 98
    comparison  go to state 99
    star_expr   go to state 551
    expr        go to state 101
    xor_expr    go to state 102
    and_expr    go to state 103
    shift_expr  go to state 104
    arith_expr  go to state 105
    term        go to state 106
    factor      go to state 107
    power       go to state 108
    str_seq     go to state 109
    atom        go to state 110


State 442

  259 comma_test_star_seq: comma_test_star_seq ',' . test
  260                    | comma_test_star_seq ',' . star_expr
  270 testlist_comp: star_expr comma_test_star_seq ',' .

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    $default  reduce using rule 270 (testlist_comp)

    test        go to state 550
    or_test     go to state 96
    and_test    go to state 97
    not_test    go to state 98
    comparison  go to state 99
    star_expr   go to state 551
    expr        go to state 101
    xor_expr    go to state 102
    and_expr    go to state 103
    shift_expr  go to state 104
    arith_expr  go to state 105
    term        go to state 106
    factor      go to state 107
    power       go to state 108
    str_seq     go to state 109
    atom        go to state 110


State 443

  312 comma_test_seq: ',' test .

    $default  reduce using rule 312 (comma_test_seq)


State 444

  314 dictorsetmaker: test ':' test . comp_for
  315               | test ':' test .
  316               | test ':' test . ','
  317               | test ':' test . comma_test_colon_test_seq
  318               | test ':' test . comma_test_colon_test_seq ','

    FOR  shift, and go to state 301
    ','  shift, and go to state 552

    $default  reduce using rule 315 (dictorsetmaker)

    comma_test_colon_test_seq  go to state 553
    comp_for                   go to state 554


State 445

  313 comma_test_seq: comma_test_seq ',' . test
  323 dictorsetmaker: test comma_test_seq ',' .

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    $default  reduce using rule 323 (dictorsetmaker)

    test        go to state 555
    or_test     go to state 96
    and_test    go to state 97
    not_test    go to state 98
    comparison  go to state 99
    expr        go to state 101
    xor_expr    go to state 102
    and_expr    go to state 103
    shift_expr  go to state 104
    arith_expr  go to state 105
    term        go to state 106
    factor      go to state 107
    power       go to state 108
    str_seq     go to state 109
    atom        go to state 110


State 446

   55 right_testlist: '=' testlist_star_expr right_testlist .

    $default  reduce using rule 55 (right_testlist)


State 447

  165 test: or_test IF or_test ELSE . test

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    test        go to state 556
    or_test     go to state 96
    and_test    go to state 97
    not_test    go to state 98
    comparison  go to state 99
    expr        go to state 101
    xor_expr    go to state 102
    and_expr    go to state 103
    shift_expr  go to state 104
    arith_expr  go to state 105
    term        go to state 106
    factor      go to state 107
    power       go to state 108
    str_seq     go to state 109
    atom        go to state 110


State 448

  167 or_seq: or_seq OR and_test .

    $default  reduce using rule 167 (or_seq)


State 449

  171 and_seq: and_seq AND not_test .

    $default  reduce using rule 171 (and_seq)


State 450

  177 comp_op_seq: comp_op_seq comp_op expr .

    $default  reduce using rule 177 (comp_op_seq)


State 451

  193 or_xor_expr_seq: or_xor_expr_seq '|' xor_expr .

    $default  reduce using rule 193 (or_xor_expr_seq)


State 452

  197 sha_and_expr_seq: sha_and_expr_seq '^' and_expr .

    $default  reduce using rule 197 (sha_and_expr_seq)


State 453

  201 and_shift_expr_seq: and_shift_expr_seq '&' shift_expr .

    $default  reduce using rule 201 (and_shift_expr_seq)


State 454

  206 arith_seq: arith_seq LESS_THAN_2 arith_expr .

    $default  reduce using rule 206 (arith_seq)


State 455

  207 arith_seq: arith_seq MORE_THAN_2 arith_expr .

    $default  reduce using rule 207 (arith_seq)


State 456

  212 term_seq: term_seq '+' term .

    $default  reduce using rule 212 (term_seq)


State 457

  213 term_seq: term_seq '-' term .

    $default  reduce using rule 213 (term_seq)


State 458

  223 factor_seq: factor_seq DIV_2 factor .

    $default  reduce using rule 223 (factor_seq)


State 459

  220 factor_seq: factor_seq '*' factor .

    $default  reduce using rule 220 (factor_seq)


State 460

  221 factor_seq: factor_seq '/' factor .

    $default  reduce using rule 221 (factor_seq)


State 461

  222 factor_seq: factor_seq '%' factor .

    $default  reduce using rule 222 (factor_seq)


State 462

  272 trailer: '.' NAME '(' . ')'
  273        | '.' NAME '(' . arglist ')'

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    STAR_2        shift, and go to state 282
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 283
    ')'           shift, and go to state 557
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    test           go to state 285
    or_test        go to state 96
    and_test       go to state 97
    not_test       go to state 98
    comparison     go to state 99
    expr           go to state 101
    xor_expr       go to state 102
    and_expr       go to state 103
    shift_expr     go to state 104
    arith_expr     go to state 105
    term           go to state 106
    factor         go to state 107
    power          go to state 108
    str_seq        go to state 109
    atom           go to state 110
    arg_comma_seq  go to state 286
    arglist        go to state 558
    default_arg    go to state 288
    argument       go to state 289


State 463

  274 trailer: '.' NAME '[' . subscriptlist ']'

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    ':'           shift, and go to state 290
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    test           go to state 291
    or_test        go to state 96
    and_test       go to state 97
    not_test       go to state 98
    comparison     go to state 99
    expr           go to state 101
    xor_expr       go to state 102
    and_expr       go to state 103
    shift_expr     go to state 104
    arith_expr     go to state 105
    term           go to state 106
    factor         go to state 107
    power          go to state 108
    str_seq        go to state 109
    atom           go to state 110
    subscriptlist  go to state 559
    subscript      go to state 293


State 464

  234 power: atom trailer_seq STAR_2 factor .

    $default  reduce using rule 234 (power)


State 465

  357 classheader: CLASS NAME '(' dotted_as_names ')' ':' .

    $default  reduce using rule 357 (classheader)


State 466

  344 classheader: FINAL CLASS NAME '(' ')' ':' .

    $default  reduce using rule 344 (classheader)


State 467

  360 classheader: FINAL CLASS NAME '(' dotted_as_names ')' . ':'

    ':'  shift, and go to state 560


State 468

  346 classheader: FINAL STATIC CLASS NAME '(' ')' . ':'

    ':'  shift, and go to state 561


State 469

  362 classheader: FINAL STATIC CLASS NAME '(' dotted_as_names . ')' ':'

    ')'  shift, and go to state 562


State 470

  350 classheader: FINAL STATIC access CLASS NAME '(' . ')' ':'
  366            | FINAL STATIC access CLASS NAME '(' . dotted_as_names ')' ':'

    NAME  shift, and go to state 16
    ')'   shift, and go to state 563

    dotted_as_names  go to state 564
    dotted_as_name   go to state 18
    dotted_name      go to state 19


State 471

  334 classheader: FINAL STATIC access CLASS NAME ':' .

    $default  reduce using rule 334 (classheader)


State 472

  348 classheader: FINAL access CLASS NAME '(' ')' . ':'

    ':'  shift, and go to state 565


State 473

  364 classheader: FINAL access CLASS NAME '(' dotted_as_names . ')' ':'

    ')'  shift, and go to state 566


State 474

  356 classheader: FINAL access STATIC CLASS NAME '(' . ')' ':'
  372            | FINAL access STATIC CLASS NAME '(' . dotted_as_names ')' ':'

    NAME  shift, and go to state 16
    ')'   shift, and go to state 567

    dotted_as_names  go to state 568
    dotted_as_name   go to state 18
    dotted_name      go to state 19


State 475

  340 classheader: FINAL access STATIC CLASS NAME ':' .

    $default  reduce using rule 340 (classheader)


State 476

  343 classheader: STATIC CLASS NAME '(' ')' ':' .

    $default  reduce using rule 343 (classheader)


State 477

  359 classheader: STATIC CLASS NAME '(' dotted_as_names ')' . ':'

    ':'  shift, and go to state 569


State 478

  345 classheader: STATIC FINAL CLASS NAME '(' ')' . ':'

    ':'  shift, and go to state 570


State 479

  361 classheader: STATIC FINAL CLASS NAME '(' dotted_as_names . ')' ':'

    ')'  shift, and go to state 571


State 480

  349 classheader: STATIC FINAL access CLASS NAME '(' . ')' ':'
  365            | STATIC FINAL access CLASS NAME '(' . dotted_as_names ')' ':'

    NAME  shift, and go to state 16
    ')'   shift, and go to state 572

    dotted_as_names  go to state 573
    dotted_as_name   go to state 18
    dotted_name      go to state 19


State 481

  333 classheader: STATIC FINAL access CLASS NAME ':' .

    $default  reduce using rule 333 (classheader)


State 482

  347 classheader: STATIC access CLASS NAME '(' ')' . ':'

    ':'  shift, and go to state 574


State 483

  363 classheader: STATIC access CLASS NAME '(' dotted_as_names . ')' ':'

    ')'  shift, and go to state 575


State 484

  355 classheader: STATIC access FINAL CLASS NAME '(' . ')' ':'
  371            | STATIC access FINAL CLASS NAME '(' . dotted_as_names ')' ':'

    NAME  shift, and go to state 16
    ')'   shift, and go to state 576

    dotted_as_names  go to state 577
    dotted_as_name   go to state 18
    dotted_name      go to state 19


State 485

  339 classheader: STATIC access FINAL CLASS NAME ':' .

    $default  reduce using rule 339 (classheader)


State 486

  342 classheader: access CLASS NAME '(' ')' ':' .

    $default  reduce using rule 342 (classheader)


State 487

  358 classheader: access CLASS NAME '(' dotted_as_names ')' . ':'

    ':'  shift, and go to state 578


State 488

  352 classheader: access FINAL CLASS NAME '(' ')' . ':'

    ':'  shift, and go to state 579


State 489

  368 classheader: access FINAL CLASS NAME '(' dotted_as_names . ')' ':'

    ')'  shift, and go to state 580


State 490

  354 classheader: access FINAL STATIC CLASS NAME '(' . ')' ':'
  370            | access FINAL STATIC CLASS NAME '(' . dotted_as_names ')' ':'

    NAME  shift, and go to state 16
    ')'   shift, and go to state 581

    dotted_as_names  go to state 582
    dotted_as_name   go to state 18
    dotted_name      go to state 19


State 491

  338 classheader: access FINAL STATIC CLASS NAME ':' .

    $default  reduce using rule 338 (classheader)


State 492

  351 classheader: access STATIC CLASS NAME '(' ')' . ':'

    ':'  shift, and go to state 583


State 493

  367 classheader: access STATIC CLASS NAME '(' dotted_as_names . ')' ':'

    ')'  shift, and go to state 584


State 494

  353 classheader: access STATIC FINAL CLASS NAME '(' . ')' ':'
  369            | access STATIC FINAL CLASS NAME '(' . dotted_as_names ')' ':'

    NAME  shift, and go to state 16
    ')'   shift, and go to state 585

    dotted_as_names  go to state 586
    dotted_as_name   go to state 18
    dotted_name      go to state 19


State 495

  337 classheader: access STATIC FINAL CLASS NAME ':' .

    $default  reduce using rule 337 (classheader)


State 496

   16 funcheader: DEF FINAL STATIC NAME parameters . ARROW test ':'
   18           | DEF FINAL STATIC NAME parameters . ':'

    ARROW  shift, and go to state 587
    ':'    shift, and go to state 588


State 497

   24 funcheader: DEF FINAL STATIC access NAME . parameters ARROW test ':'
   26           | DEF FINAL STATIC access NAME . parameters ':'
  128 vardef: DEF FINAL STATIC access NAME .

    '('  shift, and go to state 267

    $default  reduce using rule 128 (vardef)

    parameters  go to state 589


State 498

   12 funcheader: DEF FINAL NAME parameters ARROW . test ':'

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    test        go to state 590
    or_test     go to state 96
    and_test    go to state 97
    not_test    go to state 98
    comparison  go to state 99
    expr        go to state 101
    xor_expr    go to state 102
    and_expr    go to state 103
    shift_expr  go to state 104
    arith_expr  go to state 105
    term        go to state 106
    factor      go to state 107
    power       go to state 108
    str_seq     go to state 109
    atom        go to state 110


State 499

   14 funcheader: DEF FINAL NAME parameters ':' .

    $default  reduce using rule 14 (funcheader)


State 500

   36 funcheader: DEF FINAL access STATIC NAME . parameters ARROW test ':'
   38           | DEF FINAL access STATIC NAME . parameters ':'
  134 vardef: DEF FINAL access STATIC NAME .

    '('  shift, and go to state 267

    $default  reduce using rule 134 (vardef)

    parameters  go to state 591


State 501

   19 funcheader: DEF FINAL access NAME parameters . ARROW test ':'
   22           | DEF FINAL access NAME parameters . ':'

    ARROW  shift, and go to state 592
    ':'    shift, and go to state 593


State 502

   15 funcheader: DEF STATIC FINAL NAME parameters . ARROW test ':'
   17           | DEF STATIC FINAL NAME parameters . ':'

    ARROW  shift, and go to state 594
    ':'    shift, and go to state 595


State 503

   23 funcheader: DEF STATIC FINAL access NAME . parameters ARROW test ':'
   25           | DEF STATIC FINAL access NAME . parameters ':'
  127 vardef: DEF STATIC FINAL access NAME .

    '('  shift, and go to state 267

    $default  reduce using rule 127 (vardef)

    parameters  go to state 596


State 504

   11 funcheader: DEF STATIC NAME parameters ARROW . test ':'

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    test        go to state 597
    or_test     go to state 96
    and_test    go to state 97
    not_test    go to state 98
    comparison  go to state 99
    expr        go to state 101
    xor_expr    go to state 102
    and_expr    go to state 103
    shift_expr  go to state 104
    arith_expr  go to state 105
    term        go to state 106
    factor      go to state 107
    power       go to state 108
    str_seq     go to state 109
    atom        go to state 110


State 505

   13 funcheader: DEF STATIC NAME parameters ':' .

    $default  reduce using rule 13 (funcheader)


State 506

   35 funcheader: DEF STATIC access FINAL NAME . parameters ARROW test ':'
   37           | DEF STATIC access FINAL NAME . parameters ':'
  133 vardef: DEF STATIC access FINAL NAME .

    '('  shift, and go to state 267

    $default  reduce using rule 133 (vardef)

    parameters  go to state 598


State 507

   20 funcheader: DEF STATIC access NAME parameters . ARROW test ':'
   21           | DEF STATIC access NAME parameters . ':'

    ARROW  shift, and go to state 599
    ':'    shift, and go to state 600


State 508

   39 parameters: '(' arglist ')' .

    $default  reduce using rule 39 (parameters)


State 509

    7 funcheader: DEF NAME parameters ARROW test . ':'

    ':'  shift, and go to state 601


State 510

   32 funcheader: DEF access FINAL STATIC NAME . parameters ARROW test ':'
   34           | DEF access FINAL STATIC NAME . parameters ':'
  132 vardef: DEF access FINAL STATIC NAME .

    '('  shift, and go to state 267

    $default  reduce using rule 132 (vardef)

    parameters  go to state 602


State 511

   28 funcheader: DEF access FINAL NAME parameters . ARROW test ':'
   30           | DEF access FINAL NAME parameters . ':'

    ARROW  shift, and go to state 603
    ':'    shift, and go to state 604


State 512

   31 funcheader: DEF access STATIC FINAL NAME . parameters ARROW test ':'
   33           | DEF access STATIC FINAL NAME . parameters ':'
  131 vardef: DEF access STATIC FINAL NAME .

    '('  shift, and go to state 267

    $default  reduce using rule 131 (vardef)

    parameters  go to state 605


State 513

   27 funcheader: DEF access STATIC NAME parameters . ARROW test ':'
   29           | DEF access STATIC NAME parameters . ':'

    ARROW  shift, and go to state 606
    ':'    shift, and go to state 607


State 514

    8 funcheader: DEF access NAME parameters ARROW . test ':'

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    test        go to state 608
    or_test     go to state 96
    and_test    go to state 97
    not_test    go to state 98
    comparison  go to state 99
    expr        go to state 101
    xor_expr    go to state 102
    and_expr    go to state 103
    shift_expr  go to state 104
    arith_expr  go to state 105
    term        go to state 106
    factor      go to state 107
    power       go to state 108
    str_seq     go to state 109
    atom        go to state 110


State 515

   10 funcheader: DEF access NAME parameters ':' .

    $default  reduce using rule 10 (funcheader)


State 516

  139 if_stmt: IF test ':' suite ELSE . ':' suite

    ':'  shift, and go to state 609


State 517

  135 elif_seq: ELIF . test ':' suite

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    test        go to state 610
    or_test     go to state 96
    and_test    go to state 97
    not_test    go to state 98
    comparison  go to state 99
    expr        go to state 101
    xor_expr    go to state 102
    and_expr    go to state 103
    shift_expr  go to state 104
    arith_expr  go to state 105
    term        go to state 106
    factor      go to state 107
    power       go to state 108
    str_seq     go to state 109
    atom        go to state 110


State 518

  136 elif_seq: elif_seq . ELIF test ':' suite
  138 if_stmt: IF test ':' suite elif_seq .
  140        | IF test ':' suite elif_seq . ELSE ':' suite

    ELSE  shift, and go to state 611
    ELIF  shift, and go to state 612

    $default  reduce using rule 138 (if_stmt)


State 519

  142 while_stmt: WHILE test ':' suite ELSE . ':' suite

    ':'  shift, and go to state 613


State 520

  295 comma_expr_star_seq: comma_expr_star_seq ',' star_expr .

    $default  reduce using rule 295 (comma_expr_star_seq)


State 521

  294 comma_expr_star_seq: comma_expr_star_seq ',' expr .

    $default  reduce using rule 294 (comma_expr_star_seq)


State 522

  143 for_stmt: FOR exprlist IN testlist ':' . suite
  144         | FOR exprlist IN testlist ':' . suite ELSE ':' suite

    IMPORT        shift, and go to state 1
    END           shift, and go to state 33
    NOT           shift, and go to state 34
    DEF           shift, and go to state 35
    IF            shift, and go to state 36
    WHILE         shift, and go to state 37
    FOR           shift, and go to state 38
    TRY           shift, and go to state 39
    NONLOCAL      shift, and go to state 40
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    WITH          shift, and go to state 48
    DEL           shift, and go to state 49
    RETURN        shift, and go to state 50
    PRINT         shift, and go to state 51
    GLOBAL        shift, and go to state 52
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    PASS          shift, and go to state 55
    CHAR_VALUE    shift, and go to state 56
    BREAK         shift, and go to state 57
    CONTINUE      shift, and go to state 58
    ','           shift, and go to state 59
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    funcdef               go to state 67
    funcheader            go to state 68
    stmt                  go to state 69
    simple_stmt           go to state 70
    small_stmt            go to state 71
    expr_stmt             go to state 72
    testlist_star_expr    go to state 73
    comma_test_star       go to state 74
    comma_test_star_seqJ  go to state 75
    print_stmt            go to state 76
    del_stmt              go to state 77
    pass_stmt             go to state 78
    flow_stmt             go to state 79
    break_stmt            go to state 80
    continue_stmt         go to state 81
    return_stmt           go to state 82
    import_stmt           go to state 83
    import_name           go to state 13
    global_stmt           go to state 84
    nonlocal_stmt         go to state 85
    compound_stmt         go to state 86
    vardef                go to state 87
    if_stmt               go to state 88
    while_stmt            go to state 89
    for_stmt              go to state 90
    try_stmt              go to state 91
    with_stmt             go to state 92
    list_stmt             go to state 93
    suite                 go to state 614
    test                  go to state 95
    or_test               go to state 96
    and_test              go to state 97
    not_test              go to state 98
    comparison            go to state 99
    star_expr             go to state 100
    expr                  go to state 101
    xor_expr              go to state 102
    and_expr              go to state 103
    shift_expr            go to state 104
    arith_expr            go to state 105
    term                  go to state 106
    factor                go to state 107
    power                 go to state 108
    str_seq               go to state 109
    atom                  go to state 110


State 523

  148 try_stmt: TRY ':' suite FINALLY ':' . suite

    IMPORT        shift, and go to state 1
    END           shift, and go to state 33
    NOT           shift, and go to state 34
    DEF           shift, and go to state 35
    IF            shift, and go to state 36
    WHILE         shift, and go to state 37
    FOR           shift, and go to state 38
    TRY           shift, and go to state 39
    NONLOCAL      shift, and go to state 40
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    WITH          shift, and go to state 48
    DEL           shift, and go to state 49
    RETURN        shift, and go to state 50
    PRINT         shift, and go to state 51
    GLOBAL        shift, and go to state 52
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    PASS          shift, and go to state 55
    CHAR_VALUE    shift, and go to state 56
    BREAK         shift, and go to state 57
    CONTINUE      shift, and go to state 58
    ','           shift, and go to state 59
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    funcdef               go to state 67
    funcheader            go to state 68
    stmt                  go to state 69
    simple_stmt           go to state 70
    small_stmt            go to state 71
    expr_stmt             go to state 72
    testlist_star_expr    go to state 73
    comma_test_star       go to state 74
    comma_test_star_seqJ  go to state 75
    print_stmt            go to state 76
    del_stmt              go to state 77
    pass_stmt             go to state 78
    flow_stmt             go to state 79
    break_stmt            go to state 80
    continue_stmt         go to state 81
    return_stmt           go to state 82
    import_stmt           go to state 83
    import_name           go to state 13
    global_stmt           go to state 84
    nonlocal_stmt         go to state 85
    compound_stmt         go to state 86
    vardef                go to state 87
    if_stmt               go to state 88
    while_stmt            go to state 89
    for_stmt              go to state 90
    try_stmt              go to state 91
    with_stmt             go to state 92
    list_stmt             go to state 93
    suite                 go to state 615
    test                  go to state 95
    or_test               go to state 96
    and_test              go to state 97
    not_test              go to state 98
    comparison            go to state 99
    star_expr             go to state 100
    expr                  go to state 101
    xor_expr              go to state 102
    and_expr              go to state 103
    shift_expr            go to state 104
    arith_expr            go to state 105
    term                  go to state 106
    factor                go to state 107
    power                 go to state 108
    str_seq               go to state 109
    atom                  go to state 110


State 524

  158 except_clause: EXCEPT test .
  159              | EXCEPT test . AS NAME

    AS  shift, and go to state 616

    $default  reduce using rule 158 (except_clause)


State 525

  146 try_stmt: TRY ':' suite try_except_cla_seq ELSE . ':' suite

    ':'  shift, and go to state 617


State 526

  147 try_stmt: TRY ':' suite try_except_cla_seq FINALLY . ':' suite

    ':'  shift, and go to state 618


State 527

  150 try_except_cla_seq: try_except_cla_seq except_clause . ':' suite

    ':'  shift, and go to state 619


State 528

  149 try_except_cla_seq: except_clause ':' . suite

    IMPORT        shift, and go to state 1
    END           shift, and go to state 33
    NOT           shift, and go to state 34
    DEF           shift, and go to state 35
    IF            shift, and go to state 36
    WHILE         shift, and go to state 37
    FOR           shift, and go to state 38
    TRY           shift, and go to state 39
    NONLOCAL      shift, and go to state 40
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    WITH          shift, and go to state 48
    DEL           shift, and go to state 49
    RETURN        shift, and go to state 50
    PRINT         shift, and go to state 51
    GLOBAL        shift, and go to state 52
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    PASS          shift, and go to state 55
    CHAR_VALUE    shift, and go to state 56
    BREAK         shift, and go to state 57
    CONTINUE      shift, and go to state 58
    ','           shift, and go to state 59
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    funcdef               go to state 67
    funcheader            go to state 68
    stmt                  go to state 69
    simple_stmt           go to state 70
    small_stmt            go to state 71
    expr_stmt             go to state 72
    testlist_star_expr    go to state 73
    comma_test_star       go to state 74
    comma_test_star_seqJ  go to state 75
    print_stmt            go to state 76
    del_stmt              go to state 77
    pass_stmt             go to state 78
    flow_stmt             go to state 79
    break_stmt            go to state 80
    continue_stmt         go to state 81
    return_stmt           go to state 82
    import_stmt           go to state 83
    import_name           go to state 13
    global_stmt           go to state 84
    nonlocal_stmt         go to state 85
    compound_stmt         go to state 86
    vardef                go to state 87
    if_stmt               go to state 88
    while_stmt            go to state 89
    for_stmt              go to state 90
    try_stmt              go to state 91
    with_stmt             go to state 92
    list_stmt             go to state 93
    suite                 go to state 620
    test                  go to state 95
    or_test               go to state 96
    and_test              go to state 97
    not_test              go to state 98
    comparison            go to state 99
    star_expr             go to state 100
    expr                  go to state 101
    xor_expr              go to state 102
    and_expr              go to state 103
    shift_expr            go to state 104
    arith_expr            go to state 105
    term                  go to state 106
    factor                go to state 107
    power                 go to state 108
    str_seq               go to state 109
    atom                  go to state 110


State 529

  106 comma_name_seq: comma_name_seq ',' NAME .

    $default  reduce using rule 106 (comma_name_seq)


State 530

  375 comma_arg_seq: ',' . argument
  381 arglist: '*' test ',' . STAR_2 test
  398 comma_default_arg_seq: ',' . default_arg

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    STAR_2        shift, and go to state 621
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    test         go to state 285
    or_test      go to state 96
    and_test     go to state 97
    not_test     go to state 98
    comparison   go to state 99
    expr         go to state 101
    xor_expr     go to state 102
    and_expr     go to state 103
    shift_expr   go to state 104
    arith_expr   go to state 105
    term         go to state 106
    factor       go to state 107
    power        go to state 108
    str_seq      go to state 109
    atom         go to state 110
    default_arg  go to state 622
    argument     go to state 623


State 531

  376 comma_arg_seq: comma_arg_seq . ',' argument
  382 arglist: '*' test comma_arg_seq .
  384        | '*' test comma_arg_seq . comma_default_arg_seq
  385        | '*' test comma_arg_seq . ',' STAR_2 test

    ','  shift, and go to state 624

    $default  reduce using rule 382 (arglist)

    comma_default_arg_seq  go to state 625


State 532

  383 arglist: '*' test comma_default_arg_seq .
  399 comma_default_arg_seq: comma_default_arg_seq . ',' default_arg

    ','  shift, and go to state 626

    $default  reduce using rule 383 (arglist)


State 533

  402 default_arg: test '=' test .

    $default  reduce using rule 402 (default_arg)


State 534

  397 arglist: arg_comma_seq STAR_2 test .

    $default  reduce using rule 397 (arglist)


State 535

  391 arglist: arg_comma_seq '*' test .
  392        | arg_comma_seq '*' test . ',' STAR_2 test
  393        | arg_comma_seq '*' test . comma_arg_seq
  394        | arg_comma_seq '*' test . comma_default_arg_seq
  395        | arg_comma_seq '*' test . comma_arg_seq comma_default_arg_seq
  396        | arg_comma_seq '*' test . comma_arg_seq ',' STAR_2 test

    ','  shift, and go to state 627

    $default  reduce using rule 391 (arglist)

    comma_arg_seq          go to state 628
    comma_default_arg_seq  go to state 629


State 536

  402 default_arg: test . '=' test

    '='  shift, and go to state 415


State 537

  389 arglist: arg_comma_seq default_arg_comma_seq default_arg .
  401 default_arg_comma_seq: default_arg_comma_seq default_arg . ','

    ','  shift, and go to state 630

    $default  reduce using rule 389 (arglist)


State 538

  400 default_arg_comma_seq: default_arg ',' .

    $default  reduce using rule 400 (default_arg_comma_seq)


State 539

  374 arg_comma_seq: arg_comma_seq argument ',' .
  390 arglist: arg_comma_seq argument ',' .

    ')'       reduce using rule 390 (arglist)
    $default  reduce using rule 374 (arg_comma_seq)


State 540

  291 sliceop: ':' test .

    $default  reduce using rule 291 (sliceop)


State 541

  289 subscript: ':' test sliceop .

    $default  reduce using rule 289 (subscript)


State 542

  284 subscript: test ':' test .
  286          | test ':' test . sliceop

    ':'  shift, and go to state 424

    $default  reduce using rule 284 (subscript)

    sliceop  go to state 631


State 543

  285 subscript: test ':' sliceop .

    $default  reduce using rule 285 (subscript)


State 544

  275 comma_subscript_seq: ',' subscript .

    $default  reduce using rule 275 (comma_subscript_seq)


State 545

  276 comma_subscript_seq: comma_subscript_seq ',' . subscript
  280 subscriptlist: subscript comma_subscript_seq ',' .

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    ':'           shift, and go to state 290
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    $default  reduce using rule 280 (subscriptlist)

    test        go to state 291
    or_test     go to state 96
    and_test    go to state 97
    not_test    go to state 98
    comparison  go to state 99
    expr        go to state 101
    xor_expr    go to state 102
    and_expr    go to state 103
    shift_expr  go to state 104
    arith_expr  go to state 105
    term        go to state 106
    factor      go to state 107
    power       go to state 108
    str_seq     go to state 109
    atom        go to state 110
    subscript   go to state 632


State 546

  152 with_seq: with_seq ',' with_item .

    $default  reduce using rule 152 (with_seq)


State 547

  154 with_stmt: WITH with_item with_seq ':' suite .

    $default  reduce using rule 154 (with_stmt)


State 548

  305 comma_test: ',' test comma_test .

    $default  reduce using rule 305 (comma_test)


State 549

  407 comp_for: FOR exprlist IN . or_test
  408         | FOR exprlist IN . or_test comp_iter

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    or_test     go to state 633
    and_test    go to state 97
    not_test    go to state 98
    comparison  go to state 99
    expr        go to state 101
    xor_expr    go to state 102
    and_expr    go to state 103
    shift_expr  go to state 104
    arith_expr  go to state 105
    term        go to state 106
    factor      go to state 107
    power       go to state 108
    str_seq     go to state 109
    atom        go to state 110


State 550

  259 comma_test_star_seq: comma_test_star_seq ',' test .

    $default  reduce using rule 259 (comma_test_star_seq)


State 551

  260 comma_test_star_seq: comma_test_star_seq ',' star_expr .

    $default  reduce using rule 260 (comma_test_star_seq)


State 552

  310 comma_test_colon_test_seq: ',' . test ':' test
  316 dictorsetmaker: test ':' test ',' .

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    $default  reduce using rule 316 (dictorsetmaker)

    test        go to state 634
    or_test     go to state 96
    and_test    go to state 97
    not_test    go to state 98
    comparison  go to state 99
    expr        go to state 101
    xor_expr    go to state 102
    and_expr    go to state 103
    shift_expr  go to state 104
    arith_expr  go to state 105
    term        go to state 106
    factor      go to state 107
    power       go to state 108
    str_seq     go to state 109
    atom        go to state 110


State 553

  311 comma_test_colon_test_seq: comma_test_colon_test_seq . ',' test ':' test
  317 dictorsetmaker: test ':' test comma_test_colon_test_seq .
  318               | test ':' test comma_test_colon_test_seq . ','

    ','  shift, and go to state 635

    $default  reduce using rule 317 (dictorsetmaker)


State 554

  314 dictorsetmaker: test ':' test comp_for .

    $default  reduce using rule 314 (dictorsetmaker)


State 555

  313 comma_test_seq: comma_test_seq ',' test .

    $default  reduce using rule 313 (comma_test_seq)


State 556

  165 test: or_test IF or_test ELSE test .

    $default  reduce using rule 165 (test)


State 557

  272 trailer: '.' NAME '(' ')' .

    $default  reduce using rule 272 (trailer)


State 558

  273 trailer: '.' NAME '(' arglist . ')'

    ')'  shift, and go to state 636


State 559

  274 trailer: '.' NAME '[' subscriptlist . ']'

    ']'  shift, and go to state 637


State 560

  360 classheader: FINAL CLASS NAME '(' dotted_as_names ')' ':' .

    $default  reduce using rule 360 (classheader)


State 561

  346 classheader: FINAL STATIC CLASS NAME '(' ')' ':' .

    $default  reduce using rule 346 (classheader)


State 562

  362 classheader: FINAL STATIC CLASS NAME '(' dotted_as_names ')' . ':'

    ':'  shift, and go to state 638


State 563

  350 classheader: FINAL STATIC access CLASS NAME '(' ')' . ':'

    ':'  shift, and go to state 639


State 564

  366 classheader: FINAL STATIC access CLASS NAME '(' dotted_as_names . ')' ':'

    ')'  shift, and go to state 640


State 565

  348 classheader: FINAL access CLASS NAME '(' ')' ':' .

    $default  reduce using rule 348 (classheader)


State 566

  364 classheader: FINAL access CLASS NAME '(' dotted_as_names ')' . ':'

    ':'  shift, and go to state 641


State 567

  356 classheader: FINAL access STATIC CLASS NAME '(' ')' . ':'

    ':'  shift, and go to state 642


State 568

  372 classheader: FINAL access STATIC CLASS NAME '(' dotted_as_names . ')' ':'

    ')'  shift, and go to state 643


State 569

  359 classheader: STATIC CLASS NAME '(' dotted_as_names ')' ':' .

    $default  reduce using rule 359 (classheader)


State 570

  345 classheader: STATIC FINAL CLASS NAME '(' ')' ':' .

    $default  reduce using rule 345 (classheader)


State 571

  361 classheader: STATIC FINAL CLASS NAME '(' dotted_as_names ')' . ':'

    ':'  shift, and go to state 644


State 572

  349 classheader: STATIC FINAL access CLASS NAME '(' ')' . ':'

    ':'  shift, and go to state 645


State 573

  365 classheader: STATIC FINAL access CLASS NAME '(' dotted_as_names . ')' ':'

    ')'  shift, and go to state 646


State 574

  347 classheader: STATIC access CLASS NAME '(' ')' ':' .

    $default  reduce using rule 347 (classheader)


State 575

  363 classheader: STATIC access CLASS NAME '(' dotted_as_names ')' . ':'

    ':'  shift, and go to state 647


State 576

  355 classheader: STATIC access FINAL CLASS NAME '(' ')' . ':'

    ':'  shift, and go to state 648


State 577

  371 classheader: STATIC access FINAL CLASS NAME '(' dotted_as_names . ')' ':'

    ')'  shift, and go to state 649


State 578

  358 classheader: access CLASS NAME '(' dotted_as_names ')' ':' .

    $default  reduce using rule 358 (classheader)


State 579

  352 classheader: access FINAL CLASS NAME '(' ')' ':' .

    $default  reduce using rule 352 (classheader)


State 580

  368 classheader: access FINAL CLASS NAME '(' dotted_as_names ')' . ':'

    ':'  shift, and go to state 650


State 581

  354 classheader: access FINAL STATIC CLASS NAME '(' ')' . ':'

    ':'  shift, and go to state 651


State 582

  370 classheader: access FINAL STATIC CLASS NAME '(' dotted_as_names . ')' ':'

    ')'  shift, and go to state 652


State 583

  351 classheader: access STATIC CLASS NAME '(' ')' ':' .

    $default  reduce using rule 351 (classheader)


State 584

  367 classheader: access STATIC CLASS NAME '(' dotted_as_names ')' . ':'

    ':'  shift, and go to state 653


State 585

  353 classheader: access STATIC FINAL CLASS NAME '(' ')' . ':'

    ':'  shift, and go to state 654


State 586

  369 classheader: access STATIC FINAL CLASS NAME '(' dotted_as_names . ')' ':'

    ')'  shift, and go to state 655


State 587

   16 funcheader: DEF FINAL STATIC NAME parameters ARROW . test ':'

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    test        go to state 656
    or_test     go to state 96
    and_test    go to state 97
    not_test    go to state 98
    comparison  go to state 99
    expr        go to state 101
    xor_expr    go to state 102
    and_expr    go to state 103
    shift_expr  go to state 104
    arith_expr  go to state 105
    term        go to state 106
    factor      go to state 107
    power       go to state 108
    str_seq     go to state 109
    atom        go to state 110


State 588

   18 funcheader: DEF FINAL STATIC NAME parameters ':' .

    $default  reduce using rule 18 (funcheader)


State 589

   24 funcheader: DEF FINAL STATIC access NAME parameters . ARROW test ':'
   26           | DEF FINAL STATIC access NAME parameters . ':'

    ARROW  shift, and go to state 657
    ':'    shift, and go to state 658


State 590

   12 funcheader: DEF FINAL NAME parameters ARROW test . ':'

    ':'  shift, and go to state 659


State 591

   36 funcheader: DEF FINAL access STATIC NAME parameters . ARROW test ':'
   38           | DEF FINAL access STATIC NAME parameters . ':'

    ARROW  shift, and go to state 660
    ':'    shift, and go to state 661


State 592

   19 funcheader: DEF FINAL access NAME parameters ARROW . test ':'

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    test        go to state 662
    or_test     go to state 96
    and_test    go to state 97
    not_test    go to state 98
    comparison  go to state 99
    expr        go to state 101
    xor_expr    go to state 102
    and_expr    go to state 103
    shift_expr  go to state 104
    arith_expr  go to state 105
    term        go to state 106
    factor      go to state 107
    power       go to state 108
    str_seq     go to state 109
    atom        go to state 110


State 593

   22 funcheader: DEF FINAL access NAME parameters ':' .

    $default  reduce using rule 22 (funcheader)


State 594

   15 funcheader: DEF STATIC FINAL NAME parameters ARROW . test ':'

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    test        go to state 663
    or_test     go to state 96
    and_test    go to state 97
    not_test    go to state 98
    comparison  go to state 99
    expr        go to state 101
    xor_expr    go to state 102
    and_expr    go to state 103
    shift_expr  go to state 104
    arith_expr  go to state 105
    term        go to state 106
    factor      go to state 107
    power       go to state 108
    str_seq     go to state 109
    atom        go to state 110


State 595

   17 funcheader: DEF STATIC FINAL NAME parameters ':' .

    $default  reduce using rule 17 (funcheader)


State 596

   23 funcheader: DEF STATIC FINAL access NAME parameters . ARROW test ':'
   25           | DEF STATIC FINAL access NAME parameters . ':'

    ARROW  shift, and go to state 664
    ':'    shift, and go to state 665


State 597

   11 funcheader: DEF STATIC NAME parameters ARROW test . ':'

    ':'  shift, and go to state 666


State 598

   35 funcheader: DEF STATIC access FINAL NAME parameters . ARROW test ':'
   37           | DEF STATIC access FINAL NAME parameters . ':'

    ARROW  shift, and go to state 667
    ':'    shift, and go to state 668


State 599

   20 funcheader: DEF STATIC access NAME parameters ARROW . test ':'

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    test        go to state 669
    or_test     go to state 96
    and_test    go to state 97
    not_test    go to state 98
    comparison  go to state 99
    expr        go to state 101
    xor_expr    go to state 102
    and_expr    go to state 103
    shift_expr  go to state 104
    arith_expr  go to state 105
    term        go to state 106
    factor      go to state 107
    power       go to state 108
    str_seq     go to state 109
    atom        go to state 110


State 600

   21 funcheader: DEF STATIC access NAME parameters ':' .

    $default  reduce using rule 21 (funcheader)


State 601

    7 funcheader: DEF NAME parameters ARROW test ':' .

    $default  reduce using rule 7 (funcheader)


State 602

   32 funcheader: DEF access FINAL STATIC NAME parameters . ARROW test ':'
   34           | DEF access FINAL STATIC NAME parameters . ':'

    ARROW  shift, and go to state 670
    ':'    shift, and go to state 671


State 603

   28 funcheader: DEF access FINAL NAME parameters ARROW . test ':'

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    test        go to state 672
    or_test     go to state 96
    and_test    go to state 97
    not_test    go to state 98
    comparison  go to state 99
    expr        go to state 101
    xor_expr    go to state 102
    and_expr    go to state 103
    shift_expr  go to state 104
    arith_expr  go to state 105
    term        go to state 106
    factor      go to state 107
    power       go to state 108
    str_seq     go to state 109
    atom        go to state 110


State 604

   30 funcheader: DEF access FINAL NAME parameters ':' .

    $default  reduce using rule 30 (funcheader)


State 605

   31 funcheader: DEF access STATIC FINAL NAME parameters . ARROW test ':'
   33           | DEF access STATIC FINAL NAME parameters . ':'

    ARROW  shift, and go to state 673
    ':'    shift, and go to state 674


State 606

   27 funcheader: DEF access STATIC NAME parameters ARROW . test ':'

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    test        go to state 675
    or_test     go to state 96
    and_test    go to state 97
    not_test    go to state 98
    comparison  go to state 99
    expr        go to state 101
    xor_expr    go to state 102
    and_expr    go to state 103
    shift_expr  go to state 104
    arith_expr  go to state 105
    term        go to state 106
    factor      go to state 107
    power       go to state 108
    str_seq     go to state 109
    atom        go to state 110


State 607

   29 funcheader: DEF access STATIC NAME parameters ':' .

    $default  reduce using rule 29 (funcheader)


State 608

    8 funcheader: DEF access NAME parameters ARROW test . ':'

    ':'  shift, and go to state 676


State 609

  139 if_stmt: IF test ':' suite ELSE ':' . suite

    IMPORT        shift, and go to state 1
    END           shift, and go to state 33
    NOT           shift, and go to state 34
    DEF           shift, and go to state 35
    IF            shift, and go to state 36
    WHILE         shift, and go to state 37
    FOR           shift, and go to state 38
    TRY           shift, and go to state 39
    NONLOCAL      shift, and go to state 40
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    WITH          shift, and go to state 48
    DEL           shift, and go to state 49
    RETURN        shift, and go to state 50
    PRINT         shift, and go to state 51
    GLOBAL        shift, and go to state 52
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    PASS          shift, and go to state 55
    CHAR_VALUE    shift, and go to state 56
    BREAK         shift, and go to state 57
    CONTINUE      shift, and go to state 58
    ','           shift, and go to state 59
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    funcdef               go to state 67
    funcheader            go to state 68
    stmt                  go to state 69
    simple_stmt           go to state 70
    small_stmt            go to state 71
    expr_stmt             go to state 72
    testlist_star_expr    go to state 73
    comma_test_star       go to state 74
    comma_test_star_seqJ  go to state 75
    print_stmt            go to state 76
    del_stmt              go to state 77
    pass_stmt             go to state 78
    flow_stmt             go to state 79
    break_stmt            go to state 80
    continue_stmt         go to state 81
    return_stmt           go to state 82
    import_stmt           go to state 83
    import_name           go to state 13
    global_stmt           go to state 84
    nonlocal_stmt         go to state 85
    compound_stmt         go to state 86
    vardef                go to state 87
    if_stmt               go to state 88
    while_stmt            go to state 89
    for_stmt              go to state 90
    try_stmt              go to state 91
    with_stmt             go to state 92
    list_stmt             go to state 93
    suite                 go to state 677
    test                  go to state 95
    or_test               go to state 96
    and_test              go to state 97
    not_test              go to state 98
    comparison            go to state 99
    star_expr             go to state 100
    expr                  go to state 101
    xor_expr              go to state 102
    and_expr              go to state 103
    shift_expr            go to state 104
    arith_expr            go to state 105
    term                  go to state 106
    factor                go to state 107
    power                 go to state 108
    str_seq               go to state 109
    atom                  go to state 110


State 610

  135 elif_seq: ELIF test . ':' suite

    ':'  shift, and go to state 678


State 611

  140 if_stmt: IF test ':' suite elif_seq ELSE . ':' suite

    ':'  shift, and go to state 679


State 612

  136 elif_seq: elif_seq ELIF . test ':' suite

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    test        go to state 680
    or_test     go to state 96
    and_test    go to state 97
    not_test    go to state 98
    comparison  go to state 99
    expr        go to state 101
    xor_expr    go to state 102
    and_expr    go to state 103
    shift_expr  go to state 104
    arith_expr  go to state 105
    term        go to state 106
    factor      go to state 107
    power       go to state 108
    str_seq     go to state 109
    atom        go to state 110


State 613

  142 while_stmt: WHILE test ':' suite ELSE ':' . suite

    IMPORT        shift, and go to state 1
    END           shift, and go to state 33
    NOT           shift, and go to state 34
    DEF           shift, and go to state 35
    IF            shift, and go to state 36
    WHILE         shift, and go to state 37
    FOR           shift, and go to state 38
    TRY           shift, and go to state 39
    NONLOCAL      shift, and go to state 40
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    WITH          shift, and go to state 48
    DEL           shift, and go to state 49
    RETURN        shift, and go to state 50
    PRINT         shift, and go to state 51
    GLOBAL        shift, and go to state 52
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    PASS          shift, and go to state 55
    CHAR_VALUE    shift, and go to state 56
    BREAK         shift, and go to state 57
    CONTINUE      shift, and go to state 58
    ','           shift, and go to state 59
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    funcdef               go to state 67
    funcheader            go to state 68
    stmt                  go to state 69
    simple_stmt           go to state 70
    small_stmt            go to state 71
    expr_stmt             go to state 72
    testlist_star_expr    go to state 73
    comma_test_star       go to state 74
    comma_test_star_seqJ  go to state 75
    print_stmt            go to state 76
    del_stmt              go to state 77
    pass_stmt             go to state 78
    flow_stmt             go to state 79
    break_stmt            go to state 80
    continue_stmt         go to state 81
    return_stmt           go to state 82
    import_stmt           go to state 83
    import_name           go to state 13
    global_stmt           go to state 84
    nonlocal_stmt         go to state 85
    compound_stmt         go to state 86
    vardef                go to state 87
    if_stmt               go to state 88
    while_stmt            go to state 89
    for_stmt              go to state 90
    try_stmt              go to state 91
    with_stmt             go to state 92
    list_stmt             go to state 93
    suite                 go to state 681
    test                  go to state 95
    or_test               go to state 96
    and_test              go to state 97
    not_test              go to state 98
    comparison            go to state 99
    star_expr             go to state 100
    expr                  go to state 101
    xor_expr              go to state 102
    and_expr              go to state 103
    shift_expr            go to state 104
    arith_expr            go to state 105
    term                  go to state 106
    factor                go to state 107
    power                 go to state 108
    str_seq               go to state 109
    atom                  go to state 110


State 614

  143 for_stmt: FOR exprlist IN testlist ':' suite .
  144         | FOR exprlist IN testlist ':' suite . ELSE ':' suite

    ELSE  shift, and go to state 682

    $default  reduce using rule 143 (for_stmt)


State 615

  148 try_stmt: TRY ':' suite FINALLY ':' suite .

    $default  reduce using rule 148 (try_stmt)


State 616

  159 except_clause: EXCEPT test AS . NAME

    NAME  shift, and go to state 683


State 617

  146 try_stmt: TRY ':' suite try_except_cla_seq ELSE ':' . suite

    IMPORT        shift, and go to state 1
    END           shift, and go to state 33
    NOT           shift, and go to state 34
    DEF           shift, and go to state 35
    IF            shift, and go to state 36
    WHILE         shift, and go to state 37
    FOR           shift, and go to state 38
    TRY           shift, and go to state 39
    NONLOCAL      shift, and go to state 40
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    WITH          shift, and go to state 48
    DEL           shift, and go to state 49
    RETURN        shift, and go to state 50
    PRINT         shift, and go to state 51
    GLOBAL        shift, and go to state 52
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    PASS          shift, and go to state 55
    CHAR_VALUE    shift, and go to state 56
    BREAK         shift, and go to state 57
    CONTINUE      shift, and go to state 58
    ','           shift, and go to state 59
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    funcdef               go to state 67
    funcheader            go to state 68
    stmt                  go to state 69
    simple_stmt           go to state 70
    small_stmt            go to state 71
    expr_stmt             go to state 72
    testlist_star_expr    go to state 73
    comma_test_star       go to state 74
    comma_test_star_seqJ  go to state 75
    print_stmt            go to state 76
    del_stmt              go to state 77
    pass_stmt             go to state 78
    flow_stmt             go to state 79
    break_stmt            go to state 80
    continue_stmt         go to state 81
    return_stmt           go to state 82
    import_stmt           go to state 83
    import_name           go to state 13
    global_stmt           go to state 84
    nonlocal_stmt         go to state 85
    compound_stmt         go to state 86
    vardef                go to state 87
    if_stmt               go to state 88
    while_stmt            go to state 89
    for_stmt              go to state 90
    try_stmt              go to state 91
    with_stmt             go to state 92
    list_stmt             go to state 93
    suite                 go to state 684
    test                  go to state 95
    or_test               go to state 96
    and_test              go to state 97
    not_test              go to state 98
    comparison            go to state 99
    star_expr             go to state 100
    expr                  go to state 101
    xor_expr              go to state 102
    and_expr              go to state 103
    shift_expr            go to state 104
    arith_expr            go to state 105
    term                  go to state 106
    factor                go to state 107
    power                 go to state 108
    str_seq               go to state 109
    atom                  go to state 110


State 618

  147 try_stmt: TRY ':' suite try_except_cla_seq FINALLY ':' . suite

    IMPORT        shift, and go to state 1
    END           shift, and go to state 33
    NOT           shift, and go to state 34
    DEF           shift, and go to state 35
    IF            shift, and go to state 36
    WHILE         shift, and go to state 37
    FOR           shift, and go to state 38
    TRY           shift, and go to state 39
    NONLOCAL      shift, and go to state 40
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    WITH          shift, and go to state 48
    DEL           shift, and go to state 49
    RETURN        shift, and go to state 50
    PRINT         shift, and go to state 51
    GLOBAL        shift, and go to state 52
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    PASS          shift, and go to state 55
    CHAR_VALUE    shift, and go to state 56
    BREAK         shift, and go to state 57
    CONTINUE      shift, and go to state 58
    ','           shift, and go to state 59
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    funcdef               go to state 67
    funcheader            go to state 68
    stmt                  go to state 69
    simple_stmt           go to state 70
    small_stmt            go to state 71
    expr_stmt             go to state 72
    testlist_star_expr    go to state 73
    comma_test_star       go to state 74
    comma_test_star_seqJ  go to state 75
    print_stmt            go to state 76
    del_stmt              go to state 77
    pass_stmt             go to state 78
    flow_stmt             go to state 79
    break_stmt            go to state 80
    continue_stmt         go to state 81
    return_stmt           go to state 82
    import_stmt           go to state 83
    import_name           go to state 13
    global_stmt           go to state 84
    nonlocal_stmt         go to state 85
    compound_stmt         go to state 86
    vardef                go to state 87
    if_stmt               go to state 88
    while_stmt            go to state 89
    for_stmt              go to state 90
    try_stmt              go to state 91
    with_stmt             go to state 92
    list_stmt             go to state 93
    suite                 go to state 685
    test                  go to state 95
    or_test               go to state 96
    and_test              go to state 97
    not_test              go to state 98
    comparison            go to state 99
    star_expr             go to state 100
    expr                  go to state 101
    xor_expr              go to state 102
    and_expr              go to state 103
    shift_expr            go to state 104
    arith_expr            go to state 105
    term                  go to state 106
    factor                go to state 107
    power                 go to state 108
    str_seq               go to state 109
    atom                  go to state 110


State 619

  150 try_except_cla_seq: try_except_cla_seq except_clause ':' . suite

    IMPORT        shift, and go to state 1
    END           shift, and go to state 33
    NOT           shift, and go to state 34
    DEF           shift, and go to state 35
    IF            shift, and go to state 36
    WHILE         shift, and go to state 37
    FOR           shift, and go to state 38
    TRY           shift, and go to state 39
    NONLOCAL      shift, and go to state 40
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    WITH          shift, and go to state 48
    DEL           shift, and go to state 49
    RETURN        shift, and go to state 50
    PRINT         shift, and go to state 51
    GLOBAL        shift, and go to state 52
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    PASS          shift, and go to state 55
    CHAR_VALUE    shift, and go to state 56
    BREAK         shift, and go to state 57
    CONTINUE      shift, and go to state 58
    ','           shift, and go to state 59
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    funcdef               go to state 67
    funcheader            go to state 68
    stmt                  go to state 69
    simple_stmt           go to state 70
    small_stmt            go to state 71
    expr_stmt             go to state 72
    testlist_star_expr    go to state 73
    comma_test_star       go to state 74
    comma_test_star_seqJ  go to state 75
    print_stmt            go to state 76
    del_stmt              go to state 77
    pass_stmt             go to state 78
    flow_stmt             go to state 79
    break_stmt            go to state 80
    continue_stmt         go to state 81
    return_stmt           go to state 82
    import_stmt           go to state 83
    import_name           go to state 13
    global_stmt           go to state 84
    nonlocal_stmt         go to state 85
    compound_stmt         go to state 86
    vardef                go to state 87
    if_stmt               go to state 88
    while_stmt            go to state 89
    for_stmt              go to state 90
    try_stmt              go to state 91
    with_stmt             go to state 92
    list_stmt             go to state 93
    suite                 go to state 686
    test                  go to state 95
    or_test               go to state 96
    and_test              go to state 97
    not_test              go to state 98
    comparison            go to state 99
    star_expr             go to state 100
    expr                  go to state 101
    xor_expr              go to state 102
    and_expr              go to state 103
    shift_expr            go to state 104
    arith_expr            go to state 105
    term                  go to state 106
    factor                go to state 107
    power                 go to state 108
    str_seq               go to state 109
    atom                  go to state 110


State 620

  149 try_except_cla_seq: except_clause ':' suite .

    $default  reduce using rule 149 (try_except_cla_seq)


State 621

  381 arglist: '*' test ',' STAR_2 . test

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    test        go to state 687
    or_test     go to state 96
    and_test    go to state 97
    not_test    go to state 98
    comparison  go to state 99
    expr        go to state 101
    xor_expr    go to state 102
    and_expr    go to state 103
    shift_expr  go to state 104
    arith_expr  go to state 105
    term        go to state 106
    factor      go to state 107
    power       go to state 108
    str_seq     go to state 109
    atom        go to state 110


State 622

  398 comma_default_arg_seq: ',' default_arg .

    $default  reduce using rule 398 (comma_default_arg_seq)


State 623

  375 comma_arg_seq: ',' argument .

    $default  reduce using rule 375 (comma_arg_seq)


State 624

  376 comma_arg_seq: comma_arg_seq ',' . argument
  385 arglist: '*' test comma_arg_seq ',' . STAR_2 test
  398 comma_default_arg_seq: ',' . default_arg

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    STAR_2        shift, and go to state 688
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    test         go to state 285
    or_test      go to state 96
    and_test     go to state 97
    not_test     go to state 98
    comparison   go to state 99
    expr         go to state 101
    xor_expr     go to state 102
    and_expr     go to state 103
    shift_expr   go to state 104
    arith_expr   go to state 105
    term         go to state 106
    factor       go to state 107
    power        go to state 108
    str_seq      go to state 109
    atom         go to state 110
    default_arg  go to state 622
    argument     go to state 689


State 625

  384 arglist: '*' test comma_arg_seq comma_default_arg_seq .
  399 comma_default_arg_seq: comma_default_arg_seq . ',' default_arg

    ','  shift, and go to state 626

    $default  reduce using rule 384 (arglist)


State 626

  399 comma_default_arg_seq: comma_default_arg_seq ',' . default_arg

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    test         go to state 536
    or_test      go to state 96
    and_test     go to state 97
    not_test     go to state 98
    comparison   go to state 99
    expr         go to state 101
    xor_expr     go to state 102
    and_expr     go to state 103
    shift_expr   go to state 104
    arith_expr   go to state 105
    term         go to state 106
    factor       go to state 107
    power        go to state 108
    str_seq      go to state 109
    atom         go to state 110
    default_arg  go to state 690


State 627

  375 comma_arg_seq: ',' . argument
  392 arglist: arg_comma_seq '*' test ',' . STAR_2 test
  398 comma_default_arg_seq: ',' . default_arg

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    STAR_2        shift, and go to state 691
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    test         go to state 285
    or_test      go to state 96
    and_test     go to state 97
    not_test     go to state 98
    comparison   go to state 99
    expr         go to state 101
    xor_expr     go to state 102
    and_expr     go to state 103
    shift_expr   go to state 104
    arith_expr   go to state 105
    term         go to state 106
    factor       go to state 107
    power        go to state 108
    str_seq      go to state 109
    atom         go to state 110
    default_arg  go to state 622
    argument     go to state 623


State 628

  376 comma_arg_seq: comma_arg_seq . ',' argument
  393 arglist: arg_comma_seq '*' test comma_arg_seq .
  395        | arg_comma_seq '*' test comma_arg_seq . comma_default_arg_seq
  396        | arg_comma_seq '*' test comma_arg_seq . ',' STAR_2 test

    ','  shift, and go to state 692

    $default  reduce using rule 393 (arglist)

    comma_default_arg_seq  go to state 693


State 629

  394 arglist: arg_comma_seq '*' test comma_default_arg_seq .
  399 comma_default_arg_seq: comma_default_arg_seq . ',' default_arg

    ','  shift, and go to state 626

    $default  reduce using rule 394 (arglist)


State 630

  401 default_arg_comma_seq: default_arg_comma_seq default_arg ',' .

    $default  reduce using rule 401 (default_arg_comma_seq)


State 631

  286 subscript: test ':' test sliceop .

    $default  reduce using rule 286 (subscript)


State 632

  276 comma_subscript_seq: comma_subscript_seq ',' subscript .

    $default  reduce using rule 276 (comma_subscript_seq)


State 633

  407 comp_for: FOR exprlist IN or_test .
  408         | FOR exprlist IN or_test . comp_iter

    IF   shift, and go to state 694
    FOR  shift, and go to state 301

    $default  reduce using rule 407 (comp_for)

    comp_iter  go to state 695
    comp_for   go to state 696
    comp_if    go to state 697


State 634

  310 comma_test_colon_test_seq: ',' test . ':' test

    ':'  shift, and go to state 698


State 635

  311 comma_test_colon_test_seq: comma_test_colon_test_seq ',' . test ':' test
  318 dictorsetmaker: test ':' test comma_test_colon_test_seq ',' .

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    $default  reduce using rule 318 (dictorsetmaker)

    test        go to state 699
    or_test     go to state 96
    and_test    go to state 97
    not_test    go to state 98
    comparison  go to state 99
    expr        go to state 101
    xor_expr    go to state 102
    and_expr    go to state 103
    shift_expr  go to state 104
    arith_expr  go to state 105
    term        go to state 106
    factor      go to state 107
    power       go to state 108
    str_seq     go to state 109
    atom        go to state 110


State 636

  273 trailer: '.' NAME '(' arglist ')' .

    $default  reduce using rule 273 (trailer)


State 637

  274 trailer: '.' NAME '[' subscriptlist ']' .

    $default  reduce using rule 274 (trailer)


State 638

  362 classheader: FINAL STATIC CLASS NAME '(' dotted_as_names ')' ':' .

    $default  reduce using rule 362 (classheader)


State 639

  350 classheader: FINAL STATIC access CLASS NAME '(' ')' ':' .

    $default  reduce using rule 350 (classheader)


State 640

  366 classheader: FINAL STATIC access CLASS NAME '(' dotted_as_names ')' . ':'

    ':'  shift, and go to state 700


State 641

  364 classheader: FINAL access CLASS NAME '(' dotted_as_names ')' ':' .

    $default  reduce using rule 364 (classheader)


State 642

  356 classheader: FINAL access STATIC CLASS NAME '(' ')' ':' .

    $default  reduce using rule 356 (classheader)


State 643

  372 classheader: FINAL access STATIC CLASS NAME '(' dotted_as_names ')' . ':'

    ':'  shift, and go to state 701


State 644

  361 classheader: STATIC FINAL CLASS NAME '(' dotted_as_names ')' ':' .

    $default  reduce using rule 361 (classheader)


State 645

  349 classheader: STATIC FINAL access CLASS NAME '(' ')' ':' .

    $default  reduce using rule 349 (classheader)


State 646

  365 classheader: STATIC FINAL access CLASS NAME '(' dotted_as_names ')' . ':'

    ':'  shift, and go to state 702


State 647

  363 classheader: STATIC access CLASS NAME '(' dotted_as_names ')' ':' .

    $default  reduce using rule 363 (classheader)


State 648

  355 classheader: STATIC access FINAL CLASS NAME '(' ')' ':' .

    $default  reduce using rule 355 (classheader)


State 649

  371 classheader: STATIC access FINAL CLASS NAME '(' dotted_as_names ')' . ':'

    ':'  shift, and go to state 703


State 650

  368 classheader: access FINAL CLASS NAME '(' dotted_as_names ')' ':' .

    $default  reduce using rule 368 (classheader)


State 651

  354 classheader: access FINAL STATIC CLASS NAME '(' ')' ':' .

    $default  reduce using rule 354 (classheader)


State 652

  370 classheader: access FINAL STATIC CLASS NAME '(' dotted_as_names ')' . ':'

    ':'  shift, and go to state 704


State 653

  367 classheader: access STATIC CLASS NAME '(' dotted_as_names ')' ':' .

    $default  reduce using rule 367 (classheader)


State 654

  353 classheader: access STATIC FINAL CLASS NAME '(' ')' ':' .

    $default  reduce using rule 353 (classheader)


State 655

  369 classheader: access STATIC FINAL CLASS NAME '(' dotted_as_names ')' . ':'

    ':'  shift, and go to state 705


State 656

   16 funcheader: DEF FINAL STATIC NAME parameters ARROW test . ':'

    ':'  shift, and go to state 706


State 657

   24 funcheader: DEF FINAL STATIC access NAME parameters ARROW . test ':'

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    test        go to state 707
    or_test     go to state 96
    and_test    go to state 97
    not_test    go to state 98
    comparison  go to state 99
    expr        go to state 101
    xor_expr    go to state 102
    and_expr    go to state 103
    shift_expr  go to state 104
    arith_expr  go to state 105
    term        go to state 106
    factor      go to state 107
    power       go to state 108
    str_seq     go to state 109
    atom        go to state 110


State 658

   26 funcheader: DEF FINAL STATIC access NAME parameters ':' .

    $default  reduce using rule 26 (funcheader)


State 659

   12 funcheader: DEF FINAL NAME parameters ARROW test ':' .

    $default  reduce using rule 12 (funcheader)


State 660

   36 funcheader: DEF FINAL access STATIC NAME parameters ARROW . test ':'

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    test        go to state 708
    or_test     go to state 96
    and_test    go to state 97
    not_test    go to state 98
    comparison  go to state 99
    expr        go to state 101
    xor_expr    go to state 102
    and_expr    go to state 103
    shift_expr  go to state 104
    arith_expr  go to state 105
    term        go to state 106
    factor      go to state 107
    power       go to state 108
    str_seq     go to state 109
    atom        go to state 110


State 661

   38 funcheader: DEF FINAL access STATIC NAME parameters ':' .

    $default  reduce using rule 38 (funcheader)


State 662

   19 funcheader: DEF FINAL access NAME parameters ARROW test . ':'

    ':'  shift, and go to state 709


State 663

   15 funcheader: DEF STATIC FINAL NAME parameters ARROW test . ':'

    ':'  shift, and go to state 710


State 664

   23 funcheader: DEF STATIC FINAL access NAME parameters ARROW . test ':'

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    test        go to state 711
    or_test     go to state 96
    and_test    go to state 97
    not_test    go to state 98
    comparison  go to state 99
    expr        go to state 101
    xor_expr    go to state 102
    and_expr    go to state 103
    shift_expr  go to state 104
    arith_expr  go to state 105
    term        go to state 106
    factor      go to state 107
    power       go to state 108
    str_seq     go to state 109
    atom        go to state 110


State 665

   25 funcheader: DEF STATIC FINAL access NAME parameters ':' .

    $default  reduce using rule 25 (funcheader)


State 666

   11 funcheader: DEF STATIC NAME parameters ARROW test ':' .

    $default  reduce using rule 11 (funcheader)


State 667

   35 funcheader: DEF STATIC access FINAL NAME parameters ARROW . test ':'

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    test        go to state 712
    or_test     go to state 96
    and_test    go to state 97
    not_test    go to state 98
    comparison  go to state 99
    expr        go to state 101
    xor_expr    go to state 102
    and_expr    go to state 103
    shift_expr  go to state 104
    arith_expr  go to state 105
    term        go to state 106
    factor      go to state 107
    power       go to state 108
    str_seq     go to state 109
    atom        go to state 110


State 668

   37 funcheader: DEF STATIC access FINAL NAME parameters ':' .

    $default  reduce using rule 37 (funcheader)


State 669

   20 funcheader: DEF STATIC access NAME parameters ARROW test . ':'

    ':'  shift, and go to state 713


State 670

   32 funcheader: DEF access FINAL STATIC NAME parameters ARROW . test ':'

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    test        go to state 714
    or_test     go to state 96
    and_test    go to state 97
    not_test    go to state 98
    comparison  go to state 99
    expr        go to state 101
    xor_expr    go to state 102
    and_expr    go to state 103
    shift_expr  go to state 104
    arith_expr  go to state 105
    term        go to state 106
    factor      go to state 107
    power       go to state 108
    str_seq     go to state 109
    atom        go to state 110


State 671

   34 funcheader: DEF access FINAL STATIC NAME parameters ':' .

    $default  reduce using rule 34 (funcheader)


State 672

   28 funcheader: DEF access FINAL NAME parameters ARROW test . ':'

    ':'  shift, and go to state 715


State 673

   31 funcheader: DEF access STATIC FINAL NAME parameters ARROW . test ':'

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    test        go to state 716
    or_test     go to state 96
    and_test    go to state 97
    not_test    go to state 98
    comparison  go to state 99
    expr        go to state 101
    xor_expr    go to state 102
    and_expr    go to state 103
    shift_expr  go to state 104
    arith_expr  go to state 105
    term        go to state 106
    factor      go to state 107
    power       go to state 108
    str_seq     go to state 109
    atom        go to state 110


State 674

   33 funcheader: DEF access STATIC FINAL NAME parameters ':' .

    $default  reduce using rule 33 (funcheader)


State 675

   27 funcheader: DEF access STATIC NAME parameters ARROW test . ':'

    ':'  shift, and go to state 717


State 676

    8 funcheader: DEF access NAME parameters ARROW test ':' .

    $default  reduce using rule 8 (funcheader)


State 677

  139 if_stmt: IF test ':' suite ELSE ':' suite .

    $default  reduce using rule 139 (if_stmt)


State 678

  135 elif_seq: ELIF test ':' . suite

    IMPORT        shift, and go to state 1
    END           shift, and go to state 33
    NOT           shift, and go to state 34
    DEF           shift, and go to state 35
    IF            shift, and go to state 36
    WHILE         shift, and go to state 37
    FOR           shift, and go to state 38
    TRY           shift, and go to state 39
    NONLOCAL      shift, and go to state 40
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    WITH          shift, and go to state 48
    DEL           shift, and go to state 49
    RETURN        shift, and go to state 50
    PRINT         shift, and go to state 51
    GLOBAL        shift, and go to state 52
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    PASS          shift, and go to state 55
    CHAR_VALUE    shift, and go to state 56
    BREAK         shift, and go to state 57
    CONTINUE      shift, and go to state 58
    ','           shift, and go to state 59
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    funcdef               go to state 67
    funcheader            go to state 68
    stmt                  go to state 69
    simple_stmt           go to state 70
    small_stmt            go to state 71
    expr_stmt             go to state 72
    testlist_star_expr    go to state 73
    comma_test_star       go to state 74
    comma_test_star_seqJ  go to state 75
    print_stmt            go to state 76
    del_stmt              go to state 77
    pass_stmt             go to state 78
    flow_stmt             go to state 79
    break_stmt            go to state 80
    continue_stmt         go to state 81
    return_stmt           go to state 82
    import_stmt           go to state 83
    import_name           go to state 13
    global_stmt           go to state 84
    nonlocal_stmt         go to state 85
    compound_stmt         go to state 86
    vardef                go to state 87
    if_stmt               go to state 88
    while_stmt            go to state 89
    for_stmt              go to state 90
    try_stmt              go to state 91
    with_stmt             go to state 92
    list_stmt             go to state 93
    suite                 go to state 718
    test                  go to state 95
    or_test               go to state 96
    and_test              go to state 97
    not_test              go to state 98
    comparison            go to state 99
    star_expr             go to state 100
    expr                  go to state 101
    xor_expr              go to state 102
    and_expr              go to state 103
    shift_expr            go to state 104
    arith_expr            go to state 105
    term                  go to state 106
    factor                go to state 107
    power                 go to state 108
    str_seq               go to state 109
    atom                  go to state 110


State 679

  140 if_stmt: IF test ':' suite elif_seq ELSE ':' . suite

    IMPORT        shift, and go to state 1
    END           shift, and go to state 33
    NOT           shift, and go to state 34
    DEF           shift, and go to state 35
    IF            shift, and go to state 36
    WHILE         shift, and go to state 37
    FOR           shift, and go to state 38
    TRY           shift, and go to state 39
    NONLOCAL      shift, and go to state 40
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    WITH          shift, and go to state 48
    DEL           shift, and go to state 49
    RETURN        shift, and go to state 50
    PRINT         shift, and go to state 51
    GLOBAL        shift, and go to state 52
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    PASS          shift, and go to state 55
    CHAR_VALUE    shift, and go to state 56
    BREAK         shift, and go to state 57
    CONTINUE      shift, and go to state 58
    ','           shift, and go to state 59
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    funcdef               go to state 67
    funcheader            go to state 68
    stmt                  go to state 69
    simple_stmt           go to state 70
    small_stmt            go to state 71
    expr_stmt             go to state 72
    testlist_star_expr    go to state 73
    comma_test_star       go to state 74
    comma_test_star_seqJ  go to state 75
    print_stmt            go to state 76
    del_stmt              go to state 77
    pass_stmt             go to state 78
    flow_stmt             go to state 79
    break_stmt            go to state 80
    continue_stmt         go to state 81
    return_stmt           go to state 82
    import_stmt           go to state 83
    import_name           go to state 13
    global_stmt           go to state 84
    nonlocal_stmt         go to state 85
    compound_stmt         go to state 86
    vardef                go to state 87
    if_stmt               go to state 88
    while_stmt            go to state 89
    for_stmt              go to state 90
    try_stmt              go to state 91
    with_stmt             go to state 92
    list_stmt             go to state 93
    suite                 go to state 719
    test                  go to state 95
    or_test               go to state 96
    and_test              go to state 97
    not_test              go to state 98
    comparison            go to state 99
    star_expr             go to state 100
    expr                  go to state 101
    xor_expr              go to state 102
    and_expr              go to state 103
    shift_expr            go to state 104
    arith_expr            go to state 105
    term                  go to state 106
    factor                go to state 107
    power                 go to state 108
    str_seq               go to state 109
    atom                  go to state 110


State 680

  136 elif_seq: elif_seq ELIF test . ':' suite

    ':'  shift, and go to state 720


State 681

  142 while_stmt: WHILE test ':' suite ELSE ':' suite .

    $default  reduce using rule 142 (while_stmt)


State 682

  144 for_stmt: FOR exprlist IN testlist ':' suite ELSE . ':' suite

    ':'  shift, and go to state 721


State 683

  159 except_clause: EXCEPT test AS NAME .

    $default  reduce using rule 159 (except_clause)


State 684

  146 try_stmt: TRY ':' suite try_except_cla_seq ELSE ':' suite .

    $default  reduce using rule 146 (try_stmt)


State 685

  147 try_stmt: TRY ':' suite try_except_cla_seq FINALLY ':' suite .

    $default  reduce using rule 147 (try_stmt)


State 686

  150 try_except_cla_seq: try_except_cla_seq except_clause ':' suite .

    $default  reduce using rule 150 (try_except_cla_seq)


State 687

  381 arglist: '*' test ',' STAR_2 test .

    $default  reduce using rule 381 (arglist)


State 688

  385 arglist: '*' test comma_arg_seq ',' STAR_2 . test

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    test        go to state 722
    or_test     go to state 96
    and_test    go to state 97
    not_test    go to state 98
    comparison  go to state 99
    expr        go to state 101
    xor_expr    go to state 102
    and_expr    go to state 103
    shift_expr  go to state 104
    arith_expr  go to state 105
    term        go to state 106
    factor      go to state 107
    power       go to state 108
    str_seq     go to state 109
    atom        go to state 110


State 689

  376 comma_arg_seq: comma_arg_seq ',' argument .

    $default  reduce using rule 376 (comma_arg_seq)


State 690

  399 comma_default_arg_seq: comma_default_arg_seq ',' default_arg .

    $default  reduce using rule 399 (comma_default_arg_seq)


State 691

  392 arglist: arg_comma_seq '*' test ',' STAR_2 . test

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    test        go to state 723
    or_test     go to state 96
    and_test    go to state 97
    not_test    go to state 98
    comparison  go to state 99
    expr        go to state 101
    xor_expr    go to state 102
    and_expr    go to state 103
    shift_expr  go to state 104
    arith_expr  go to state 105
    term        go to state 106
    factor      go to state 107
    power       go to state 108
    str_seq     go to state 109
    atom        go to state 110


State 692

  376 comma_arg_seq: comma_arg_seq ',' . argument
  396 arglist: arg_comma_seq '*' test comma_arg_seq ',' . STAR_2 test
  398 comma_default_arg_seq: ',' . default_arg

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    STAR_2        shift, and go to state 724
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    test         go to state 285
    or_test      go to state 96
    and_test     go to state 97
    not_test     go to state 98
    comparison   go to state 99
    expr         go to state 101
    xor_expr     go to state 102
    and_expr     go to state 103
    shift_expr   go to state 104
    arith_expr   go to state 105
    term         go to state 106
    factor       go to state 107
    power        go to state 108
    str_seq      go to state 109
    atom         go to state 110
    default_arg  go to state 622
    argument     go to state 689


State 693

  395 arglist: arg_comma_seq '*' test comma_arg_seq comma_default_arg_seq .
  399 comma_default_arg_seq: comma_default_arg_seq . ',' default_arg

    ','  shift, and go to state 626

    $default  reduce using rule 395 (arglist)


State 694

  409 comp_if: IF . or_test
  410        | IF . or_test comp_iter

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    or_test     go to state 725
    and_test    go to state 97
    not_test    go to state 98
    comparison  go to state 99
    expr        go to state 101
    xor_expr    go to state 102
    and_expr    go to state 103
    shift_expr  go to state 104
    arith_expr  go to state 105
    term        go to state 106
    factor      go to state 107
    power       go to state 108
    str_seq     go to state 109
    atom        go to state 110


State 695

  408 comp_for: FOR exprlist IN or_test comp_iter .

    $default  reduce using rule 408 (comp_for)


State 696

  405 comp_iter: comp_for .

    $default  reduce using rule 405 (comp_iter)


State 697

  406 comp_iter: comp_if .

    $default  reduce using rule 406 (comp_iter)


State 698

  310 comma_test_colon_test_seq: ',' test ':' . test

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    test        go to state 726
    or_test     go to state 96
    and_test    go to state 97
    not_test    go to state 98
    comparison  go to state 99
    expr        go to state 101
    xor_expr    go to state 102
    and_expr    go to state 103
    shift_expr  go to state 104
    arith_expr  go to state 105
    term        go to state 106
    factor      go to state 107
    power       go to state 108
    str_seq     go to state 109
    atom        go to state 110


State 699

  311 comma_test_colon_test_seq: comma_test_colon_test_seq ',' test . ':' test

    ':'  shift, and go to state 727


State 700

  366 classheader: FINAL STATIC access CLASS NAME '(' dotted_as_names ')' ':' .

    $default  reduce using rule 366 (classheader)


State 701

  372 classheader: FINAL access STATIC CLASS NAME '(' dotted_as_names ')' ':' .

    $default  reduce using rule 372 (classheader)


State 702

  365 classheader: STATIC FINAL access CLASS NAME '(' dotted_as_names ')' ':' .

    $default  reduce using rule 365 (classheader)


State 703

  371 classheader: STATIC access FINAL CLASS NAME '(' dotted_as_names ')' ':' .

    $default  reduce using rule 371 (classheader)


State 704

  370 classheader: access FINAL STATIC CLASS NAME '(' dotted_as_names ')' ':' .

    $default  reduce using rule 370 (classheader)


State 705

  369 classheader: access STATIC FINAL CLASS NAME '(' dotted_as_names ')' ':' .

    $default  reduce using rule 369 (classheader)


State 706

   16 funcheader: DEF FINAL STATIC NAME parameters ARROW test ':' .

    $default  reduce using rule 16 (funcheader)


State 707

   24 funcheader: DEF FINAL STATIC access NAME parameters ARROW test . ':'

    ':'  shift, and go to state 728


State 708

   36 funcheader: DEF FINAL access STATIC NAME parameters ARROW test . ':'

    ':'  shift, and go to state 729


State 709

   19 funcheader: DEF FINAL access NAME parameters ARROW test ':' .

    $default  reduce using rule 19 (funcheader)


State 710

   15 funcheader: DEF STATIC FINAL NAME parameters ARROW test ':' .

    $default  reduce using rule 15 (funcheader)


State 711

   23 funcheader: DEF STATIC FINAL access NAME parameters ARROW test . ':'

    ':'  shift, and go to state 730


State 712

   35 funcheader: DEF STATIC access FINAL NAME parameters ARROW test . ':'

    ':'  shift, and go to state 731


State 713

   20 funcheader: DEF STATIC access NAME parameters ARROW test ':' .

    $default  reduce using rule 20 (funcheader)


State 714

   32 funcheader: DEF access FINAL STATIC NAME parameters ARROW test . ':'

    ':'  shift, and go to state 732


State 715

   28 funcheader: DEF access FINAL NAME parameters ARROW test ':' .

    $default  reduce using rule 28 (funcheader)


State 716

   31 funcheader: DEF access STATIC FINAL NAME parameters ARROW test . ':'

    ':'  shift, and go to state 733


State 717

   27 funcheader: DEF access STATIC NAME parameters ARROW test ':' .

    $default  reduce using rule 27 (funcheader)


State 718

  135 elif_seq: ELIF test ':' suite .

    $default  reduce using rule 135 (elif_seq)


State 719

  140 if_stmt: IF test ':' suite elif_seq ELSE ':' suite .

    $default  reduce using rule 140 (if_stmt)


State 720

  136 elif_seq: elif_seq ELIF test ':' . suite

    IMPORT        shift, and go to state 1
    END           shift, and go to state 33
    NOT           shift, and go to state 34
    DEF           shift, and go to state 35
    IF            shift, and go to state 36
    WHILE         shift, and go to state 37
    FOR           shift, and go to state 38
    TRY           shift, and go to state 39
    NONLOCAL      shift, and go to state 40
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    WITH          shift, and go to state 48
    DEL           shift, and go to state 49
    RETURN        shift, and go to state 50
    PRINT         shift, and go to state 51
    GLOBAL        shift, and go to state 52
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    PASS          shift, and go to state 55
    CHAR_VALUE    shift, and go to state 56
    BREAK         shift, and go to state 57
    CONTINUE      shift, and go to state 58
    ','           shift, and go to state 59
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    funcdef               go to state 67
    funcheader            go to state 68
    stmt                  go to state 69
    simple_stmt           go to state 70
    small_stmt            go to state 71
    expr_stmt             go to state 72
    testlist_star_expr    go to state 73
    comma_test_star       go to state 74
    comma_test_star_seqJ  go to state 75
    print_stmt            go to state 76
    del_stmt              go to state 77
    pass_stmt             go to state 78
    flow_stmt             go to state 79
    break_stmt            go to state 80
    continue_stmt         go to state 81
    return_stmt           go to state 82
    import_stmt           go to state 83
    import_name           go to state 13
    global_stmt           go to state 84
    nonlocal_stmt         go to state 85
    compound_stmt         go to state 86
    vardef                go to state 87
    if_stmt               go to state 88
    while_stmt            go to state 89
    for_stmt              go to state 90
    try_stmt              go to state 91
    with_stmt             go to state 92
    list_stmt             go to state 93
    suite                 go to state 734
    test                  go to state 95
    or_test               go to state 96
    and_test              go to state 97
    not_test              go to state 98
    comparison            go to state 99
    star_expr             go to state 100
    expr                  go to state 101
    xor_expr              go to state 102
    and_expr              go to state 103
    shift_expr            go to state 104
    arith_expr            go to state 105
    term                  go to state 106
    factor                go to state 107
    power                 go to state 108
    str_seq               go to state 109
    atom                  go to state 110


State 721

  144 for_stmt: FOR exprlist IN testlist ':' suite ELSE ':' . suite

    IMPORT        shift, and go to state 1
    END           shift, and go to state 33
    NOT           shift, and go to state 34
    DEF           shift, and go to state 35
    IF            shift, and go to state 36
    WHILE         shift, and go to state 37
    FOR           shift, and go to state 38
    TRY           shift, and go to state 39
    NONLOCAL      shift, and go to state 40
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    WITH          shift, and go to state 48
    DEL           shift, and go to state 49
    RETURN        shift, and go to state 50
    PRINT         shift, and go to state 51
    GLOBAL        shift, and go to state 52
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    PASS          shift, and go to state 55
    CHAR_VALUE    shift, and go to state 56
    BREAK         shift, and go to state 57
    CONTINUE      shift, and go to state 58
    ','           shift, and go to state 59
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    funcdef               go to state 67
    funcheader            go to state 68
    stmt                  go to state 69
    simple_stmt           go to state 70
    small_stmt            go to state 71
    expr_stmt             go to state 72
    testlist_star_expr    go to state 73
    comma_test_star       go to state 74
    comma_test_star_seqJ  go to state 75
    print_stmt            go to state 76
    del_stmt              go to state 77
    pass_stmt             go to state 78
    flow_stmt             go to state 79
    break_stmt            go to state 80
    continue_stmt         go to state 81
    return_stmt           go to state 82
    import_stmt           go to state 83
    import_name           go to state 13
    global_stmt           go to state 84
    nonlocal_stmt         go to state 85
    compound_stmt         go to state 86
    vardef                go to state 87
    if_stmt               go to state 88
    while_stmt            go to state 89
    for_stmt              go to state 90
    try_stmt              go to state 91
    with_stmt             go to state 92
    list_stmt             go to state 93
    suite                 go to state 735
    test                  go to state 95
    or_test               go to state 96
    and_test              go to state 97
    not_test              go to state 98
    comparison            go to state 99
    star_expr             go to state 100
    expr                  go to state 101
    xor_expr              go to state 102
    and_expr              go to state 103
    shift_expr            go to state 104
    arith_expr            go to state 105
    term                  go to state 106
    factor                go to state 107
    power                 go to state 108
    str_seq               go to state 109
    atom                  go to state 110


State 722

  385 arglist: '*' test comma_arg_seq ',' STAR_2 test .

    $default  reduce using rule 385 (arglist)


State 723

  392 arglist: arg_comma_seq '*' test ',' STAR_2 test .

    $default  reduce using rule 392 (arglist)


State 724

  396 arglist: arg_comma_seq '*' test comma_arg_seq ',' STAR_2 . test

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    test        go to state 736
    or_test     go to state 96
    and_test    go to state 97
    not_test    go to state 98
    comparison  go to state 99
    expr        go to state 101
    xor_expr    go to state 102
    and_expr    go to state 103
    shift_expr  go to state 104
    arith_expr  go to state 105
    term        go to state 106
    factor      go to state 107
    power       go to state 108
    str_seq     go to state 109
    atom        go to state 110


State 725

  409 comp_if: IF or_test .
  410        | IF or_test . comp_iter

    IF   shift, and go to state 694
    FOR  shift, and go to state 301

    $default  reduce using rule 409 (comp_if)

    comp_iter  go to state 737
    comp_for   go to state 696
    comp_if    go to state 697


State 726

  310 comma_test_colon_test_seq: ',' test ':' test .

    $default  reduce using rule 310 (comma_test_colon_test_seq)


State 727

  311 comma_test_colon_test_seq: comma_test_colon_test_seq ',' test ':' . test

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    test        go to state 738
    or_test     go to state 96
    and_test    go to state 97
    not_test    go to state 98
    comparison  go to state 99
    expr        go to state 101
    xor_expr    go to state 102
    and_expr    go to state 103
    shift_expr  go to state 104
    arith_expr  go to state 105
    term        go to state 106
    factor      go to state 107
    power       go to state 108
    str_seq     go to state 109
    atom        go to state 110


State 728

   24 funcheader: DEF FINAL STATIC access NAME parameters ARROW test ':' .

    $default  reduce using rule 24 (funcheader)


State 729

   36 funcheader: DEF FINAL access STATIC NAME parameters ARROW test ':' .

    $default  reduce using rule 36 (funcheader)


State 730

   23 funcheader: DEF STATIC FINAL access NAME parameters ARROW test ':' .

    $default  reduce using rule 23 (funcheader)


State 731

   35 funcheader: DEF STATIC access FINAL NAME parameters ARROW test ':' .

    $default  reduce using rule 35 (funcheader)


State 732

   32 funcheader: DEF access FINAL STATIC NAME parameters ARROW test ':' .

    $default  reduce using rule 32 (funcheader)


State 733

   31 funcheader: DEF access STATIC FINAL NAME parameters ARROW test ':' .

    $default  reduce using rule 31 (funcheader)


State 734

  136 elif_seq: elif_seq ELIF test ':' suite .

    $default  reduce using rule 136 (elif_seq)


State 735

  144 for_stmt: FOR exprlist IN testlist ':' suite ELSE ':' suite .

    $default  reduce using rule 144 (for_stmt)


State 736

  396 arglist: arg_comma_seq '*' test comma_arg_seq ',' STAR_2 test .

    $default  reduce using rule 396 (arglist)


State 737

  410 comp_if: IF or_test comp_iter .

    $default  reduce using rule 410 (comp_if)


State 738

  311 comma_test_colon_test_seq: comma_test_colon_test_seq ',' test ':' test .

    $default  reduce using rule 311 (comma_test_colon_test_seq)
