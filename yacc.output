Terminals unused in grammar

   ENDMARKER
   PRIMARY
   SELF
   ASSERT
   RAISE
   YIELD


Grammar

    0 $accept: file_input $end

    1 file_input: program

    2 program: import_stmt ';' temp2
    3        | temp2

    4 temp2: classdef temp2
    5      | classdef

    6 funcdef: funcheader suite

    7 funcheader: DEF NAME parameters ARROW test ':'
    8           | DEF access NAME parameters ARROW test ':'
    9           | DEF NAME parameters ':'
   10           | DEF access NAME parameters ':'
   11           | DEF STATIC NAME parameters ARROW test ':'
   12           | DEF FINAL NAME parameters ARROW test ':'
   13           | DEF STATIC NAME parameters ':'
   14           | DEF FINAL NAME parameters ':'
   15           | DEF STATIC FINAL NAME parameters ARROW test ':'
   16           | DEF FINAL STATIC NAME parameters ARROW test ':'
   17           | DEF STATIC FINAL NAME parameters ':'
   18           | DEF FINAL STATIC NAME parameters ':'
   19           | DEF FINAL access NAME parameters ARROW test ':'
   20           | DEF STATIC access NAME parameters ARROW test ':'
   21           | DEF STATIC access NAME parameters ':'
   22           | DEF FINAL access NAME parameters ':'
   23           | DEF STATIC FINAL access NAME parameters ARROW test ':'
   24           | DEF FINAL STATIC access NAME parameters ARROW test ':'
   25           | DEF STATIC FINAL access NAME parameters ':'
   26           | DEF FINAL STATIC access NAME parameters ':'
   27           | DEF access STATIC NAME parameters ARROW test ':'
   28           | DEF access FINAL NAME parameters ARROW test ':'
   29           | DEF access STATIC NAME parameters ':'
   30           | DEF access FINAL NAME parameters ':'
   31           | DEF access STATIC FINAL NAME parameters ARROW test ':'
   32           | DEF access FINAL STATIC NAME parameters ARROW test ':'
   33           | DEF access STATIC FINAL NAME parameters ':'
   34           | DEF access FINAL STATIC NAME parameters ':'
   35           | DEF STATIC access FINAL NAME parameters ARROW test ':'
   36           | DEF FINAL access STATIC NAME parameters ARROW test ':'
   37           | DEF STATIC access FINAL NAME parameters ':'
   38           | DEF FINAL access STATIC NAME parameters ':'

   39 parameters: '(' arglist ')'
   40           | '(' ')'

   41 stmt: simple_stmt
   42     | compound_stmt

   43 simple_stmt: small_stmt ';'

   44 small_stmt: expr_stmt
   45           | del_stmt
   46           | pass_stmt
   47           | flow_stmt
   48           | import_stmt
   49           | global_stmt
   50           | nonlocal_stmt
   51           | print_stmt

   52 expr_stmt: testlist_star_expr augassign testlist
   53          | testlist_star_expr
   54          | vardef
   55          | vardef right_testlist
   56          | testlist_star_expr right_testlist

   57 right_testlist: '=' testlist_star_expr right_testlist
   58               | '=' testlist_star_expr

   59 testlist_star_expr: comma_test_star_seqJ
   60                   | comma_test_star_seqJ ','
   61                   | ','
   62                   | test comma_test_star_seqJ
   63                   | test
   64                   | star_expr comma_test_star_seqJ ','
   65                   | star_expr ','

   66 comma_test_star: ',' test
   67                | ',' star_expr

   68 comma_test_star_seqJ: comma_test_star_seqJ comma_test_star
   69                     | comma_test_star

   70 augassign: PLUS_EQUAL
   71          | MINUS_EQUAL
   72          | STAR_EQUAL
   73          | DIV_EQUAL
   74          | MOD_EQUAL
   75          | AND_EQUAL
   76          | OR_EQUAL
   77          | SHAPOO_EQUAL
   78          | LESS_THAN_2_EQUAL
   79          | MORE_THAN_2_EQUAL
   80          | STAR_2_EQUAL
   81          | DIV_2_EQUAL

   82 access: PRIVATE
   83       | PUBLIC
   84       | PROTECTED

   85 print_stmt: PRINT exprlist

   86 del_stmt: DEL exprlist

   87 pass_stmt: PASS

   88 flow_stmt: break_stmt
   89          | continue_stmt
   90          | return_stmt

   91 break_stmt: BREAK

   92 continue_stmt: CONTINUE

   93 return_stmt: RETURN testlist
   94            | RETURN

   95 import_stmt: import_name

   96 import_name: IMPORT dotted_as_names

   97 comma_dotted_as_name_seq: ',' dotted_as_name
   98                         | comma_dotted_as_name_seq ',' dotted_as_name

   99 dotted_as_names: dotted_as_name
  100                | dotted_as_name comma_dotted_as_name_seq

  101 dotted_as_name: dotted_name
  102               | dotted_name AS NAME

  103 dotted_name: NAME
  104            | NAME dotted_name_seq

  105 dotted_name_seq: '.' NAME
  106                | dotted_name_seq '.' NAME

  107 comma_name_seq: ',' NAME
  108               | comma_name_seq ',' NAME

  109 global_stmt: GLOBAL NAME
  110            | GLOBAL NAME comma_name_seq

  111 nonlocal_stmt: NONLOCAL NAME
  112              | NONLOCAL NAME comma_name_seq

  113 compound_stmt: if_stmt
  114              | while_stmt
  115              | for_stmt
  116              | try_stmt
  117              | with_stmt
  118              | funcdef
  119              | DEF classdef

  120 vardef: DEF NAME
  121       | DEF access NAME
  122       | DEF STATIC NAME
  123       | DEF FINAL NAME
  124       | DEF STATIC FINAL NAME
  125       | DEF FINAL STATIC NAME
  126       | DEF STATIC access NAME
  127       | DEF FINAL access NAME
  128       | DEF STATIC FINAL access NAME
  129       | DEF FINAL STATIC access NAME
  130       | DEF access STATIC NAME
  131       | DEF access FINAL NAME
  132       | DEF access STATIC FINAL NAME
  133       | DEF access FINAL STATIC NAME
  134       | DEF STATIC access FINAL NAME
  135       | DEF FINAL access STATIC NAME

  136 elif_seq: elif_header suite
  137         | elif_seq elif_header suite

  138 elif_header: ELIF test ':'

  139 else_stmt: ELSE ':'

  140 if_stmt: if_header suite
  141        | if_header suite elif_seq
  142        | if_header suite else_stmt suite
  143        | if_header suite elif_seq else_stmt suite

  144 if_header: IF test ':'

  145 while_stmt: while_header suite
  146           | while_header suite ELSE ':' suite

  147 while_header: WHILE test ':'

  148 for_stmt: for_header IN testlist ':' suite
  149         | for_header IN testlist ':' suite ELSE ':' suite

  150 for_header: FOR exprlist

  151 try_header: TRY ':'

  152 try_stmt: try_header suite try_except_cla_seq
  153         | try_header suite try_except_cla_seq ELSE ':' suite
  154         | try_header suite try_except_cla_seq finally_stmt suite
  155         | try_header suite finally_stmt suite

  156 finally_stmt: FINALLY ':'

  157 try_except_cla_seq: except_clause ':' suite
  158                   | try_except_cla_seq except_clause ':' suite

  159 with_seq: ',' with_item
  160         | with_seq ',' with_item

  161 with_stmt: WITH with_item ':' suite
  162          | WITH with_item with_seq ':' suite

  163 with_item: test
  164          | test AS expr

  165 except_clause: EXCEPT
  166              | EXCEPT test
  167              | EXCEPT test AS NAME

  168 list_stmt: stmt
  169          | list_stmt stmt

  170 suite: list_stmt END
  171      | END

  172 test: or_test
  173     | or_test IF or_test ELSE test

  174 or_seq: OR and_test
  175       | or_seq OR and_test

  176 or_test: and_test
  177        | and_test or_seq

  178 and_seq: AND not_test
  179        | and_seq AND not_test

  180 and_test: not_test
  181         | not_test and_seq

  182 not_test: NOT not_test
  183         | comparison

  184 comp_op_seq: comp_op expr
  185            | comp_op_seq comp_op expr

  186 comparison: expr
  187           | expr comp_op_seq

  188 comp_op: '<'
  189        | '>'
  190        | EQUAL
  191        | MORE_OR_EQUAL
  192        | LESS_OR_EQUAL
  193        | MORE_LESS
  194        | NOT_EQUAL
  195        | IN
  196        | NOT IN
  197        | IS
  198        | IS NOT

  199 star_expr: '*' expr

  200 or_xor_expr_seq: '|' xor_expr
  201                | or_xor_expr_seq '|' xor_expr

  202 expr: xor_expr
  203     | xor_expr or_xor_expr_seq

  204 sha_and_expr_seq: '^' and_expr
  205                 | sha_and_expr_seq '^' and_expr

  206 xor_expr: and_expr
  207         | and_expr sha_and_expr_seq

  208 and_shift_expr_seq: '&' shift_expr
  209                   | and_shift_expr_seq '&' shift_expr

  210 and_expr: shift_expr
  211         | shift_expr and_shift_expr_seq

  212 arith_seq: LESS_THAN_2 arith_expr
  213          | MORE_THAN_2 arith_expr
  214          | arith_seq LESS_THAN_2 arith_expr
  215          | arith_seq MORE_THAN_2 arith_expr

  216 shift_expr: arith_expr
  217           | arith_expr arith_seq

  218 term_seq: '+' term
  219         | '-' term
  220         | term_seq '+' term
  221         | term_seq '-' term

  222 arith_expr: term
  223           | term term_seq

  224 factor_seq: '*' factor
  225           | '/' factor
  226           | '%' factor
  227           | DIV_2 factor
  228           | factor_seq '*' factor
  229           | factor_seq '/' factor
  230           | factor_seq '%' factor
  231           | factor_seq DIV_2 factor

  232 term: factor
  233     | factor factor_seq

  234 factor: '+' factor
  235       | '-' factor
  236       | '~' factor
  237       | power

  238 trailer_seq: trailer
  239            | trailer_seq trailer

  240 power: atom
  241      | atom trailer_seq
  242      | atom trailer_seq STAR_2 factor
  243      | atom STAR_2 factor

  244 str_seq: STRING
  245        | str_seq STRING

  246 atom: '(' ')'
  247     | '(' testlist_comp ')'
  248     | '[' ']'
  249     | '{' '}'
  250     | '[' testlist_comp ']'
  251     | '{' dictorsetmaker '}'
  252     | NAME
  253     | NAME '(' ')'
  254     | NAME '(' arglist ')'
  255     | NAME '[' subscriptlist ']'
  256     | NUMBER_INT
  257     | NUMBER_FLOAT
  258     | NUMBER_LONG
  259     | CHAR_VALUE
  260     | str_seq
  261     | DOT_3
  262     | NONE
  263     | TRUE
  264     | FALSE

  265 comma_test_star_seq: ',' test
  266                    | ',' star_expr
  267                    | comma_test_star_seq ',' test
  268                    | comma_test_star_seq ',' star_expr

  269 testlist_comp: test comp_for
  270              | test
  271              | test comma_test_star_seq
  272              | test ','
  273              | test comma_test_star_seq ','
  274              | star_expr comp_for
  275              | star_expr
  276              | star_expr comma_test_star_seq
  277              | star_expr ','
  278              | star_expr comma_test_star_seq ','

  279 trailer: '.' NAME
  280        | '.' NAME '(' ')'
  281        | '.' NAME '(' arglist ')'
  282        | '.' NAME '[' subscriptlist ']'

  283 comma_subscript_seq: ',' subscript
  284                    | comma_subscript_seq ',' subscript

  285 subscriptlist: subscript
  286              | subscript comma_subscript_seq
  287              | subscript ','
  288              | subscript comma_subscript_seq ','

  289 subscript: test
  290          | ':'
  291          | test ':'
  292          | test ':' test
  293          | test ':' sliceop
  294          | test ':' test sliceop
  295          | ':' test
  296          | ':' sliceop
  297          | ':' test sliceop

  298 sliceop: ':'
  299        | ':' test

  300 comma_expr_star_seq: ',' expr
  301                    | ',' star_expr
  302                    | comma_expr_star_seq ',' expr
  303                    | comma_expr_star_seq ',' star_expr

  304 exprlist: expr
  305         | expr comma_expr_star_seq
  306         | star_expr
  307         | star_expr comma_expr_star_seq
  308         | expr ','
  309         | expr comma_expr_star_seq ','
  310         | star_expr ','
  311         | star_expr comma_expr_star_seq ','

  312 comma_test: ',' test
  313           | ',' test comma_test

  314 testlist: test
  315         | test comma_test
  316         | test ','
  317         | test comma_test ','

  318 comma_test_colon_test_seq: ',' test ':' test
  319                          | comma_test_colon_test_seq ',' test ':' test

  320 comma_test_seq: ',' test
  321               | comma_test_seq ',' test

  322 dictorsetmaker: test ':' test comp_for
  323               | test ':' test
  324               | test ':' test ','
  325               | test ':' test comma_test_colon_test_seq
  326               | test ':' test comma_test_colon_test_seq ','
  327               | test comp_for
  328               | test
  329               | test ','
  330               | test comma_test_seq
  331               | test comma_test_seq ','

  332 classdef: classheader suite

  333 classheader: CLASS NAME ':'
  334            | access CLASS NAME ':'
  335            | STATIC CLASS NAME ':'
  336            | FINAL CLASS NAME ':'
  337            | STATIC FINAL CLASS NAME ':'
  338            | FINAL STATIC CLASS NAME ':'
  339            | FINAL access CLASS NAME ':'
  340            | STATIC access CLASS NAME ':'
  341            | STATIC FINAL access CLASS NAME ':'
  342            | FINAL STATIC access CLASS NAME ':'
  343            | access STATIC CLASS NAME ':'
  344            | access FINAL CLASS NAME ':'
  345            | access STATIC FINAL CLASS NAME ':'
  346            | access FINAL STATIC CLASS NAME ':'
  347            | STATIC access FINAL CLASS NAME ':'
  348            | FINAL access STATIC CLASS NAME ':'
  349            | CLASS NAME '(' ')' ':'
  350            | access CLASS NAME '(' ')' ':'
  351            | STATIC CLASS NAME '(' ')' ':'
  352            | FINAL CLASS NAME '(' ')' ':'
  353            | STATIC FINAL CLASS NAME '(' ')' ':'
  354            | FINAL STATIC CLASS NAME '(' ')' ':'
  355            | STATIC access CLASS NAME '(' ')' ':'
  356            | FINAL access CLASS NAME '(' ')' ':'
  357            | STATIC FINAL access CLASS NAME '(' ')' ':'
  358            | FINAL STATIC access CLASS NAME '(' ')' ':'
  359            | access STATIC CLASS NAME '(' ')' ':'
  360            | access FINAL CLASS NAME '(' ')' ':'
  361            | access STATIC FINAL CLASS NAME '(' ')' ':'
  362            | access FINAL STATIC CLASS NAME '(' ')' ':'
  363            | STATIC access FINAL CLASS NAME '(' ')' ':'
  364            | FINAL access STATIC CLASS NAME '(' ')' ':'
  365            | CLASS NAME '(' dotted_as_names ')' ':'
  366            | access CLASS NAME '(' dotted_as_names ')' ':'
  367            | STATIC CLASS NAME '(' dotted_as_names ')' ':'
  368            | FINAL CLASS NAME '(' dotted_as_names ')' ':'
  369            | STATIC FINAL CLASS NAME '(' dotted_as_names ')' ':'
  370            | FINAL STATIC CLASS NAME '(' dotted_as_names ')' ':'
  371            | STATIC access CLASS NAME '(' dotted_as_names ')' ':'
  372            | FINAL access CLASS NAME '(' dotted_as_names ')' ':'
  373            | STATIC FINAL access CLASS NAME '(' dotted_as_names ')' ':'
  374            | FINAL STATIC access CLASS NAME '(' dotted_as_names ')' ':'
  375            | access STATIC CLASS NAME '(' dotted_as_names ')' ':'
  376            | access FINAL CLASS NAME '(' dotted_as_names ')' ':'
  377            | access STATIC FINAL CLASS NAME '(' dotted_as_names ')' ':'
  378            | access FINAL STATIC CLASS NAME '(' dotted_as_names ')' ':'
  379            | STATIC access FINAL CLASS NAME '(' dotted_as_names ')' ':'
  380            | FINAL access STATIC CLASS NAME '(' dotted_as_names ')' ':'

  381 arg_comma_seq: argument ','
  382              | arg_comma_seq argument ','

  383 comma_arg_seq: ',' argument
  384              | comma_arg_seq ',' argument

  385 arglist: argument
  386        | default_arg
  387        | argument ','
  388        | '*' test
  389        | '*' test ',' STAR_2 test
  390        | '*' test comma_arg_seq
  391        | '*' test comma_default_arg_seq
  392        | '*' test comma_arg_seq comma_default_arg_seq
  393        | '*' test comma_arg_seq ',' STAR_2 test
  394        | STAR_2 test
  395        | arg_comma_seq argument
  396        | arg_comma_seq default_arg
  397        | arg_comma_seq default_arg_comma_seq default_arg
  398        | arg_comma_seq argument ','
  399        | arg_comma_seq '*' test
  400        | arg_comma_seq '*' test ',' STAR_2 test
  401        | arg_comma_seq '*' test comma_arg_seq
  402        | arg_comma_seq '*' test comma_default_arg_seq
  403        | arg_comma_seq '*' test comma_arg_seq comma_default_arg_seq
  404        | arg_comma_seq '*' test comma_arg_seq ',' STAR_2 test
  405        | arg_comma_seq STAR_2 test

  406 comma_default_arg_seq: ',' default_arg
  407                      | comma_default_arg_seq ',' default_arg

  408 default_arg_comma_seq: default_arg ','
  409                      | default_arg_comma_seq default_arg ','

  410 default_arg: test '=' test

  411 argument: test
  412         | test comp_for

  413 comp_iter: comp_for
  414          | comp_if

  415 comp_for: FOR exprlist IN or_test
  416         | FOR exprlist IN or_test comp_iter

  417 comp_if: IF or_test
  418        | IF or_test comp_iter


Terminals, with rules where they appear

$end (0) 0
'%' (37) 226 230
'&' (38) 208 209
'(' (40) 39 40 246 247 253 254 280 281 349 350 351 352 353 354 355
    356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371
    372 373 374 375 376 377 378 379 380
')' (41) 39 40 246 247 253 254 280 281 349 350 351 352 353 354 355
    356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371
    372 373 374 375 376 377 378 379 380
'*' (42) 199 224 228 388 389 390 391 392 393 399 400 401 402 403 404
'+' (43) 218 220 234
',' (44) 60 61 64 65 66 67 97 98 107 108 159 160 265 266 267 268 272
    273 277 278 283 284 287 288 300 301 302 303 308 309 310 311 312
    313 316 317 318 319 320 321 324 326 329 331 381 382 383 384 387
    389 393 398 400 404 406 407 408 409
'-' (45) 219 221 235
'.' (46) 105 106 279 280 281 282
'/' (47) 225 229
':' (58) 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
    28 29 30 31 32 33 34 35 36 37 38 138 139 144 146 147 148 149 151
    153 156 157 158 161 162 290 291 292 293 294 295 296 297 298 299
    318 319 322 323 324 325 326 333 334 335 336 337 338 339 340 341
    342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357
    358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373
    374 375 376 377 378 379 380
';' (59) 2 43
'<' (60) 188
'=' (61) 57 58 410
'>' (62) 189
'[' (91) 248 250 255 282
']' (93) 248 250 255 282
'^' (94) 204 205
'{' (123) 249 251
'|' (124) 200 201
'}' (125) 249 251
'~' (126) 236
error (256)
ENDMARKER (258)
IMPORT (259) 96
CLASS (260) 333 334 335 336 337 338 339 340 341 342 343 344 345 346
    347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362
    363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378
    379 380
END (261) 170 171
PRIMARY (262)
OR (263) 174 175
AND (264) 178 179
NOT (265) 182 196 198
NOT_EQUAL (266) 194
FINAL (267) 12 14 15 16 17 18 19 22 23 24 25 26 28 30 31 32 33 34 35
    36 37 38 123 124 125 127 128 129 131 132 133 134 135 336 337 338
    339 341 342 344 345 346 347 348 352 353 354 356 357 358 360 361
    362 363 364 368 369 370 372 373 374 376 377 378 379 380
STATIC (268) 11 13 15 16 17 18 20 21 23 24 25 26 27 29 31 32 33 34
    35 36 37 38 122 124 125 126 128 129 130 132 133 134 135 335 337
    338 340 341 342 343 345 346 347 348 351 353 354 355 357 358 359
    361 362 363 364 367 369 370 371 373 374 375 377 378 379 380
SELF (269)
DEF (270) 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26
    27 28 29 30 31 32 33 34 35 36 37 38 119 120 121 122 123 124 125
    126 127 128 129 130 131 132 133 134 135
ELSE (271) 139 146 149 153 173
IF (272) 144 173 417 418
ELIF (273) 138
WHILE (274) 147
FOR (275) 150 415 416
IN (276) 148 149 195 196 415 416
TRY (277) 151
FINALLY (278) 156
ARROW (279) 7 8 11 12 15 16 19 20 23 24 27 28 31 32 35 36
NONLOCAL (280) 111 112
PLUS_EQUAL (281) 70
MINUS_EQUAL (282) 71
DIV_EQUAL (283) 73
MOD_EQUAL (284) 74
AND_EQUAL (285) 75
OR_EQUAL (286) 76
SHAPOO_EQUAL (287) 77
LESS_THAN_2_EQUAL (288) 78
MORE_THAN_2_EQUAL (289) 79
STAR_2_EQUAL (290) 80
DIV_2_EQUAL (291) 81
MORE_LESS (292) 193
FALSE (293) 264
TRUE (294) 263
STAR_2 (295) 242 243 389 393 394 400 404 405
NUMBER_INT (296) 256
NUMBER_LONG (297) 258
NUMBER_FLOAT (298) 257
NAME (299) 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26
    27 28 29 30 31 32 33 34 35 36 37 38 102 103 104 105 106 107 108
    109 110 111 112 120 121 122 123 124 125 126 127 128 129 130 131
    132 133 134 135 167 252 253 254 255 279 280 281 282 333 334 335
    336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351
    352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367
    368 369 370 371 372 373 374 375 376 377 378 379 380
DOT_3 (300) 261
WITH (301) 161 162
AS (302) 102 164 167
ASSERT (303)
EQUAL (304) 190
DEL (305) 86
RETURN (306) 93 94
PRINT (307) 85
GLOBAL (308) 109 110
STAR_EQUAL (309) 72
LESS_THAN_2 (310) 212 214
RAISE (311)
PRIVATE (312) 82
PUBLIC (313) 83
PROTECTED (314) 84
YIELD (315)
MORE_THAN_2 (316) 213 215
STRING (317) 244 245
NONE (318) 262
IS (319) 197 198
DIV_2 (320) 227 231
LESS_OR_EQUAL (321) 192
MORE_OR_EQUAL (322) 191
EXCEPT (323) 165 166 167
PASS (324) 87
CHAR_VALUE (325) 259
BREAK (326) 91
CONTINUE (327) 92
stmt_14 (328)
stmt_13 (329)
stmt_12 (330)
stmt_11 (331)
stmt_10 (332)
stmt_9 (333)
stmt_8 (334)
stmt_7 (335)
stmt_6 (336)
stmt_5 (337)
stmt_4 (338)
stmt_3 (339)
stmt_2 (340)
stmt_1 (341)


Nonterminals, with rules where they appear

$accept (109)
    on left: 0
file_input (110)
    on left: 1, on right: 0
program (111)
    on left: 2 3, on right: 1
temp2 (112)
    on left: 4 5, on right: 2 3 4
funcdef (113)
    on left: 6, on right: 118
funcheader (114)
    on left: 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25
    26 27 28 29 30 31 32 33 34 35 36 37 38, on right: 6
parameters (115)
    on left: 39 40, on right: 7 8 9 10 11 12 13 14 15 16 17 18 19 20
    21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38
stmt (116)
    on left: 41 42, on right: 168 169
simple_stmt (117)
    on left: 43, on right: 41
small_stmt (118)
    on left: 44 45 46 47 48 49 50 51, on right: 43
expr_stmt (119)
    on left: 52 53 54 55 56, on right: 44
right_testlist (120)
    on left: 57 58, on right: 55 56 57
testlist_star_expr (121)
    on left: 59 60 61 62 63 64 65, on right: 52 53 56 57 58
comma_test_star (122)
    on left: 66 67, on right: 68 69
comma_test_star_seqJ (123)
    on left: 68 69, on right: 59 60 62 64 68
augassign (124)
    on left: 70 71 72 73 74 75 76 77 78 79 80 81, on right: 52
access (125)
    on left: 82 83 84, on right: 8 10 19 20 21 22 23 24 25 26 27 28
    29 30 31 32 33 34 35 36 37 38 121 126 127 128 129 130 131 132 133
    134 135 334 339 340 341 342 343 344 345 346 347 348 350 355 356
    357 358 359 360 361 362 363 364 366 371 372 373 374 375 376 377
    378 379 380
print_stmt (126)
    on left: 85, on right: 51
del_stmt (127)
    on left: 86, on right: 45
pass_stmt (128)
    on left: 87, on right: 46
flow_stmt (129)
    on left: 88 89 90, on right: 47
break_stmt (130)
    on left: 91, on right: 88
continue_stmt (131)
    on left: 92, on right: 89
return_stmt (132)
    on left: 93 94, on right: 90
import_stmt (133)
    on left: 95, on right: 2 48
import_name (134)
    on left: 96, on right: 95
comma_dotted_as_name_seq (135)
    on left: 97 98, on right: 98 100
dotted_as_names (136)
    on left: 99 100, on right: 96 365 366 367 368 369 370 371 372 373
    374 375 376 377 378 379 380
dotted_as_name (137)
    on left: 101 102, on right: 97 98 99 100
dotted_name (138)
    on left: 103 104, on right: 101 102
dotted_name_seq (139)
    on left: 105 106, on right: 104 106
comma_name_seq (140)
    on left: 107 108, on right: 108 110 112
global_stmt (141)
    on left: 109 110, on right: 49
nonlocal_stmt (142)
    on left: 111 112, on right: 50
compound_stmt (143)
    on left: 113 114 115 116 117 118 119, on right: 42
vardef (144)
    on left: 120 121 122 123 124 125 126 127 128 129 130 131 132 133
    134 135, on right: 54 55
elif_seq (145)
    on left: 136 137, on right: 137 141 143
elif_header (146)
    on left: 138, on right: 136 137
else_stmt (147)
    on left: 139, on right: 142 143
if_stmt (148)
    on left: 140 141 142 143, on right: 113
if_header (149)
    on left: 144, on right: 140 141 142 143
while_stmt (150)
    on left: 145 146, on right: 114
while_header (151)
    on left: 147, on right: 145 146
for_stmt (152)
    on left: 148 149, on right: 115
for_header (153)
    on left: 150, on right: 148 149
try_header (154)
    on left: 151, on right: 152 153 154 155
try_stmt (155)
    on left: 152 153 154 155, on right: 116
finally_stmt (156)
    on left: 156, on right: 154 155
try_except_cla_seq (157)
    on left: 157 158, on right: 152 153 154 158
with_seq (158)
    on left: 159 160, on right: 160 162
with_stmt (159)
    on left: 161 162, on right: 117
with_item (160)
    on left: 163 164, on right: 159 160 161 162
except_clause (161)
    on left: 165 166 167, on right: 157 158
list_stmt (162)
    on left: 168 169, on right: 169 170
suite (163)
    on left: 170 171, on right: 6 136 137 140 141 142 143 145 146 148
    149 152 153 154 155 157 158 161 162 332
test (164)
    on left: 172 173, on right: 7 8 11 12 15 16 19 20 23 24 27 28 31
    32 35 36 62 63 66 138 144 147 163 164 166 167 173 265 267 269 270
    271 272 273 289 291 292 293 294 295 297 299 312 313 314 315 316
    317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 388
    389 390 391 392 393 394 399 400 401 402 403 404 405 410 411 412
or_seq (165)
    on left: 174 175, on right: 175 177
or_test (166)
    on left: 176 177, on right: 172 173 415 416 417 418
and_seq (167)
    on left: 178 179, on right: 179 181
and_test (168)
    on left: 180 181, on right: 174 175 176 177
not_test (169)
    on left: 182 183, on right: 178 179 180 181 182
comp_op_seq (170)
    on left: 184 185, on right: 185 187
comparison (171)
    on left: 186 187, on right: 183
comp_op (172)
    on left: 188 189 190 191 192 193 194 195 196 197 198, on right:
    184 185
star_expr (173)
    on left: 199, on right: 64 65 67 266 268 274 275 276 277 278 301
    303 306 307 310 311
or_xor_expr_seq (174)
    on left: 200 201, on right: 201 203
expr (175)
    on left: 202 203, on right: 164 184 185 186 187 199 300 302 304
    305 308 309
sha_and_expr_seq (176)
    on left: 204 205, on right: 205 207
xor_expr (177)
    on left: 206 207, on right: 200 201 202 203
and_shift_expr_seq (178)
    on left: 208 209, on right: 209 211
and_expr (179)
    on left: 210 211, on right: 204 205 206 207
arith_seq (180)
    on left: 212 213 214 215, on right: 214 215 217
shift_expr (181)
    on left: 216 217, on right: 208 209 210 211
term_seq (182)
    on left: 218 219 220 221, on right: 220 221 223
arith_expr (183)
    on left: 222 223, on right: 212 213 214 215 216 217
factor_seq (184)
    on left: 224 225 226 227 228 229 230 231, on right: 228 229 230
    231 233
term (185)
    on left: 232 233, on right: 218 219 220 221 222 223
factor (186)
    on left: 234 235 236 237, on right: 224 225 226 227 228 229 230
    231 232 233 234 235 236 242 243
trailer_seq (187)
    on left: 238 239, on right: 239 241 242
power (188)
    on left: 240 241 242 243, on right: 237
str_seq (189)
    on left: 244 245, on right: 245 260
atom (190)
    on left: 246 247 248 249 250 251 252 253 254 255 256 257 258 259
    260 261 262 263 264, on right: 240 241 242 243
comma_test_star_seq (191)
    on left: 265 266 267 268, on right: 267 268 271 273 276 278
testlist_comp (192)
    on left: 269 270 271 272 273 274 275 276 277 278, on right: 247
    250
trailer (193)
    on left: 279 280 281 282, on right: 238 239
comma_subscript_seq (194)
    on left: 283 284, on right: 284 286 288
subscriptlist (195)
    on left: 285 286 287 288, on right: 255 282
subscript (196)
    on left: 289 290 291 292 293 294 295 296 297, on right: 283 284
    285 286 287 288
sliceop (197)
    on left: 298 299, on right: 293 294 296 297
comma_expr_star_seq (198)
    on left: 300 301 302 303, on right: 302 303 305 307 309 311
exprlist (199)
    on left: 304 305 306 307 308 309 310 311, on right: 85 86 150 415
    416
comma_test (200)
    on left: 312 313, on right: 313 315 317
testlist (201)
    on left: 314 315 316 317, on right: 52 93 148 149
comma_test_colon_test_seq (202)
    on left: 318 319, on right: 319 325 326
comma_test_seq (203)
    on left: 320 321, on right: 321 330 331
dictorsetmaker (204)
    on left: 322 323 324 325 326 327 328 329 330 331, on right: 251
classdef (205)
    on left: 332, on right: 4 5 119
classheader (206)
    on left: 333 334 335 336 337 338 339 340 341 342 343 344 345 346
    347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362
    363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378
    379 380, on right: 332
arg_comma_seq (207)
    on left: 381 382, on right: 382 395 396 397 398 399 400 401 402
    403 404 405
comma_arg_seq (208)
    on left: 383 384, on right: 384 390 392 393 401 403 404
arglist (209)
    on left: 385 386 387 388 389 390 391 392 393 394 395 396 397 398
    399 400 401 402 403 404 405, on right: 39 254 281
comma_default_arg_seq (210)
    on left: 406 407, on right: 391 392 402 403 407
default_arg_comma_seq (211)
    on left: 408 409, on right: 397 409
default_arg (212)
    on left: 410, on right: 386 396 397 406 407 408 409
argument (213)
    on left: 411 412, on right: 381 382 383 384 385 387 395 398
comp_iter (214)
    on left: 413 414, on right: 416 418
comp_for (215)
    on left: 415 416, on right: 269 274 322 327 412 413
comp_if (216)
    on left: 417 418, on right: 414


State 0

    0 $accept: . file_input $end

    IMPORT     shift, and go to state 1
    CLASS      shift, and go to state 2
    FINAL      shift, and go to state 3
    STATIC     shift, and go to state 4
    PRIVATE    shift, and go to state 5
    PUBLIC     shift, and go to state 6
    PROTECTED  shift, and go to state 7

    file_input   go to state 8
    program      go to state 9
    temp2        go to state 10
    access       go to state 11
    import_stmt  go to state 12
    import_name  go to state 13
    classdef     go to state 14
    classheader  go to state 15


State 1

   96 import_name: IMPORT . dotted_as_names

    NAME  shift, and go to state 16

    dotted_as_names  go to state 17
    dotted_as_name   go to state 18
    dotted_name      go to state 19


State 2

  333 classheader: CLASS . NAME ':'
  349            | CLASS . NAME '(' ')' ':'
  365            | CLASS . NAME '(' dotted_as_names ')' ':'

    NAME  shift, and go to state 20


State 3

  336 classheader: FINAL . CLASS NAME ':'
  338            | FINAL . STATIC CLASS NAME ':'
  339            | FINAL . access CLASS NAME ':'
  342            | FINAL . STATIC access CLASS NAME ':'
  348            | FINAL . access STATIC CLASS NAME ':'
  352            | FINAL . CLASS NAME '(' ')' ':'
  354            | FINAL . STATIC CLASS NAME '(' ')' ':'
  356            | FINAL . access CLASS NAME '(' ')' ':'
  358            | FINAL . STATIC access CLASS NAME '(' ')' ':'
  364            | FINAL . access STATIC CLASS NAME '(' ')' ':'
  368            | FINAL . CLASS NAME '(' dotted_as_names ')' ':'
  370            | FINAL . STATIC CLASS NAME '(' dotted_as_names ')' ':'
  372            | FINAL . access CLASS NAME '(' dotted_as_names ')' ':'
  374            | FINAL . STATIC access CLASS NAME '(' dotted_as_names ')' ':'
  380            | FINAL . access STATIC CLASS NAME '(' dotted_as_names ')' ':'

    CLASS      shift, and go to state 21
    STATIC     shift, and go to state 22
    PRIVATE    shift, and go to state 5
    PUBLIC     shift, and go to state 6
    PROTECTED  shift, and go to state 7

    access  go to state 23


State 4

  335 classheader: STATIC . CLASS NAME ':'
  337            | STATIC . FINAL CLASS NAME ':'
  340            | STATIC . access CLASS NAME ':'
  341            | STATIC . FINAL access CLASS NAME ':'
  347            | STATIC . access FINAL CLASS NAME ':'
  351            | STATIC . CLASS NAME '(' ')' ':'
  353            | STATIC . FINAL CLASS NAME '(' ')' ':'
  355            | STATIC . access CLASS NAME '(' ')' ':'
  357            | STATIC . FINAL access CLASS NAME '(' ')' ':'
  363            | STATIC . access FINAL CLASS NAME '(' ')' ':'
  367            | STATIC . CLASS NAME '(' dotted_as_names ')' ':'
  369            | STATIC . FINAL CLASS NAME '(' dotted_as_names ')' ':'
  371            | STATIC . access CLASS NAME '(' dotted_as_names ')' ':'
  373            | STATIC . FINAL access CLASS NAME '(' dotted_as_names ')' ':'
  379            | STATIC . access FINAL CLASS NAME '(' dotted_as_names ')' ':'

    CLASS      shift, and go to state 24
    FINAL      shift, and go to state 25
    PRIVATE    shift, and go to state 5
    PUBLIC     shift, and go to state 6
    PROTECTED  shift, and go to state 7

    access  go to state 26


State 5

   82 access: PRIVATE .

    $default  reduce using rule 82 (access)


State 6

   83 access: PUBLIC .

    $default  reduce using rule 83 (access)


State 7

   84 access: PROTECTED .

    $default  reduce using rule 84 (access)


State 8

    0 $accept: file_input . $end

    $end  shift, and go to state 27


State 9

    1 file_input: program .

    $default  reduce using rule 1 (file_input)


State 10

    3 program: temp2 .

    $default  reduce using rule 3 (program)


State 11

  334 classheader: access . CLASS NAME ':'
  343            | access . STATIC CLASS NAME ':'
  344            | access . FINAL CLASS NAME ':'
  345            | access . STATIC FINAL CLASS NAME ':'
  346            | access . FINAL STATIC CLASS NAME ':'
  350            | access . CLASS NAME '(' ')' ':'
  359            | access . STATIC CLASS NAME '(' ')' ':'
  360            | access . FINAL CLASS NAME '(' ')' ':'
  361            | access . STATIC FINAL CLASS NAME '(' ')' ':'
  362            | access . FINAL STATIC CLASS NAME '(' ')' ':'
  366            | access . CLASS NAME '(' dotted_as_names ')' ':'
  375            | access . STATIC CLASS NAME '(' dotted_as_names ')' ':'
  376            | access . FINAL CLASS NAME '(' dotted_as_names ')' ':'
  377            | access . STATIC FINAL CLASS NAME '(' dotted_as_names ')' ':'
  378            | access . FINAL STATIC CLASS NAME '(' dotted_as_names ')' ':'

    CLASS   shift, and go to state 28
    FINAL   shift, and go to state 29
    STATIC  shift, and go to state 30


State 12

    2 program: import_stmt . ';' temp2

    ';'  shift, and go to state 31


State 13

   95 import_stmt: import_name .

    $default  reduce using rule 95 (import_stmt)


State 14

    4 temp2: classdef . temp2
    5      | classdef .

    CLASS      shift, and go to state 2
    FINAL      shift, and go to state 3
    STATIC     shift, and go to state 4
    PRIVATE    shift, and go to state 5
    PUBLIC     shift, and go to state 6
    PROTECTED  shift, and go to state 7

    $default  reduce using rule 5 (temp2)

    temp2        go to state 32
    access       go to state 11
    classdef     go to state 14
    classheader  go to state 15


State 15

  332 classdef: classheader . suite

    IMPORT        shift, and go to state 1
    END           shift, and go to state 33
    NOT           shift, and go to state 34
    DEF           shift, and go to state 35
    IF            shift, and go to state 36
    WHILE         shift, and go to state 37
    FOR           shift, and go to state 38
    TRY           shift, and go to state 39
    NONLOCAL      shift, and go to state 40
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    WITH          shift, and go to state 48
    DEL           shift, and go to state 49
    RETURN        shift, and go to state 50
    PRINT         shift, and go to state 51
    GLOBAL        shift, and go to state 52
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    PASS          shift, and go to state 55
    CHAR_VALUE    shift, and go to state 56
    BREAK         shift, and go to state 57
    CONTINUE      shift, and go to state 58
    ','           shift, and go to state 59
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    funcdef               go to state 67
    funcheader            go to state 68
    stmt                  go to state 69
    simple_stmt           go to state 70
    small_stmt            go to state 71
    expr_stmt             go to state 72
    testlist_star_expr    go to state 73
    comma_test_star       go to state 74
    comma_test_star_seqJ  go to state 75
    print_stmt            go to state 76
    del_stmt              go to state 77
    pass_stmt             go to state 78
    flow_stmt             go to state 79
    break_stmt            go to state 80
    continue_stmt         go to state 81
    return_stmt           go to state 82
    import_stmt           go to state 83
    import_name           go to state 13
    global_stmt           go to state 84
    nonlocal_stmt         go to state 85
    compound_stmt         go to state 86
    vardef                go to state 87
    if_stmt               go to state 88
    if_header             go to state 89
    while_stmt            go to state 90
    while_header          go to state 91
    for_stmt              go to state 92
    for_header            go to state 93
    try_header            go to state 94
    try_stmt              go to state 95
    with_stmt             go to state 96
    list_stmt             go to state 97
    suite                 go to state 98
    test                  go to state 99
    or_test               go to state 100
    and_test              go to state 101
    not_test              go to state 102
    comparison            go to state 103
    star_expr             go to state 104
    expr                  go to state 105
    xor_expr              go to state 106
    and_expr              go to state 107
    shift_expr            go to state 108
    arith_expr            go to state 109
    term                  go to state 110
    factor                go to state 111
    power                 go to state 112
    str_seq               go to state 113
    atom                  go to state 114


State 16

  103 dotted_name: NAME .
  104            | NAME . dotted_name_seq

    '.'  shift, and go to state 115

    $default  reduce using rule 103 (dotted_name)

    dotted_name_seq  go to state 116


State 17

   96 import_name: IMPORT dotted_as_names .

    $default  reduce using rule 96 (import_name)


State 18

   99 dotted_as_names: dotted_as_name .
  100                | dotted_as_name . comma_dotted_as_name_seq

    ','  shift, and go to state 117

    $default  reduce using rule 99 (dotted_as_names)

    comma_dotted_as_name_seq  go to state 118


State 19

  101 dotted_as_name: dotted_name .
  102               | dotted_name . AS NAME

    AS  shift, and go to state 119

    $default  reduce using rule 101 (dotted_as_name)


State 20

  333 classheader: CLASS NAME . ':'
  349            | CLASS NAME . '(' ')' ':'
  365            | CLASS NAME . '(' dotted_as_names ')' ':'

    '('  shift, and go to state 120
    ':'  shift, and go to state 121


State 21

  336 classheader: FINAL CLASS . NAME ':'
  352            | FINAL CLASS . NAME '(' ')' ':'
  368            | FINAL CLASS . NAME '(' dotted_as_names ')' ':'

    NAME  shift, and go to state 122


State 22

  338 classheader: FINAL STATIC . CLASS NAME ':'
  342            | FINAL STATIC . access CLASS NAME ':'
  354            | FINAL STATIC . CLASS NAME '(' ')' ':'
  358            | FINAL STATIC . access CLASS NAME '(' ')' ':'
  370            | FINAL STATIC . CLASS NAME '(' dotted_as_names ')' ':'
  374            | FINAL STATIC . access CLASS NAME '(' dotted_as_names ')' ':'

    CLASS      shift, and go to state 123
    PRIVATE    shift, and go to state 5
    PUBLIC     shift, and go to state 6
    PROTECTED  shift, and go to state 7

    access  go to state 124


State 23

  339 classheader: FINAL access . CLASS NAME ':'
  348            | FINAL access . STATIC CLASS NAME ':'
  356            | FINAL access . CLASS NAME '(' ')' ':'
  364            | FINAL access . STATIC CLASS NAME '(' ')' ':'
  372            | FINAL access . CLASS NAME '(' dotted_as_names ')' ':'
  380            | FINAL access . STATIC CLASS NAME '(' dotted_as_names ')' ':'

    CLASS   shift, and go to state 125
    STATIC  shift, and go to state 126


State 24

  335 classheader: STATIC CLASS . NAME ':'
  351            | STATIC CLASS . NAME '(' ')' ':'
  367            | STATIC CLASS . NAME '(' dotted_as_names ')' ':'

    NAME  shift, and go to state 127


State 25

  337 classheader: STATIC FINAL . CLASS NAME ':'
  341            | STATIC FINAL . access CLASS NAME ':'
  353            | STATIC FINAL . CLASS NAME '(' ')' ':'
  357            | STATIC FINAL . access CLASS NAME '(' ')' ':'
  369            | STATIC FINAL . CLASS NAME '(' dotted_as_names ')' ':'
  373            | STATIC FINAL . access CLASS NAME '(' dotted_as_names ')' ':'

    CLASS      shift, and go to state 128
    PRIVATE    shift, and go to state 5
    PUBLIC     shift, and go to state 6
    PROTECTED  shift, and go to state 7

    access  go to state 129


State 26

  340 classheader: STATIC access . CLASS NAME ':'
  347            | STATIC access . FINAL CLASS NAME ':'
  355            | STATIC access . CLASS NAME '(' ')' ':'
  363            | STATIC access . FINAL CLASS NAME '(' ')' ':'
  371            | STATIC access . CLASS NAME '(' dotted_as_names ')' ':'
  379            | STATIC access . FINAL CLASS NAME '(' dotted_as_names ')' ':'

    CLASS  shift, and go to state 130
    FINAL  shift, and go to state 131


State 27

    0 $accept: file_input $end .

    $default  accept


State 28

  334 classheader: access CLASS . NAME ':'
  350            | access CLASS . NAME '(' ')' ':'
  366            | access CLASS . NAME '(' dotted_as_names ')' ':'

    NAME  shift, and go to state 132


State 29

  344 classheader: access FINAL . CLASS NAME ':'
  346            | access FINAL . STATIC CLASS NAME ':'
  360            | access FINAL . CLASS NAME '(' ')' ':'
  362            | access FINAL . STATIC CLASS NAME '(' ')' ':'
  376            | access FINAL . CLASS NAME '(' dotted_as_names ')' ':'
  378            | access FINAL . STATIC CLASS NAME '(' dotted_as_names ')' ':'

    CLASS   shift, and go to state 133
    STATIC  shift, and go to state 134


State 30

  343 classheader: access STATIC . CLASS NAME ':'
  345            | access STATIC . FINAL CLASS NAME ':'
  359            | access STATIC . CLASS NAME '(' ')' ':'
  361            | access STATIC . FINAL CLASS NAME '(' ')' ':'
  375            | access STATIC . CLASS NAME '(' dotted_as_names ')' ':'
  377            | access STATIC . FINAL CLASS NAME '(' dotted_as_names ')' ':'

    CLASS  shift, and go to state 135
    FINAL  shift, and go to state 136


State 31

    2 program: import_stmt ';' . temp2

    CLASS      shift, and go to state 2
    FINAL      shift, and go to state 3
    STATIC     shift, and go to state 4
    PRIVATE    shift, and go to state 5
    PUBLIC     shift, and go to state 6
    PROTECTED  shift, and go to state 7

    temp2        go to state 137
    access       go to state 11
    classdef     go to state 14
    classheader  go to state 15


State 32

    4 temp2: classdef temp2 .

    $default  reduce using rule 4 (temp2)


State 33

  171 suite: END .

    $default  reduce using rule 171 (suite)


State 34

  182 not_test: NOT . not_test

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    not_test    go to state 138
    comparison  go to state 103
    expr        go to state 105
    xor_expr    go to state 106
    and_expr    go to state 107
    shift_expr  go to state 108
    arith_expr  go to state 109
    term        go to state 110
    factor      go to state 111
    power       go to state 112
    str_seq     go to state 113
    atom        go to state 114


State 35

    7 funcheader: DEF . NAME parameters ARROW test ':'
    8           | DEF . access NAME parameters ARROW test ':'
    9           | DEF . NAME parameters ':'
   10           | DEF . access NAME parameters ':'
   11           | DEF . STATIC NAME parameters ARROW test ':'
   12           | DEF . FINAL NAME parameters ARROW test ':'
   13           | DEF . STATIC NAME parameters ':'
   14           | DEF . FINAL NAME parameters ':'
   15           | DEF . STATIC FINAL NAME parameters ARROW test ':'
   16           | DEF . FINAL STATIC NAME parameters ARROW test ':'
   17           | DEF . STATIC FINAL NAME parameters ':'
   18           | DEF . FINAL STATIC NAME parameters ':'
   19           | DEF . FINAL access NAME parameters ARROW test ':'
   20           | DEF . STATIC access NAME parameters ARROW test ':'
   21           | DEF . STATIC access NAME parameters ':'
   22           | DEF . FINAL access NAME parameters ':'
   23           | DEF . STATIC FINAL access NAME parameters ARROW test ':'
   24           | DEF . FINAL STATIC access NAME parameters ARROW test ':'
   25           | DEF . STATIC FINAL access NAME parameters ':'
   26           | DEF . FINAL STATIC access NAME parameters ':'
   27           | DEF . access STATIC NAME parameters ARROW test ':'
   28           | DEF . access FINAL NAME parameters ARROW test ':'
   29           | DEF . access STATIC NAME parameters ':'
   30           | DEF . access FINAL NAME parameters ':'
   31           | DEF . access STATIC FINAL NAME parameters ARROW test ':'
   32           | DEF . access FINAL STATIC NAME parameters ARROW test ':'
   33           | DEF . access STATIC FINAL NAME parameters ':'
   34           | DEF . access FINAL STATIC NAME parameters ':'
   35           | DEF . STATIC access FINAL NAME parameters ARROW test ':'
   36           | DEF . FINAL access STATIC NAME parameters ARROW test ':'
   37           | DEF . STATIC access FINAL NAME parameters ':'
   38           | DEF . FINAL access STATIC NAME parameters ':'
  119 compound_stmt: DEF . classdef
  120 vardef: DEF . NAME
  121       | DEF . access NAME
  122       | DEF . STATIC NAME
  123       | DEF . FINAL NAME
  124       | DEF . STATIC FINAL NAME
  125       | DEF . FINAL STATIC NAME
  126       | DEF . STATIC access NAME
  127       | DEF . FINAL access NAME
  128       | DEF . STATIC FINAL access NAME
  129       | DEF . FINAL STATIC access NAME
  130       | DEF . access STATIC NAME
  131       | DEF . access FINAL NAME
  132       | DEF . access STATIC FINAL NAME
  133       | DEF . access FINAL STATIC NAME
  134       | DEF . STATIC access FINAL NAME
  135       | DEF . FINAL access STATIC NAME

    CLASS      shift, and go to state 2
    FINAL      shift, and go to state 139
    STATIC     shift, and go to state 140
    NAME       shift, and go to state 141
    PRIVATE    shift, and go to state 5
    PUBLIC     shift, and go to state 6
    PROTECTED  shift, and go to state 7

    access       go to state 142
    classdef     go to state 143
    classheader  go to state 15


State 36

  144 if_header: IF . test ':'

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    test        go to state 144
    or_test     go to state 100
    and_test    go to state 101
    not_test    go to state 102
    comparison  go to state 103
    expr        go to state 105
    xor_expr    go to state 106
    and_expr    go to state 107
    shift_expr  go to state 108
    arith_expr  go to state 109
    term        go to state 110
    factor      go to state 111
    power       go to state 112
    str_seq     go to state 113
    atom        go to state 114


State 37

  147 while_header: WHILE . test ':'

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    test        go to state 145
    or_test     go to state 100
    and_test    go to state 101
    not_test    go to state 102
    comparison  go to state 103
    expr        go to state 105
    xor_expr    go to state 106
    and_expr    go to state 107
    shift_expr  go to state 108
    arith_expr  go to state 109
    term        go to state 110
    factor      go to state 111
    power       go to state 112
    str_seq     go to state 113
    atom        go to state 114


State 38

  150 for_header: FOR . exprlist

    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    star_expr   go to state 146
    expr        go to state 147
    xor_expr    go to state 106
    and_expr    go to state 107
    shift_expr  go to state 108
    arith_expr  go to state 109
    term        go to state 110
    factor      go to state 111
    power       go to state 112
    str_seq     go to state 113
    atom        go to state 114
    exprlist    go to state 148


State 39

  151 try_header: TRY . ':'

    ':'  shift, and go to state 149


State 40

  111 nonlocal_stmt: NONLOCAL . NAME
  112              | NONLOCAL . NAME comma_name_seq

    NAME  shift, and go to state 150


State 41

  264 atom: FALSE .

    $default  reduce using rule 264 (atom)


State 42

  263 atom: TRUE .

    $default  reduce using rule 263 (atom)


State 43

  256 atom: NUMBER_INT .

    $default  reduce using rule 256 (atom)


State 44

  258 atom: NUMBER_LONG .

    $default  reduce using rule 258 (atom)


State 45

  257 atom: NUMBER_FLOAT .

    $default  reduce using rule 257 (atom)


State 46

  252 atom: NAME .
  253     | NAME . '(' ')'
  254     | NAME . '(' arglist ')'
  255     | NAME . '[' subscriptlist ']'

    '('  shift, and go to state 151
    '['  shift, and go to state 152

    $default  reduce using rule 252 (atom)


State 47

  261 atom: DOT_3 .

    $default  reduce using rule 261 (atom)


State 48

  161 with_stmt: WITH . with_item ':' suite
  162          | WITH . with_item with_seq ':' suite

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    with_item   go to state 153
    test        go to state 154
    or_test     go to state 100
    and_test    go to state 101
    not_test    go to state 102
    comparison  go to state 103
    expr        go to state 105
    xor_expr    go to state 106
    and_expr    go to state 107
    shift_expr  go to state 108
    arith_expr  go to state 109
    term        go to state 110
    factor      go to state 111
    power       go to state 112
    str_seq     go to state 113
    atom        go to state 114


State 49

   86 del_stmt: DEL . exprlist

    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    star_expr   go to state 146
    expr        go to state 147
    xor_expr    go to state 106
    and_expr    go to state 107
    shift_expr  go to state 108
    arith_expr  go to state 109
    term        go to state 110
    factor      go to state 111
    power       go to state 112
    str_seq     go to state 113
    atom        go to state 114
    exprlist    go to state 155


State 50

   93 return_stmt: RETURN . testlist
   94            | RETURN .

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    $default  reduce using rule 94 (return_stmt)

    test        go to state 156
    or_test     go to state 100
    and_test    go to state 101
    not_test    go to state 102
    comparison  go to state 103
    expr        go to state 105
    xor_expr    go to state 106
    and_expr    go to state 107
    shift_expr  go to state 108
    arith_expr  go to state 109
    term        go to state 110
    factor      go to state 111
    power       go to state 112
    str_seq     go to state 113
    atom        go to state 114
    testlist    go to state 157


State 51

   85 print_stmt: PRINT . exprlist

    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    star_expr   go to state 146
    expr        go to state 147
    xor_expr    go to state 106
    and_expr    go to state 107
    shift_expr  go to state 108
    arith_expr  go to state 109
    term        go to state 110
    factor      go to state 111
    power       go to state 112
    str_seq     go to state 113
    atom        go to state 114
    exprlist    go to state 158


State 52

  109 global_stmt: GLOBAL . NAME
  110            | GLOBAL . NAME comma_name_seq

    NAME  shift, and go to state 159


State 53

  244 str_seq: STRING .

    $default  reduce using rule 244 (str_seq)


State 54

  262 atom: NONE .

    $default  reduce using rule 262 (atom)


State 55

   87 pass_stmt: PASS .

    $default  reduce using rule 87 (pass_stmt)


State 56

  259 atom: CHAR_VALUE .

    $default  reduce using rule 259 (atom)


State 57

   91 break_stmt: BREAK .

    $default  reduce using rule 91 (break_stmt)


State 58

   92 continue_stmt: CONTINUE .

    $default  reduce using rule 92 (continue_stmt)


State 59

   61 testlist_star_expr: ',' .
   66 comma_test_star: ',' . test
   67                | ',' . star_expr

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    $default  reduce using rule 61 (testlist_star_expr)

    test        go to state 160
    or_test     go to state 100
    and_test    go to state 101
    not_test    go to state 102
    comparison  go to state 103
    star_expr   go to state 161
    expr        go to state 105
    xor_expr    go to state 106
    and_expr    go to state 107
    shift_expr  go to state 108
    arith_expr  go to state 109
    term        go to state 110
    factor      go to state 111
    power       go to state 112
    str_seq     go to state 113
    atom        go to state 114


State 60

  246 atom: '(' . ')'
  247     | '(' . testlist_comp ')'

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    ')'           shift, and go to state 162
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    test           go to state 163
    or_test        go to state 100
    and_test       go to state 101
    not_test       go to state 102
    comparison     go to state 103
    star_expr      go to state 164
    expr           go to state 105
    xor_expr       go to state 106
    and_expr       go to state 107
    shift_expr     go to state 108
    arith_expr     go to state 109
    term           go to state 110
    factor         go to state 111
    power          go to state 112
    str_seq        go to state 113
    atom           go to state 114
    testlist_comp  go to state 165


State 61

  248 atom: '[' . ']'
  250     | '[' . testlist_comp ']'

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '~'           shift, and go to state 65
    ']'           shift, and go to state 166
    '{'           shift, and go to state 66

    test           go to state 163
    or_test        go to state 100
    and_test       go to state 101
    not_test       go to state 102
    comparison     go to state 103
    star_expr      go to state 164
    expr           go to state 105
    xor_expr       go to state 106
    and_expr       go to state 107
    shift_expr     go to state 108
    arith_expr     go to state 109
    term           go to state 110
    factor         go to state 111
    power          go to state 112
    str_seq        go to state 113
    atom           go to state 114
    testlist_comp  go to state 167


State 62

  234 factor: '+' . factor

    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    factor   go to state 168
    power    go to state 112
    str_seq  go to state 113
    atom     go to state 114


State 63

  235 factor: '-' . factor

    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    factor   go to state 169
    power    go to state 112
    str_seq  go to state 113
    atom     go to state 114


State 64

  199 star_expr: '*' . expr

    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    expr        go to state 170
    xor_expr    go to state 106
    and_expr    go to state 107
    shift_expr  go to state 108
    arith_expr  go to state 109
    term        go to state 110
    factor      go to state 111
    power       go to state 112
    str_seq     go to state 113
    atom        go to state 114


State 65

  236 factor: '~' . factor

    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    factor   go to state 171
    power    go to state 112
    str_seq  go to state 113
    atom     go to state 114


State 66

  249 atom: '{' . '}'
  251     | '{' . dictorsetmaker '}'

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66
    '}'           shift, and go to state 172

    test            go to state 173
    or_test         go to state 100
    and_test        go to state 101
    not_test        go to state 102
    comparison      go to state 103
    expr            go to state 105
    xor_expr        go to state 106
    and_expr        go to state 107
    shift_expr      go to state 108
    arith_expr      go to state 109
    term            go to state 110
    factor          go to state 111
    power           go to state 112
    str_seq         go to state 113
    atom            go to state 114
    dictorsetmaker  go to state 174


State 67

  118 compound_stmt: funcdef .

    $default  reduce using rule 118 (compound_stmt)


State 68

    6 funcdef: funcheader . suite

    IMPORT        shift, and go to state 1
    END           shift, and go to state 33
    NOT           shift, and go to state 34
    DEF           shift, and go to state 35
    IF            shift, and go to state 36
    WHILE         shift, and go to state 37
    FOR           shift, and go to state 38
    TRY           shift, and go to state 39
    NONLOCAL      shift, and go to state 40
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    WITH          shift, and go to state 48
    DEL           shift, and go to state 49
    RETURN        shift, and go to state 50
    PRINT         shift, and go to state 51
    GLOBAL        shift, and go to state 52
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    PASS          shift, and go to state 55
    CHAR_VALUE    shift, and go to state 56
    BREAK         shift, and go to state 57
    CONTINUE      shift, and go to state 58
    ','           shift, and go to state 59
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    funcdef               go to state 67
    funcheader            go to state 68
    stmt                  go to state 69
    simple_stmt           go to state 70
    small_stmt            go to state 71
    expr_stmt             go to state 72
    testlist_star_expr    go to state 73
    comma_test_star       go to state 74
    comma_test_star_seqJ  go to state 75
    print_stmt            go to state 76
    del_stmt              go to state 77
    pass_stmt             go to state 78
    flow_stmt             go to state 79
    break_stmt            go to state 80
    continue_stmt         go to state 81
    return_stmt           go to state 82
    import_stmt           go to state 83
    import_name           go to state 13
    global_stmt           go to state 84
    nonlocal_stmt         go to state 85
    compound_stmt         go to state 86
    vardef                go to state 87
    if_stmt               go to state 88
    if_header             go to state 89
    while_stmt            go to state 90
    while_header          go to state 91
    for_stmt              go to state 92
    for_header            go to state 93
    try_header            go to state 94
    try_stmt              go to state 95
    with_stmt             go to state 96
    list_stmt             go to state 97
    suite                 go to state 175
    test                  go to state 99
    or_test               go to state 100
    and_test              go to state 101
    not_test              go to state 102
    comparison            go to state 103
    star_expr             go to state 104
    expr                  go to state 105
    xor_expr              go to state 106
    and_expr              go to state 107
    shift_expr            go to state 108
    arith_expr            go to state 109
    term                  go to state 110
    factor                go to state 111
    power                 go to state 112
    str_seq               go to state 113
    atom                  go to state 114


State 69

  168 list_stmt: stmt .

    $default  reduce using rule 168 (list_stmt)


State 70

   41 stmt: simple_stmt .

    $default  reduce using rule 41 (stmt)


State 71

   43 simple_stmt: small_stmt . ';'

    ';'  shift, and go to state 176


State 72

   44 small_stmt: expr_stmt .

    $default  reduce using rule 44 (small_stmt)


State 73

   52 expr_stmt: testlist_star_expr . augassign testlist
   53          | testlist_star_expr .
   56          | testlist_star_expr . right_testlist

    PLUS_EQUAL         shift, and go to state 177
    MINUS_EQUAL        shift, and go to state 178
    DIV_EQUAL          shift, and go to state 179
    MOD_EQUAL          shift, and go to state 180
    AND_EQUAL          shift, and go to state 181
    OR_EQUAL           shift, and go to state 182
    SHAPOO_EQUAL       shift, and go to state 183
    LESS_THAN_2_EQUAL  shift, and go to state 184
    MORE_THAN_2_EQUAL  shift, and go to state 185
    STAR_2_EQUAL       shift, and go to state 186
    DIV_2_EQUAL        shift, and go to state 187
    STAR_EQUAL         shift, and go to state 188
    '='                shift, and go to state 189

    $default  reduce using rule 53 (expr_stmt)

    right_testlist  go to state 190
    augassign       go to state 191


State 74

   69 comma_test_star_seqJ: comma_test_star .

    $default  reduce using rule 69 (comma_test_star_seqJ)


State 75

   59 testlist_star_expr: comma_test_star_seqJ .
   60                   | comma_test_star_seqJ . ','
   68 comma_test_star_seqJ: comma_test_star_seqJ . comma_test_star

    ','  shift, and go to state 192

    $default  reduce using rule 59 (testlist_star_expr)

    comma_test_star  go to state 193


State 76

   51 small_stmt: print_stmt .

    $default  reduce using rule 51 (small_stmt)


State 77

   45 small_stmt: del_stmt .

    $default  reduce using rule 45 (small_stmt)


State 78

   46 small_stmt: pass_stmt .

    $default  reduce using rule 46 (small_stmt)


State 79

   47 small_stmt: flow_stmt .

    $default  reduce using rule 47 (small_stmt)


State 80

   88 flow_stmt: break_stmt .

    $default  reduce using rule 88 (flow_stmt)


State 81

   89 flow_stmt: continue_stmt .

    $default  reduce using rule 89 (flow_stmt)


State 82

   90 flow_stmt: return_stmt .

    $default  reduce using rule 90 (flow_stmt)


State 83

   48 small_stmt: import_stmt .

    $default  reduce using rule 48 (small_stmt)


State 84

   49 small_stmt: global_stmt .

    $default  reduce using rule 49 (small_stmt)


State 85

   50 small_stmt: nonlocal_stmt .

    $default  reduce using rule 50 (small_stmt)


State 86

   42 stmt: compound_stmt .

    $default  reduce using rule 42 (stmt)


State 87

   54 expr_stmt: vardef .
   55          | vardef . right_testlist

    '='  shift, and go to state 189

    $default  reduce using rule 54 (expr_stmt)

    right_testlist  go to state 194


State 88

  113 compound_stmt: if_stmt .

    $default  reduce using rule 113 (compound_stmt)


State 89

  140 if_stmt: if_header . suite
  141        | if_header . suite elif_seq
  142        | if_header . suite else_stmt suite
  143        | if_header . suite elif_seq else_stmt suite

    IMPORT        shift, and go to state 1
    END           shift, and go to state 33
    NOT           shift, and go to state 34
    DEF           shift, and go to state 35
    IF            shift, and go to state 36
    WHILE         shift, and go to state 37
    FOR           shift, and go to state 38
    TRY           shift, and go to state 39
    NONLOCAL      shift, and go to state 40
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    WITH          shift, and go to state 48
    DEL           shift, and go to state 49
    RETURN        shift, and go to state 50
    PRINT         shift, and go to state 51
    GLOBAL        shift, and go to state 52
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    PASS          shift, and go to state 55
    CHAR_VALUE    shift, and go to state 56
    BREAK         shift, and go to state 57
    CONTINUE      shift, and go to state 58
    ','           shift, and go to state 59
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    funcdef               go to state 67
    funcheader            go to state 68
    stmt                  go to state 69
    simple_stmt           go to state 70
    small_stmt            go to state 71
    expr_stmt             go to state 72
    testlist_star_expr    go to state 73
    comma_test_star       go to state 74
    comma_test_star_seqJ  go to state 75
    print_stmt            go to state 76
    del_stmt              go to state 77
    pass_stmt             go to state 78
    flow_stmt             go to state 79
    break_stmt            go to state 80
    continue_stmt         go to state 81
    return_stmt           go to state 82
    import_stmt           go to state 83
    import_name           go to state 13
    global_stmt           go to state 84
    nonlocal_stmt         go to state 85
    compound_stmt         go to state 86
    vardef                go to state 87
    if_stmt               go to state 88
    if_header             go to state 89
    while_stmt            go to state 90
    while_header          go to state 91
    for_stmt              go to state 92
    for_header            go to state 93
    try_header            go to state 94
    try_stmt              go to state 95
    with_stmt             go to state 96
    list_stmt             go to state 97
    suite                 go to state 195
    test                  go to state 99
    or_test               go to state 100
    and_test              go to state 101
    not_test              go to state 102
    comparison            go to state 103
    star_expr             go to state 104
    expr                  go to state 105
    xor_expr              go to state 106
    and_expr              go to state 107
    shift_expr            go to state 108
    arith_expr            go to state 109
    term                  go to state 110
    factor                go to state 111
    power                 go to state 112
    str_seq               go to state 113
    atom                  go to state 114


State 90

  114 compound_stmt: while_stmt .

    $default  reduce using rule 114 (compound_stmt)


State 91

  145 while_stmt: while_header . suite
  146           | while_header . suite ELSE ':' suite

    IMPORT        shift, and go to state 1
    END           shift, and go to state 33
    NOT           shift, and go to state 34
    DEF           shift, and go to state 35
    IF            shift, and go to state 36
    WHILE         shift, and go to state 37
    FOR           shift, and go to state 38
    TRY           shift, and go to state 39
    NONLOCAL      shift, and go to state 40
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    WITH          shift, and go to state 48
    DEL           shift, and go to state 49
    RETURN        shift, and go to state 50
    PRINT         shift, and go to state 51
    GLOBAL        shift, and go to state 52
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    PASS          shift, and go to state 55
    CHAR_VALUE    shift, and go to state 56
    BREAK         shift, and go to state 57
    CONTINUE      shift, and go to state 58
    ','           shift, and go to state 59
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    funcdef               go to state 67
    funcheader            go to state 68
    stmt                  go to state 69
    simple_stmt           go to state 70
    small_stmt            go to state 71
    expr_stmt             go to state 72
    testlist_star_expr    go to state 73
    comma_test_star       go to state 74
    comma_test_star_seqJ  go to state 75
    print_stmt            go to state 76
    del_stmt              go to state 77
    pass_stmt             go to state 78
    flow_stmt             go to state 79
    break_stmt            go to state 80
    continue_stmt         go to state 81
    return_stmt           go to state 82
    import_stmt           go to state 83
    import_name           go to state 13
    global_stmt           go to state 84
    nonlocal_stmt         go to state 85
    compound_stmt         go to state 86
    vardef                go to state 87
    if_stmt               go to state 88
    if_header             go to state 89
    while_stmt            go to state 90
    while_header          go to state 91
    for_stmt              go to state 92
    for_header            go to state 93
    try_header            go to state 94
    try_stmt              go to state 95
    with_stmt             go to state 96
    list_stmt             go to state 97
    suite                 go to state 196
    test                  go to state 99
    or_test               go to state 100
    and_test              go to state 101
    not_test              go to state 102
    comparison            go to state 103
    star_expr             go to state 104
    expr                  go to state 105
    xor_expr              go to state 106
    and_expr              go to state 107
    shift_expr            go to state 108
    arith_expr            go to state 109
    term                  go to state 110
    factor                go to state 111
    power                 go to state 112
    str_seq               go to state 113
    atom                  go to state 114


State 92

  115 compound_stmt: for_stmt .

    $default  reduce using rule 115 (compound_stmt)


State 93

  148 for_stmt: for_header . IN testlist ':' suite
  149         | for_header . IN testlist ':' suite ELSE ':' suite

    IN  shift, and go to state 197


State 94

  152 try_stmt: try_header . suite try_except_cla_seq
  153         | try_header . suite try_except_cla_seq ELSE ':' suite
  154         | try_header . suite try_except_cla_seq finally_stmt suite
  155         | try_header . suite finally_stmt suite

    IMPORT        shift, and go to state 1
    END           shift, and go to state 33
    NOT           shift, and go to state 34
    DEF           shift, and go to state 35
    IF            shift, and go to state 36
    WHILE         shift, and go to state 37
    FOR           shift, and go to state 38
    TRY           shift, and go to state 39
    NONLOCAL      shift, and go to state 40
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    WITH          shift, and go to state 48
    DEL           shift, and go to state 49
    RETURN        shift, and go to state 50
    PRINT         shift, and go to state 51
    GLOBAL        shift, and go to state 52
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    PASS          shift, and go to state 55
    CHAR_VALUE    shift, and go to state 56
    BREAK         shift, and go to state 57
    CONTINUE      shift, and go to state 58
    ','           shift, and go to state 59
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    funcdef               go to state 67
    funcheader            go to state 68
    stmt                  go to state 69
    simple_stmt           go to state 70
    small_stmt            go to state 71
    expr_stmt             go to state 72
    testlist_star_expr    go to state 73
    comma_test_star       go to state 74
    comma_test_star_seqJ  go to state 75
    print_stmt            go to state 76
    del_stmt              go to state 77
    pass_stmt             go to state 78
    flow_stmt             go to state 79
    break_stmt            go to state 80
    continue_stmt         go to state 81
    return_stmt           go to state 82
    import_stmt           go to state 83
    import_name           go to state 13
    global_stmt           go to state 84
    nonlocal_stmt         go to state 85
    compound_stmt         go to state 86
    vardef                go to state 87
    if_stmt               go to state 88
    if_header             go to state 89
    while_stmt            go to state 90
    while_header          go to state 91
    for_stmt              go to state 92
    for_header            go to state 93
    try_header            go to state 94
    try_stmt              go to state 95
    with_stmt             go to state 96
    list_stmt             go to state 97
    suite                 go to state 198
    test                  go to state 99
    or_test               go to state 100
    and_test              go to state 101
    not_test              go to state 102
    comparison            go to state 103
    star_expr             go to state 104
    expr                  go to state 105
    xor_expr              go to state 106
    and_expr              go to state 107
    shift_expr            go to state 108
    arith_expr            go to state 109
    term                  go to state 110
    factor                go to state 111
    power                 go to state 112
    str_seq               go to state 113
    atom                  go to state 114


State 95

  116 compound_stmt: try_stmt .

    $default  reduce using rule 116 (compound_stmt)


State 96

  117 compound_stmt: with_stmt .

    $default  reduce using rule 117 (compound_stmt)


State 97

  169 list_stmt: list_stmt . stmt
  170 suite: list_stmt . END

    IMPORT        shift, and go to state 1
    END           shift, and go to state 199
    NOT           shift, and go to state 34
    DEF           shift, and go to state 35
    IF            shift, and go to state 36
    WHILE         shift, and go to state 37
    FOR           shift, and go to state 38
    TRY           shift, and go to state 39
    NONLOCAL      shift, and go to state 40
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    WITH          shift, and go to state 48
    DEL           shift, and go to state 49
    RETURN        shift, and go to state 50
    PRINT         shift, and go to state 51
    GLOBAL        shift, and go to state 52
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    PASS          shift, and go to state 55
    CHAR_VALUE    shift, and go to state 56
    BREAK         shift, and go to state 57
    CONTINUE      shift, and go to state 58
    ','           shift, and go to state 59
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    funcdef               go to state 67
    funcheader            go to state 68
    stmt                  go to state 200
    simple_stmt           go to state 70
    small_stmt            go to state 71
    expr_stmt             go to state 72
    testlist_star_expr    go to state 73
    comma_test_star       go to state 74
    comma_test_star_seqJ  go to state 75
    print_stmt            go to state 76
    del_stmt              go to state 77
    pass_stmt             go to state 78
    flow_stmt             go to state 79
    break_stmt            go to state 80
    continue_stmt         go to state 81
    return_stmt           go to state 82
    import_stmt           go to state 83
    import_name           go to state 13
    global_stmt           go to state 84
    nonlocal_stmt         go to state 85
    compound_stmt         go to state 86
    vardef                go to state 87
    if_stmt               go to state 88
    if_header             go to state 89
    while_stmt            go to state 90
    while_header          go to state 91
    for_stmt              go to state 92
    for_header            go to state 93
    try_header            go to state 94
    try_stmt              go to state 95
    with_stmt             go to state 96
    test                  go to state 99
    or_test               go to state 100
    and_test              go to state 101
    not_test              go to state 102
    comparison            go to state 103
    star_expr             go to state 104
    expr                  go to state 105
    xor_expr              go to state 106
    and_expr              go to state 107
    shift_expr            go to state 108
    arith_expr            go to state 109
    term                  go to state 110
    factor                go to state 111
    power                 go to state 112
    str_seq               go to state 113
    atom                  go to state 114


State 98

  332 classdef: classheader suite .

    $default  reduce using rule 332 (classdef)


State 99

   62 testlist_star_expr: test . comma_test_star_seqJ
   63                   | test .

    ','  shift, and go to state 201

    $default  reduce using rule 63 (testlist_star_expr)

    comma_test_star       go to state 74
    comma_test_star_seqJ  go to state 202


State 100

  172 test: or_test .
  173     | or_test . IF or_test ELSE test

    IF  shift, and go to state 203

    $default  reduce using rule 172 (test)


State 101

  176 or_test: and_test .
  177        | and_test . or_seq

    OR  shift, and go to state 204

    $default  reduce using rule 176 (or_test)

    or_seq  go to state 205


State 102

  180 and_test: not_test .
  181         | not_test . and_seq

    AND  shift, and go to state 206

    $default  reduce using rule 180 (and_test)

    and_seq  go to state 207


State 103

  183 not_test: comparison .

    $default  reduce using rule 183 (not_test)


State 104

   64 testlist_star_expr: star_expr . comma_test_star_seqJ ','
   65                   | star_expr . ','

    ','  shift, and go to state 208

    comma_test_star       go to state 74
    comma_test_star_seqJ  go to state 209


State 105

  186 comparison: expr .
  187           | expr . comp_op_seq

    NOT            shift, and go to state 210
    NOT_EQUAL      shift, and go to state 211
    IN             shift, and go to state 212
    MORE_LESS      shift, and go to state 213
    EQUAL          shift, and go to state 214
    IS             shift, and go to state 215
    LESS_OR_EQUAL  shift, and go to state 216
    MORE_OR_EQUAL  shift, and go to state 217
    '<'            shift, and go to state 218
    '>'            shift, and go to state 219

    $default  reduce using rule 186 (comparison)

    comp_op_seq  go to state 220
    comp_op      go to state 221


State 106

  202 expr: xor_expr .
  203     | xor_expr . or_xor_expr_seq

    '|'  shift, and go to state 222

    $default  reduce using rule 202 (expr)

    or_xor_expr_seq  go to state 223


State 107

  206 xor_expr: and_expr .
  207         | and_expr . sha_and_expr_seq

    '^'  shift, and go to state 224

    $default  reduce using rule 206 (xor_expr)

    sha_and_expr_seq  go to state 225


State 108

  210 and_expr: shift_expr .
  211         | shift_expr . and_shift_expr_seq

    '&'  shift, and go to state 226

    $default  reduce using rule 210 (and_expr)

    and_shift_expr_seq  go to state 227


State 109

  216 shift_expr: arith_expr .
  217           | arith_expr . arith_seq

    LESS_THAN_2  shift, and go to state 228
    MORE_THAN_2  shift, and go to state 229

    $default  reduce using rule 216 (shift_expr)

    arith_seq  go to state 230


State 110

  222 arith_expr: term .
  223           | term . term_seq

    '+'  shift, and go to state 231
    '-'  shift, and go to state 232

    $default  reduce using rule 222 (arith_expr)

    term_seq  go to state 233


State 111

  232 term: factor .
  233     | factor . factor_seq

    DIV_2  shift, and go to state 234
    '*'    shift, and go to state 235
    '/'    shift, and go to state 236
    '%'    shift, and go to state 237

    $default  reduce using rule 232 (term)

    factor_seq  go to state 238


State 112

  237 factor: power .

    $default  reduce using rule 237 (factor)


State 113

  245 str_seq: str_seq . STRING
  260 atom: str_seq .

    STRING  shift, and go to state 239

    $default  reduce using rule 260 (atom)


State 114

  240 power: atom .
  241      | atom . trailer_seq
  242      | atom . trailer_seq STAR_2 factor
  243      | atom . STAR_2 factor

    STAR_2  shift, and go to state 240
    '.'     shift, and go to state 241

    $default  reduce using rule 240 (power)

    trailer_seq  go to state 242
    trailer      go to state 243


State 115

  105 dotted_name_seq: '.' . NAME

    NAME  shift, and go to state 244


State 116

  104 dotted_name: NAME dotted_name_seq .
  106 dotted_name_seq: dotted_name_seq . '.' NAME

    '.'  shift, and go to state 245

    $default  reduce using rule 104 (dotted_name)


State 117

   97 comma_dotted_as_name_seq: ',' . dotted_as_name

    NAME  shift, and go to state 16

    dotted_as_name  go to state 246
    dotted_name     go to state 19


State 118

   98 comma_dotted_as_name_seq: comma_dotted_as_name_seq . ',' dotted_as_name
  100 dotted_as_names: dotted_as_name comma_dotted_as_name_seq .

    ','  shift, and go to state 247

    $default  reduce using rule 100 (dotted_as_names)


State 119

  102 dotted_as_name: dotted_name AS . NAME

    NAME  shift, and go to state 248


State 120

  349 classheader: CLASS NAME '(' . ')' ':'
  365            | CLASS NAME '(' . dotted_as_names ')' ':'

    NAME  shift, and go to state 16
    ')'   shift, and go to state 249

    dotted_as_names  go to state 250
    dotted_as_name   go to state 18
    dotted_name      go to state 19


State 121

  333 classheader: CLASS NAME ':' .

    $default  reduce using rule 333 (classheader)


State 122

  336 classheader: FINAL CLASS NAME . ':'
  352            | FINAL CLASS NAME . '(' ')' ':'
  368            | FINAL CLASS NAME . '(' dotted_as_names ')' ':'

    '('  shift, and go to state 251
    ':'  shift, and go to state 252


State 123

  338 classheader: FINAL STATIC CLASS . NAME ':'
  354            | FINAL STATIC CLASS . NAME '(' ')' ':'
  370            | FINAL STATIC CLASS . NAME '(' dotted_as_names ')' ':'

    NAME  shift, and go to state 253


State 124

  342 classheader: FINAL STATIC access . CLASS NAME ':'
  358            | FINAL STATIC access . CLASS NAME '(' ')' ':'
  374            | FINAL STATIC access . CLASS NAME '(' dotted_as_names ')' ':'

    CLASS  shift, and go to state 254


State 125

  339 classheader: FINAL access CLASS . NAME ':'
  356            | FINAL access CLASS . NAME '(' ')' ':'
  372            | FINAL access CLASS . NAME '(' dotted_as_names ')' ':'

    NAME  shift, and go to state 255


State 126

  348 classheader: FINAL access STATIC . CLASS NAME ':'
  364            | FINAL access STATIC . CLASS NAME '(' ')' ':'
  380            | FINAL access STATIC . CLASS NAME '(' dotted_as_names ')' ':'

    CLASS  shift, and go to state 256


State 127

  335 classheader: STATIC CLASS NAME . ':'
  351            | STATIC CLASS NAME . '(' ')' ':'
  367            | STATIC CLASS NAME . '(' dotted_as_names ')' ':'

    '('  shift, and go to state 257
    ':'  shift, and go to state 258


State 128

  337 classheader: STATIC FINAL CLASS . NAME ':'
  353            | STATIC FINAL CLASS . NAME '(' ')' ':'
  369            | STATIC FINAL CLASS . NAME '(' dotted_as_names ')' ':'

    NAME  shift, and go to state 259


State 129

  341 classheader: STATIC FINAL access . CLASS NAME ':'
  357            | STATIC FINAL access . CLASS NAME '(' ')' ':'
  373            | STATIC FINAL access . CLASS NAME '(' dotted_as_names ')' ':'

    CLASS  shift, and go to state 260


State 130

  340 classheader: STATIC access CLASS . NAME ':'
  355            | STATIC access CLASS . NAME '(' ')' ':'
  371            | STATIC access CLASS . NAME '(' dotted_as_names ')' ':'

    NAME  shift, and go to state 261


State 131

  347 classheader: STATIC access FINAL . CLASS NAME ':'
  363            | STATIC access FINAL . CLASS NAME '(' ')' ':'
  379            | STATIC access FINAL . CLASS NAME '(' dotted_as_names ')' ':'

    CLASS  shift, and go to state 262


State 132

  334 classheader: access CLASS NAME . ':'
  350            | access CLASS NAME . '(' ')' ':'
  366            | access CLASS NAME . '(' dotted_as_names ')' ':'

    '('  shift, and go to state 263
    ':'  shift, and go to state 264


State 133

  344 classheader: access FINAL CLASS . NAME ':'
  360            | access FINAL CLASS . NAME '(' ')' ':'
  376            | access FINAL CLASS . NAME '(' dotted_as_names ')' ':'

    NAME  shift, and go to state 265


State 134

  346 classheader: access FINAL STATIC . CLASS NAME ':'
  362            | access FINAL STATIC . CLASS NAME '(' ')' ':'
  378            | access FINAL STATIC . CLASS NAME '(' dotted_as_names ')' ':'

    CLASS  shift, and go to state 266


State 135

  343 classheader: access STATIC CLASS . NAME ':'
  359            | access STATIC CLASS . NAME '(' ')' ':'
  375            | access STATIC CLASS . NAME '(' dotted_as_names ')' ':'

    NAME  shift, and go to state 267


State 136

  345 classheader: access STATIC FINAL . CLASS NAME ':'
  361            | access STATIC FINAL . CLASS NAME '(' ')' ':'
  377            | access STATIC FINAL . CLASS NAME '(' dotted_as_names ')' ':'

    CLASS  shift, and go to state 268


State 137

    2 program: import_stmt ';' temp2 .

    $default  reduce using rule 2 (program)


State 138

  182 not_test: NOT not_test .

    $default  reduce using rule 182 (not_test)


State 139

   12 funcheader: DEF FINAL . NAME parameters ARROW test ':'
   14           | DEF FINAL . NAME parameters ':'
   16           | DEF FINAL . STATIC NAME parameters ARROW test ':'
   18           | DEF FINAL . STATIC NAME parameters ':'
   19           | DEF FINAL . access NAME parameters ARROW test ':'
   22           | DEF FINAL . access NAME parameters ':'
   24           | DEF FINAL . STATIC access NAME parameters ARROW test ':'
   26           | DEF FINAL . STATIC access NAME parameters ':'
   36           | DEF FINAL . access STATIC NAME parameters ARROW test ':'
   38           | DEF FINAL . access STATIC NAME parameters ':'
  123 vardef: DEF FINAL . NAME
  125       | DEF FINAL . STATIC NAME
  127       | DEF FINAL . access NAME
  129       | DEF FINAL . STATIC access NAME
  135       | DEF FINAL . access STATIC NAME
  336 classheader: FINAL . CLASS NAME ':'
  338            | FINAL . STATIC CLASS NAME ':'
  339            | FINAL . access CLASS NAME ':'
  342            | FINAL . STATIC access CLASS NAME ':'
  348            | FINAL . access STATIC CLASS NAME ':'
  352            | FINAL . CLASS NAME '(' ')' ':'
  354            | FINAL . STATIC CLASS NAME '(' ')' ':'
  356            | FINAL . access CLASS NAME '(' ')' ':'
  358            | FINAL . STATIC access CLASS NAME '(' ')' ':'
  364            | FINAL . access STATIC CLASS NAME '(' ')' ':'
  368            | FINAL . CLASS NAME '(' dotted_as_names ')' ':'
  370            | FINAL . STATIC CLASS NAME '(' dotted_as_names ')' ':'
  372            | FINAL . access CLASS NAME '(' dotted_as_names ')' ':'
  374            | FINAL . STATIC access CLASS NAME '(' dotted_as_names ')' ':'
  380            | FINAL . access STATIC CLASS NAME '(' dotted_as_names ')' ':'

    CLASS      shift, and go to state 21
    STATIC     shift, and go to state 269
    NAME       shift, and go to state 270
    PRIVATE    shift, and go to state 5
    PUBLIC     shift, and go to state 6
    PROTECTED  shift, and go to state 7

    access  go to state 271


State 140

   11 funcheader: DEF STATIC . NAME parameters ARROW test ':'
   13           | DEF STATIC . NAME parameters ':'
   15           | DEF STATIC . FINAL NAME parameters ARROW test ':'
   17           | DEF STATIC . FINAL NAME parameters ':'
   20           | DEF STATIC . access NAME parameters ARROW test ':'
   21           | DEF STATIC . access NAME parameters ':'
   23           | DEF STATIC . FINAL access NAME parameters ARROW test ':'
   25           | DEF STATIC . FINAL access NAME parameters ':'
   35           | DEF STATIC . access FINAL NAME parameters ARROW test ':'
   37           | DEF STATIC . access FINAL NAME parameters ':'
  122 vardef: DEF STATIC . NAME
  124       | DEF STATIC . FINAL NAME
  126       | DEF STATIC . access NAME
  128       | DEF STATIC . FINAL access NAME
  134       | DEF STATIC . access FINAL NAME
  335 classheader: STATIC . CLASS NAME ':'
  337            | STATIC . FINAL CLASS NAME ':'
  340            | STATIC . access CLASS NAME ':'
  341            | STATIC . FINAL access CLASS NAME ':'
  347            | STATIC . access FINAL CLASS NAME ':'
  351            | STATIC . CLASS NAME '(' ')' ':'
  353            | STATIC . FINAL CLASS NAME '(' ')' ':'
  355            | STATIC . access CLASS NAME '(' ')' ':'
  357            | STATIC . FINAL access CLASS NAME '(' ')' ':'
  363            | STATIC . access FINAL CLASS NAME '(' ')' ':'
  367            | STATIC . CLASS NAME '(' dotted_as_names ')' ':'
  369            | STATIC . FINAL CLASS NAME '(' dotted_as_names ')' ':'
  371            | STATIC . access CLASS NAME '(' dotted_as_names ')' ':'
  373            | STATIC . FINAL access CLASS NAME '(' dotted_as_names ')' ':'
  379            | STATIC . access FINAL CLASS NAME '(' dotted_as_names ')' ':'

    CLASS      shift, and go to state 24
    FINAL      shift, and go to state 272
    NAME       shift, and go to state 273
    PRIVATE    shift, and go to state 5
    PUBLIC     shift, and go to state 6
    PROTECTED  shift, and go to state 7

    access  go to state 274


State 141

    7 funcheader: DEF NAME . parameters ARROW test ':'
    9           | DEF NAME . parameters ':'
  120 vardef: DEF NAME .

    '('  shift, and go to state 275

    $default  reduce using rule 120 (vardef)

    parameters  go to state 276


State 142

    8 funcheader: DEF access . NAME parameters ARROW test ':'
   10           | DEF access . NAME parameters ':'
   27           | DEF access . STATIC NAME parameters ARROW test ':'
   28           | DEF access . FINAL NAME parameters ARROW test ':'
   29           | DEF access . STATIC NAME parameters ':'
   30           | DEF access . FINAL NAME parameters ':'
   31           | DEF access . STATIC FINAL NAME parameters ARROW test ':'
   32           | DEF access . FINAL STATIC NAME parameters ARROW test ':'
   33           | DEF access . STATIC FINAL NAME parameters ':'
   34           | DEF access . FINAL STATIC NAME parameters ':'
  121 vardef: DEF access . NAME
  130       | DEF access . STATIC NAME
  131       | DEF access . FINAL NAME
  132       | DEF access . STATIC FINAL NAME
  133       | DEF access . FINAL STATIC NAME
  334 classheader: access . CLASS NAME ':'
  343            | access . STATIC CLASS NAME ':'
  344            | access . FINAL CLASS NAME ':'
  345            | access . STATIC FINAL CLASS NAME ':'
  346            | access . FINAL STATIC CLASS NAME ':'
  350            | access . CLASS NAME '(' ')' ':'
  359            | access . STATIC CLASS NAME '(' ')' ':'
  360            | access . FINAL CLASS NAME '(' ')' ':'
  361            | access . STATIC FINAL CLASS NAME '(' ')' ':'
  362            | access . FINAL STATIC CLASS NAME '(' ')' ':'
  366            | access . CLASS NAME '(' dotted_as_names ')' ':'
  375            | access . STATIC CLASS NAME '(' dotted_as_names ')' ':'
  376            | access . FINAL CLASS NAME '(' dotted_as_names ')' ':'
  377            | access . STATIC FINAL CLASS NAME '(' dotted_as_names ')' ':'
  378            | access . FINAL STATIC CLASS NAME '(' dotted_as_names ')' ':'

    CLASS   shift, and go to state 28
    FINAL   shift, and go to state 277
    STATIC  shift, and go to state 278
    NAME    shift, and go to state 279


State 143

  119 compound_stmt: DEF classdef .

    $default  reduce using rule 119 (compound_stmt)


State 144

  144 if_header: IF test . ':'

    ':'  shift, and go to state 280


State 145

  147 while_header: WHILE test . ':'

    ':'  shift, and go to state 281


State 146

  306 exprlist: star_expr .
  307         | star_expr . comma_expr_star_seq
  310         | star_expr . ','
  311         | star_expr . comma_expr_star_seq ','

    ','  shift, and go to state 282

    $default  reduce using rule 306 (exprlist)

    comma_expr_star_seq  go to state 283


State 147

  304 exprlist: expr .
  305         | expr . comma_expr_star_seq
  308         | expr . ','
  309         | expr . comma_expr_star_seq ','

    ','  shift, and go to state 284

    $default  reduce using rule 304 (exprlist)

    comma_expr_star_seq  go to state 285


State 148

  150 for_header: FOR exprlist .

    $default  reduce using rule 150 (for_header)


State 149

  151 try_header: TRY ':' .

    $default  reduce using rule 151 (try_header)


State 150

  111 nonlocal_stmt: NONLOCAL NAME .
  112              | NONLOCAL NAME . comma_name_seq

    ','  shift, and go to state 286

    $default  reduce using rule 111 (nonlocal_stmt)

    comma_name_seq  go to state 287


State 151

  253 atom: NAME '(' . ')'
  254     | NAME '(' . arglist ')'

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    STAR_2        shift, and go to state 288
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 289
    ')'           shift, and go to state 290
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    test           go to state 291
    or_test        go to state 100
    and_test       go to state 101
    not_test       go to state 102
    comparison     go to state 103
    expr           go to state 105
    xor_expr       go to state 106
    and_expr       go to state 107
    shift_expr     go to state 108
    arith_expr     go to state 109
    term           go to state 110
    factor         go to state 111
    power          go to state 112
    str_seq        go to state 113
    atom           go to state 114
    arg_comma_seq  go to state 292
    arglist        go to state 293
    default_arg    go to state 294
    argument       go to state 295


State 152

  255 atom: NAME '[' . subscriptlist ']'

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    ':'           shift, and go to state 296
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    test           go to state 297
    or_test        go to state 100
    and_test       go to state 101
    not_test       go to state 102
    comparison     go to state 103
    expr           go to state 105
    xor_expr       go to state 106
    and_expr       go to state 107
    shift_expr     go to state 108
    arith_expr     go to state 109
    term           go to state 110
    factor         go to state 111
    power          go to state 112
    str_seq        go to state 113
    atom           go to state 114
    subscriptlist  go to state 298
    subscript      go to state 299


State 153

  161 with_stmt: WITH with_item . ':' suite
  162          | WITH with_item . with_seq ':' suite

    ','  shift, and go to state 300
    ':'  shift, and go to state 301

    with_seq  go to state 302


State 154

  163 with_item: test .
  164          | test . AS expr

    AS  shift, and go to state 303

    $default  reduce using rule 163 (with_item)


State 155

   86 del_stmt: DEL exprlist .

    $default  reduce using rule 86 (del_stmt)


State 156

  314 testlist: test .
  315         | test . comma_test
  316         | test . ','
  317         | test . comma_test ','

    ','  shift, and go to state 304

    $default  reduce using rule 314 (testlist)

    comma_test  go to state 305


State 157

   93 return_stmt: RETURN testlist .

    $default  reduce using rule 93 (return_stmt)


State 158

   85 print_stmt: PRINT exprlist .

    $default  reduce using rule 85 (print_stmt)


State 159

  109 global_stmt: GLOBAL NAME .
  110            | GLOBAL NAME . comma_name_seq

    ','  shift, and go to state 286

    $default  reduce using rule 109 (global_stmt)

    comma_name_seq  go to state 306


State 160

   66 comma_test_star: ',' test .

    $default  reduce using rule 66 (comma_test_star)


State 161

   67 comma_test_star: ',' star_expr .

    $default  reduce using rule 67 (comma_test_star)


State 162

  246 atom: '(' ')' .

    $default  reduce using rule 246 (atom)


State 163

  269 testlist_comp: test . comp_for
  270              | test .
  271              | test . comma_test_star_seq
  272              | test . ','
  273              | test . comma_test_star_seq ','

    FOR  shift, and go to state 307
    ','  shift, and go to state 308

    $default  reduce using rule 270 (testlist_comp)

    comma_test_star_seq  go to state 309
    comp_for             go to state 310


State 164

  274 testlist_comp: star_expr . comp_for
  275              | star_expr .
  276              | star_expr . comma_test_star_seq
  277              | star_expr . ','
  278              | star_expr . comma_test_star_seq ','

    FOR  shift, and go to state 307
    ','  shift, and go to state 311

    $default  reduce using rule 275 (testlist_comp)

    comma_test_star_seq  go to state 312
    comp_for             go to state 313


State 165

  247 atom: '(' testlist_comp . ')'

    ')'  shift, and go to state 314


State 166

  248 atom: '[' ']' .

    $default  reduce using rule 248 (atom)


State 167

  250 atom: '[' testlist_comp . ']'

    ']'  shift, and go to state 315


State 168

  234 factor: '+' factor .

    $default  reduce using rule 234 (factor)


State 169

  235 factor: '-' factor .

    $default  reduce using rule 235 (factor)


State 170

  199 star_expr: '*' expr .

    $default  reduce using rule 199 (star_expr)


State 171

  236 factor: '~' factor .

    $default  reduce using rule 236 (factor)


State 172

  249 atom: '{' '}' .

    $default  reduce using rule 249 (atom)


State 173

  322 dictorsetmaker: test . ':' test comp_for
  323               | test . ':' test
  324               | test . ':' test ','
  325               | test . ':' test comma_test_colon_test_seq
  326               | test . ':' test comma_test_colon_test_seq ','
  327               | test . comp_for
  328               | test .
  329               | test . ','
  330               | test . comma_test_seq
  331               | test . comma_test_seq ','

    FOR  shift, and go to state 307
    ','  shift, and go to state 316
    ':'  shift, and go to state 317

    $default  reduce using rule 328 (dictorsetmaker)

    comma_test_seq  go to state 318
    comp_for        go to state 319


State 174

  251 atom: '{' dictorsetmaker . '}'

    '}'  shift, and go to state 320


State 175

    6 funcdef: funcheader suite .

    $default  reduce using rule 6 (funcdef)


State 176

   43 simple_stmt: small_stmt ';' .

    $default  reduce using rule 43 (simple_stmt)


State 177

   70 augassign: PLUS_EQUAL .

    $default  reduce using rule 70 (augassign)


State 178

   71 augassign: MINUS_EQUAL .

    $default  reduce using rule 71 (augassign)


State 179

   73 augassign: DIV_EQUAL .

    $default  reduce using rule 73 (augassign)


State 180

   74 augassign: MOD_EQUAL .

    $default  reduce using rule 74 (augassign)


State 181

   75 augassign: AND_EQUAL .

    $default  reduce using rule 75 (augassign)


State 182

   76 augassign: OR_EQUAL .

    $default  reduce using rule 76 (augassign)


State 183

   77 augassign: SHAPOO_EQUAL .

    $default  reduce using rule 77 (augassign)


State 184

   78 augassign: LESS_THAN_2_EQUAL .

    $default  reduce using rule 78 (augassign)


State 185

   79 augassign: MORE_THAN_2_EQUAL .

    $default  reduce using rule 79 (augassign)


State 186

   80 augassign: STAR_2_EQUAL .

    $default  reduce using rule 80 (augassign)


State 187

   81 augassign: DIV_2_EQUAL .

    $default  reduce using rule 81 (augassign)


State 188

   72 augassign: STAR_EQUAL .

    $default  reduce using rule 72 (augassign)


State 189

   57 right_testlist: '=' . testlist_star_expr right_testlist
   58               | '=' . testlist_star_expr

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    ','           shift, and go to state 59
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    testlist_star_expr    go to state 321
    comma_test_star       go to state 74
    comma_test_star_seqJ  go to state 75
    test                  go to state 99
    or_test               go to state 100
    and_test              go to state 101
    not_test              go to state 102
    comparison            go to state 103
    star_expr             go to state 104
    expr                  go to state 105
    xor_expr              go to state 106
    and_expr              go to state 107
    shift_expr            go to state 108
    arith_expr            go to state 109
    term                  go to state 110
    factor                go to state 111
    power                 go to state 112
    str_seq               go to state 113
    atom                  go to state 114


State 190

   56 expr_stmt: testlist_star_expr right_testlist .

    $default  reduce using rule 56 (expr_stmt)


State 191

   52 expr_stmt: testlist_star_expr augassign . testlist

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    test        go to state 156
    or_test     go to state 100
    and_test    go to state 101
    not_test    go to state 102
    comparison  go to state 103
    expr        go to state 105
    xor_expr    go to state 106
    and_expr    go to state 107
    shift_expr  go to state 108
    arith_expr  go to state 109
    term        go to state 110
    factor      go to state 111
    power       go to state 112
    str_seq     go to state 113
    atom        go to state 114
    testlist    go to state 322


State 192

   60 testlist_star_expr: comma_test_star_seqJ ',' .
   66 comma_test_star: ',' . test
   67                | ',' . star_expr

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    $default  reduce using rule 60 (testlist_star_expr)

    test        go to state 160
    or_test     go to state 100
    and_test    go to state 101
    not_test    go to state 102
    comparison  go to state 103
    star_expr   go to state 161
    expr        go to state 105
    xor_expr    go to state 106
    and_expr    go to state 107
    shift_expr  go to state 108
    arith_expr  go to state 109
    term        go to state 110
    factor      go to state 111
    power       go to state 112
    str_seq     go to state 113
    atom        go to state 114


State 193

   68 comma_test_star_seqJ: comma_test_star_seqJ comma_test_star .

    $default  reduce using rule 68 (comma_test_star_seqJ)


State 194

   55 expr_stmt: vardef right_testlist .

    $default  reduce using rule 55 (expr_stmt)


State 195

  140 if_stmt: if_header suite .
  141        | if_header suite . elif_seq
  142        | if_header suite . else_stmt suite
  143        | if_header suite . elif_seq else_stmt suite

    ELSE  shift, and go to state 323
    ELIF  shift, and go to state 324

    $default  reduce using rule 140 (if_stmt)

    elif_seq     go to state 325
    elif_header  go to state 326
    else_stmt    go to state 327


State 196

  145 while_stmt: while_header suite .
  146           | while_header suite . ELSE ':' suite

    ELSE  shift, and go to state 328

    $default  reduce using rule 145 (while_stmt)


State 197

  148 for_stmt: for_header IN . testlist ':' suite
  149         | for_header IN . testlist ':' suite ELSE ':' suite

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    test        go to state 156
    or_test     go to state 100
    and_test    go to state 101
    not_test    go to state 102
    comparison  go to state 103
    expr        go to state 105
    xor_expr    go to state 106
    and_expr    go to state 107
    shift_expr  go to state 108
    arith_expr  go to state 109
    term        go to state 110
    factor      go to state 111
    power       go to state 112
    str_seq     go to state 113
    atom        go to state 114
    testlist    go to state 329


State 198

  152 try_stmt: try_header suite . try_except_cla_seq
  153         | try_header suite . try_except_cla_seq ELSE ':' suite
  154         | try_header suite . try_except_cla_seq finally_stmt suite
  155         | try_header suite . finally_stmt suite

    FINALLY  shift, and go to state 330
    EXCEPT   shift, and go to state 331

    finally_stmt        go to state 332
    try_except_cla_seq  go to state 333
    except_clause       go to state 334


State 199

  170 suite: list_stmt END .

    $default  reduce using rule 170 (suite)


State 200

  169 list_stmt: list_stmt stmt .

    $default  reduce using rule 169 (list_stmt)


State 201

   66 comma_test_star: ',' . test
   67                | ',' . star_expr

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    test        go to state 160
    or_test     go to state 100
    and_test    go to state 101
    not_test    go to state 102
    comparison  go to state 103
    star_expr   go to state 161
    expr        go to state 105
    xor_expr    go to state 106
    and_expr    go to state 107
    shift_expr  go to state 108
    arith_expr  go to state 109
    term        go to state 110
    factor      go to state 111
    power       go to state 112
    str_seq     go to state 113
    atom        go to state 114


State 202

   62 testlist_star_expr: test comma_test_star_seqJ .
   68 comma_test_star_seqJ: comma_test_star_seqJ . comma_test_star

    ','  shift, and go to state 201

    $default  reduce using rule 62 (testlist_star_expr)

    comma_test_star  go to state 193


State 203

  173 test: or_test IF . or_test ELSE test

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    or_test     go to state 335
    and_test    go to state 101
    not_test    go to state 102
    comparison  go to state 103
    expr        go to state 105
    xor_expr    go to state 106
    and_expr    go to state 107
    shift_expr  go to state 108
    arith_expr  go to state 109
    term        go to state 110
    factor      go to state 111
    power       go to state 112
    str_seq     go to state 113
    atom        go to state 114


State 204

  174 or_seq: OR . and_test

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    and_test    go to state 336
    not_test    go to state 102
    comparison  go to state 103
    expr        go to state 105
    xor_expr    go to state 106
    and_expr    go to state 107
    shift_expr  go to state 108
    arith_expr  go to state 109
    term        go to state 110
    factor      go to state 111
    power       go to state 112
    str_seq     go to state 113
    atom        go to state 114


State 205

  175 or_seq: or_seq . OR and_test
  177 or_test: and_test or_seq .

    OR  shift, and go to state 337

    $default  reduce using rule 177 (or_test)


State 206

  178 and_seq: AND . not_test

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    not_test    go to state 338
    comparison  go to state 103
    expr        go to state 105
    xor_expr    go to state 106
    and_expr    go to state 107
    shift_expr  go to state 108
    arith_expr  go to state 109
    term        go to state 110
    factor      go to state 111
    power       go to state 112
    str_seq     go to state 113
    atom        go to state 114


State 207

  179 and_seq: and_seq . AND not_test
  181 and_test: not_test and_seq .

    AND  shift, and go to state 339

    $default  reduce using rule 181 (and_test)


State 208

   65 testlist_star_expr: star_expr ',' .
   66 comma_test_star: ',' . test
   67                | ',' . star_expr

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    $default  reduce using rule 65 (testlist_star_expr)

    test        go to state 160
    or_test     go to state 100
    and_test    go to state 101
    not_test    go to state 102
    comparison  go to state 103
    star_expr   go to state 161
    expr        go to state 105
    xor_expr    go to state 106
    and_expr    go to state 107
    shift_expr  go to state 108
    arith_expr  go to state 109
    term        go to state 110
    factor      go to state 111
    power       go to state 112
    str_seq     go to state 113
    atom        go to state 114


State 209

   64 testlist_star_expr: star_expr comma_test_star_seqJ . ','
   68 comma_test_star_seqJ: comma_test_star_seqJ . comma_test_star

    ','  shift, and go to state 340

    comma_test_star  go to state 193


State 210

  196 comp_op: NOT . IN

    IN  shift, and go to state 341


State 211

  194 comp_op: NOT_EQUAL .

    $default  reduce using rule 194 (comp_op)


State 212

  195 comp_op: IN .

    $default  reduce using rule 195 (comp_op)


State 213

  193 comp_op: MORE_LESS .

    $default  reduce using rule 193 (comp_op)


State 214

  190 comp_op: EQUAL .

    $default  reduce using rule 190 (comp_op)


State 215

  197 comp_op: IS .
  198        | IS . NOT

    NOT  shift, and go to state 342

    $default  reduce using rule 197 (comp_op)


State 216

  192 comp_op: LESS_OR_EQUAL .

    $default  reduce using rule 192 (comp_op)


State 217

  191 comp_op: MORE_OR_EQUAL .

    $default  reduce using rule 191 (comp_op)


State 218

  188 comp_op: '<' .

    $default  reduce using rule 188 (comp_op)


State 219

  189 comp_op: '>' .

    $default  reduce using rule 189 (comp_op)


State 220

  185 comp_op_seq: comp_op_seq . comp_op expr
  187 comparison: expr comp_op_seq .

    NOT            shift, and go to state 210
    NOT_EQUAL      shift, and go to state 211
    IN             shift, and go to state 212
    MORE_LESS      shift, and go to state 213
    EQUAL          shift, and go to state 214
    IS             shift, and go to state 215
    LESS_OR_EQUAL  shift, and go to state 216
    MORE_OR_EQUAL  shift, and go to state 217
    '<'            shift, and go to state 218
    '>'            shift, and go to state 219

    $default  reduce using rule 187 (comparison)

    comp_op  go to state 343


State 221

  184 comp_op_seq: comp_op . expr

    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    expr        go to state 344
    xor_expr    go to state 106
    and_expr    go to state 107
    shift_expr  go to state 108
    arith_expr  go to state 109
    term        go to state 110
    factor      go to state 111
    power       go to state 112
    str_seq     go to state 113
    atom        go to state 114


State 222

  200 or_xor_expr_seq: '|' . xor_expr

    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    xor_expr    go to state 345
    and_expr    go to state 107
    shift_expr  go to state 108
    arith_expr  go to state 109
    term        go to state 110
    factor      go to state 111
    power       go to state 112
    str_seq     go to state 113
    atom        go to state 114


State 223

  201 or_xor_expr_seq: or_xor_expr_seq . '|' xor_expr
  203 expr: xor_expr or_xor_expr_seq .

    '|'  shift, and go to state 346

    $default  reduce using rule 203 (expr)


State 224

  204 sha_and_expr_seq: '^' . and_expr

    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    and_expr    go to state 347
    shift_expr  go to state 108
    arith_expr  go to state 109
    term        go to state 110
    factor      go to state 111
    power       go to state 112
    str_seq     go to state 113
    atom        go to state 114


State 225

  205 sha_and_expr_seq: sha_and_expr_seq . '^' and_expr
  207 xor_expr: and_expr sha_and_expr_seq .

    '^'  shift, and go to state 348

    $default  reduce using rule 207 (xor_expr)


State 226

  208 and_shift_expr_seq: '&' . shift_expr

    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    shift_expr  go to state 349
    arith_expr  go to state 109
    term        go to state 110
    factor      go to state 111
    power       go to state 112
    str_seq     go to state 113
    atom        go to state 114


State 227

  209 and_shift_expr_seq: and_shift_expr_seq . '&' shift_expr
  211 and_expr: shift_expr and_shift_expr_seq .

    '&'  shift, and go to state 350

    $default  reduce using rule 211 (and_expr)


State 228

  212 arith_seq: LESS_THAN_2 . arith_expr

    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    arith_expr  go to state 351
    term        go to state 110
    factor      go to state 111
    power       go to state 112
    str_seq     go to state 113
    atom        go to state 114


State 229

  213 arith_seq: MORE_THAN_2 . arith_expr

    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    arith_expr  go to state 352
    term        go to state 110
    factor      go to state 111
    power       go to state 112
    str_seq     go to state 113
    atom        go to state 114


State 230

  214 arith_seq: arith_seq . LESS_THAN_2 arith_expr
  215          | arith_seq . MORE_THAN_2 arith_expr
  217 shift_expr: arith_expr arith_seq .

    LESS_THAN_2  shift, and go to state 353
    MORE_THAN_2  shift, and go to state 354

    $default  reduce using rule 217 (shift_expr)


State 231

  218 term_seq: '+' . term

    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    term     go to state 355
    factor   go to state 111
    power    go to state 112
    str_seq  go to state 113
    atom     go to state 114


State 232

  219 term_seq: '-' . term

    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    term     go to state 356
    factor   go to state 111
    power    go to state 112
    str_seq  go to state 113
    atom     go to state 114


State 233

  220 term_seq: term_seq . '+' term
  221         | term_seq . '-' term
  223 arith_expr: term term_seq .

    '+'  shift, and go to state 357
    '-'  shift, and go to state 358

    $default  reduce using rule 223 (arith_expr)


State 234

  227 factor_seq: DIV_2 . factor

    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    factor   go to state 359
    power    go to state 112
    str_seq  go to state 113
    atom     go to state 114


State 235

  224 factor_seq: '*' . factor

    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    factor   go to state 360
    power    go to state 112
    str_seq  go to state 113
    atom     go to state 114


State 236

  225 factor_seq: '/' . factor

    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    factor   go to state 361
    power    go to state 112
    str_seq  go to state 113
    atom     go to state 114


State 237

  226 factor_seq: '%' . factor

    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    factor   go to state 362
    power    go to state 112
    str_seq  go to state 113
    atom     go to state 114


State 238

  228 factor_seq: factor_seq . '*' factor
  229           | factor_seq . '/' factor
  230           | factor_seq . '%' factor
  231           | factor_seq . DIV_2 factor
  233 term: factor factor_seq .

    DIV_2  shift, and go to state 363
    '*'    shift, and go to state 364
    '/'    shift, and go to state 365
    '%'    shift, and go to state 366

    $default  reduce using rule 233 (term)


State 239

  245 str_seq: str_seq STRING .

    $default  reduce using rule 245 (str_seq)


State 240

  243 power: atom STAR_2 . factor

    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    factor   go to state 367
    power    go to state 112
    str_seq  go to state 113
    atom     go to state 114


State 241

  279 trailer: '.' . NAME
  280        | '.' . NAME '(' ')'
  281        | '.' . NAME '(' arglist ')'
  282        | '.' . NAME '[' subscriptlist ']'

    NAME  shift, and go to state 368


State 242

  239 trailer_seq: trailer_seq . trailer
  241 power: atom trailer_seq .
  242      | atom trailer_seq . STAR_2 factor

    STAR_2  shift, and go to state 369
    '.'     shift, and go to state 241

    $default  reduce using rule 241 (power)

    trailer  go to state 370


State 243

  238 trailer_seq: trailer .

    $default  reduce using rule 238 (trailer_seq)


State 244

  105 dotted_name_seq: '.' NAME .

    $default  reduce using rule 105 (dotted_name_seq)


State 245

  106 dotted_name_seq: dotted_name_seq '.' . NAME

    NAME  shift, and go to state 371


State 246

   97 comma_dotted_as_name_seq: ',' dotted_as_name .

    $default  reduce using rule 97 (comma_dotted_as_name_seq)


State 247

   98 comma_dotted_as_name_seq: comma_dotted_as_name_seq ',' . dotted_as_name

    NAME  shift, and go to state 16

    dotted_as_name  go to state 372
    dotted_name     go to state 19


State 248

  102 dotted_as_name: dotted_name AS NAME .

    $default  reduce using rule 102 (dotted_as_name)


State 249

  349 classheader: CLASS NAME '(' ')' . ':'

    ':'  shift, and go to state 373


State 250

  365 classheader: CLASS NAME '(' dotted_as_names . ')' ':'

    ')'  shift, and go to state 374


State 251

  352 classheader: FINAL CLASS NAME '(' . ')' ':'
  368            | FINAL CLASS NAME '(' . dotted_as_names ')' ':'

    NAME  shift, and go to state 16
    ')'   shift, and go to state 375

    dotted_as_names  go to state 376
    dotted_as_name   go to state 18
    dotted_name      go to state 19


State 252

  336 classheader: FINAL CLASS NAME ':' .

    $default  reduce using rule 336 (classheader)


State 253

  338 classheader: FINAL STATIC CLASS NAME . ':'
  354            | FINAL STATIC CLASS NAME . '(' ')' ':'
  370            | FINAL STATIC CLASS NAME . '(' dotted_as_names ')' ':'

    '('  shift, and go to state 377
    ':'  shift, and go to state 378


State 254

  342 classheader: FINAL STATIC access CLASS . NAME ':'
  358            | FINAL STATIC access CLASS . NAME '(' ')' ':'
  374            | FINAL STATIC access CLASS . NAME '(' dotted_as_names ')' ':'

    NAME  shift, and go to state 379


State 255

  339 classheader: FINAL access CLASS NAME . ':'
  356            | FINAL access CLASS NAME . '(' ')' ':'
  372            | FINAL access CLASS NAME . '(' dotted_as_names ')' ':'

    '('  shift, and go to state 380
    ':'  shift, and go to state 381


State 256

  348 classheader: FINAL access STATIC CLASS . NAME ':'
  364            | FINAL access STATIC CLASS . NAME '(' ')' ':'
  380            | FINAL access STATIC CLASS . NAME '(' dotted_as_names ')' ':'

    NAME  shift, and go to state 382


State 257

  351 classheader: STATIC CLASS NAME '(' . ')' ':'
  367            | STATIC CLASS NAME '(' . dotted_as_names ')' ':'

    NAME  shift, and go to state 16
    ')'   shift, and go to state 383

    dotted_as_names  go to state 384
    dotted_as_name   go to state 18
    dotted_name      go to state 19


State 258

  335 classheader: STATIC CLASS NAME ':' .

    $default  reduce using rule 335 (classheader)


State 259

  337 classheader: STATIC FINAL CLASS NAME . ':'
  353            | STATIC FINAL CLASS NAME . '(' ')' ':'
  369            | STATIC FINAL CLASS NAME . '(' dotted_as_names ')' ':'

    '('  shift, and go to state 385
    ':'  shift, and go to state 386


State 260

  341 classheader: STATIC FINAL access CLASS . NAME ':'
  357            | STATIC FINAL access CLASS . NAME '(' ')' ':'
  373            | STATIC FINAL access CLASS . NAME '(' dotted_as_names ')' ':'

    NAME  shift, and go to state 387


State 261

  340 classheader: STATIC access CLASS NAME . ':'
  355            | STATIC access CLASS NAME . '(' ')' ':'
  371            | STATIC access CLASS NAME . '(' dotted_as_names ')' ':'

    '('  shift, and go to state 388
    ':'  shift, and go to state 389


State 262

  347 classheader: STATIC access FINAL CLASS . NAME ':'
  363            | STATIC access FINAL CLASS . NAME '(' ')' ':'
  379            | STATIC access FINAL CLASS . NAME '(' dotted_as_names ')' ':'

    NAME  shift, and go to state 390


State 263

  350 classheader: access CLASS NAME '(' . ')' ':'
  366            | access CLASS NAME '(' . dotted_as_names ')' ':'

    NAME  shift, and go to state 16
    ')'   shift, and go to state 391

    dotted_as_names  go to state 392
    dotted_as_name   go to state 18
    dotted_name      go to state 19


State 264

  334 classheader: access CLASS NAME ':' .

    $default  reduce using rule 334 (classheader)


State 265

  344 classheader: access FINAL CLASS NAME . ':'
  360            | access FINAL CLASS NAME . '(' ')' ':'
  376            | access FINAL CLASS NAME . '(' dotted_as_names ')' ':'

    '('  shift, and go to state 393
    ':'  shift, and go to state 394


State 266

  346 classheader: access FINAL STATIC CLASS . NAME ':'
  362            | access FINAL STATIC CLASS . NAME '(' ')' ':'
  378            | access FINAL STATIC CLASS . NAME '(' dotted_as_names ')' ':'

    NAME  shift, and go to state 395


State 267

  343 classheader: access STATIC CLASS NAME . ':'
  359            | access STATIC CLASS NAME . '(' ')' ':'
  375            | access STATIC CLASS NAME . '(' dotted_as_names ')' ':'

    '('  shift, and go to state 396
    ':'  shift, and go to state 397


State 268

  345 classheader: access STATIC FINAL CLASS . NAME ':'
  361            | access STATIC FINAL CLASS . NAME '(' ')' ':'
  377            | access STATIC FINAL CLASS . NAME '(' dotted_as_names ')' ':'

    NAME  shift, and go to state 398


State 269

   16 funcheader: DEF FINAL STATIC . NAME parameters ARROW test ':'
   18           | DEF FINAL STATIC . NAME parameters ':'
   24           | DEF FINAL STATIC . access NAME parameters ARROW test ':'
   26           | DEF FINAL STATIC . access NAME parameters ':'
  125 vardef: DEF FINAL STATIC . NAME
  129       | DEF FINAL STATIC . access NAME
  338 classheader: FINAL STATIC . CLASS NAME ':'
  342            | FINAL STATIC . access CLASS NAME ':'
  354            | FINAL STATIC . CLASS NAME '(' ')' ':'
  358            | FINAL STATIC . access CLASS NAME '(' ')' ':'
  370            | FINAL STATIC . CLASS NAME '(' dotted_as_names ')' ':'
  374            | FINAL STATIC . access CLASS NAME '(' dotted_as_names ')' ':'

    CLASS      shift, and go to state 123
    NAME       shift, and go to state 399
    PRIVATE    shift, and go to state 5
    PUBLIC     shift, and go to state 6
    PROTECTED  shift, and go to state 7

    access  go to state 400


State 270

   12 funcheader: DEF FINAL NAME . parameters ARROW test ':'
   14           | DEF FINAL NAME . parameters ':'
  123 vardef: DEF FINAL NAME .

    '('  shift, and go to state 275

    $default  reduce using rule 123 (vardef)

    parameters  go to state 401


State 271

   19 funcheader: DEF FINAL access . NAME parameters ARROW test ':'
   22           | DEF FINAL access . NAME parameters ':'
   36           | DEF FINAL access . STATIC NAME parameters ARROW test ':'
   38           | DEF FINAL access . STATIC NAME parameters ':'
  127 vardef: DEF FINAL access . NAME
  135       | DEF FINAL access . STATIC NAME
  339 classheader: FINAL access . CLASS NAME ':'
  348            | FINAL access . STATIC CLASS NAME ':'
  356            | FINAL access . CLASS NAME '(' ')' ':'
  364            | FINAL access . STATIC CLASS NAME '(' ')' ':'
  372            | FINAL access . CLASS NAME '(' dotted_as_names ')' ':'
  380            | FINAL access . STATIC CLASS NAME '(' dotted_as_names ')' ':'

    CLASS   shift, and go to state 125
    STATIC  shift, and go to state 402
    NAME    shift, and go to state 403


State 272

   15 funcheader: DEF STATIC FINAL . NAME parameters ARROW test ':'
   17           | DEF STATIC FINAL . NAME parameters ':'
   23           | DEF STATIC FINAL . access NAME parameters ARROW test ':'
   25           | DEF STATIC FINAL . access NAME parameters ':'
  124 vardef: DEF STATIC FINAL . NAME
  128       | DEF STATIC FINAL . access NAME
  337 classheader: STATIC FINAL . CLASS NAME ':'
  341            | STATIC FINAL . access CLASS NAME ':'
  353            | STATIC FINAL . CLASS NAME '(' ')' ':'
  357            | STATIC FINAL . access CLASS NAME '(' ')' ':'
  369            | STATIC FINAL . CLASS NAME '(' dotted_as_names ')' ':'
  373            | STATIC FINAL . access CLASS NAME '(' dotted_as_names ')' ':'

    CLASS      shift, and go to state 128
    NAME       shift, and go to state 404
    PRIVATE    shift, and go to state 5
    PUBLIC     shift, and go to state 6
    PROTECTED  shift, and go to state 7

    access  go to state 405


State 273

   11 funcheader: DEF STATIC NAME . parameters ARROW test ':'
   13           | DEF STATIC NAME . parameters ':'
  122 vardef: DEF STATIC NAME .

    '('  shift, and go to state 275

    $default  reduce using rule 122 (vardef)

    parameters  go to state 406


State 274

   20 funcheader: DEF STATIC access . NAME parameters ARROW test ':'
   21           | DEF STATIC access . NAME parameters ':'
   35           | DEF STATIC access . FINAL NAME parameters ARROW test ':'
   37           | DEF STATIC access . FINAL NAME parameters ':'
  126 vardef: DEF STATIC access . NAME
  134       | DEF STATIC access . FINAL NAME
  340 classheader: STATIC access . CLASS NAME ':'
  347            | STATIC access . FINAL CLASS NAME ':'
  355            | STATIC access . CLASS NAME '(' ')' ':'
  363            | STATIC access . FINAL CLASS NAME '(' ')' ':'
  371            | STATIC access . CLASS NAME '(' dotted_as_names ')' ':'
  379            | STATIC access . FINAL CLASS NAME '(' dotted_as_names ')' ':'

    CLASS  shift, and go to state 130
    FINAL  shift, and go to state 407
    NAME   shift, and go to state 408


State 275

   39 parameters: '(' . arglist ')'
   40           | '(' . ')'

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    STAR_2        shift, and go to state 288
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 289
    ')'           shift, and go to state 409
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    test           go to state 291
    or_test        go to state 100
    and_test       go to state 101
    not_test       go to state 102
    comparison     go to state 103
    expr           go to state 105
    xor_expr       go to state 106
    and_expr       go to state 107
    shift_expr     go to state 108
    arith_expr     go to state 109
    term           go to state 110
    factor         go to state 111
    power          go to state 112
    str_seq        go to state 113
    atom           go to state 114
    arg_comma_seq  go to state 292
    arglist        go to state 410
    default_arg    go to state 294
    argument       go to state 295


State 276

    7 funcheader: DEF NAME parameters . ARROW test ':'
    9           | DEF NAME parameters . ':'

    ARROW  shift, and go to state 411
    ':'    shift, and go to state 412


State 277

   28 funcheader: DEF access FINAL . NAME parameters ARROW test ':'
   30           | DEF access FINAL . NAME parameters ':'
   32           | DEF access FINAL . STATIC NAME parameters ARROW test ':'
   34           | DEF access FINAL . STATIC NAME parameters ':'
  131 vardef: DEF access FINAL . NAME
  133       | DEF access FINAL . STATIC NAME
  344 classheader: access FINAL . CLASS NAME ':'
  346            | access FINAL . STATIC CLASS NAME ':'
  360            | access FINAL . CLASS NAME '(' ')' ':'
  362            | access FINAL . STATIC CLASS NAME '(' ')' ':'
  376            | access FINAL . CLASS NAME '(' dotted_as_names ')' ':'
  378            | access FINAL . STATIC CLASS NAME '(' dotted_as_names ')' ':'

    CLASS   shift, and go to state 133
    STATIC  shift, and go to state 413
    NAME    shift, and go to state 414


State 278

   27 funcheader: DEF access STATIC . NAME parameters ARROW test ':'
   29           | DEF access STATIC . NAME parameters ':'
   31           | DEF access STATIC . FINAL NAME parameters ARROW test ':'
   33           | DEF access STATIC . FINAL NAME parameters ':'
  130 vardef: DEF access STATIC . NAME
  132       | DEF access STATIC . FINAL NAME
  343 classheader: access STATIC . CLASS NAME ':'
  345            | access STATIC . FINAL CLASS NAME ':'
  359            | access STATIC . CLASS NAME '(' ')' ':'
  361            | access STATIC . FINAL CLASS NAME '(' ')' ':'
  375            | access STATIC . CLASS NAME '(' dotted_as_names ')' ':'
  377            | access STATIC . FINAL CLASS NAME '(' dotted_as_names ')' ':'

    CLASS  shift, and go to state 135
    FINAL  shift, and go to state 415
    NAME   shift, and go to state 416


State 279

    8 funcheader: DEF access NAME . parameters ARROW test ':'
   10           | DEF access NAME . parameters ':'
  121 vardef: DEF access NAME .

    '('  shift, and go to state 275

    $default  reduce using rule 121 (vardef)

    parameters  go to state 417


State 280

  144 if_header: IF test ':' .

    $default  reduce using rule 144 (if_header)


State 281

  147 while_header: WHILE test ':' .

    $default  reduce using rule 147 (while_header)


State 282

  300 comma_expr_star_seq: ',' . expr
  301                    | ',' . star_expr
  310 exprlist: star_expr ',' .

    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    $default  reduce using rule 310 (exprlist)

    star_expr   go to state 418
    expr        go to state 419
    xor_expr    go to state 106
    and_expr    go to state 107
    shift_expr  go to state 108
    arith_expr  go to state 109
    term        go to state 110
    factor      go to state 111
    power       go to state 112
    str_seq     go to state 113
    atom        go to state 114


State 283

  302 comma_expr_star_seq: comma_expr_star_seq . ',' expr
  303                    | comma_expr_star_seq . ',' star_expr
  307 exprlist: star_expr comma_expr_star_seq .
  311         | star_expr comma_expr_star_seq . ','

    ','  shift, and go to state 420

    $default  reduce using rule 307 (exprlist)


State 284

  300 comma_expr_star_seq: ',' . expr
  301                    | ',' . star_expr
  308 exprlist: expr ',' .

    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    $default  reduce using rule 308 (exprlist)

    star_expr   go to state 418
    expr        go to state 419
    xor_expr    go to state 106
    and_expr    go to state 107
    shift_expr  go to state 108
    arith_expr  go to state 109
    term        go to state 110
    factor      go to state 111
    power       go to state 112
    str_seq     go to state 113
    atom        go to state 114


State 285

  302 comma_expr_star_seq: comma_expr_star_seq . ',' expr
  303                    | comma_expr_star_seq . ',' star_expr
  305 exprlist: expr comma_expr_star_seq .
  309         | expr comma_expr_star_seq . ','

    ','  shift, and go to state 421

    $default  reduce using rule 305 (exprlist)


State 286

  107 comma_name_seq: ',' . NAME

    NAME  shift, and go to state 422


State 287

  108 comma_name_seq: comma_name_seq . ',' NAME
  112 nonlocal_stmt: NONLOCAL NAME comma_name_seq .

    ','  shift, and go to state 423

    $default  reduce using rule 112 (nonlocal_stmt)


State 288

  394 arglist: STAR_2 . test

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    test        go to state 424
    or_test     go to state 100
    and_test    go to state 101
    not_test    go to state 102
    comparison  go to state 103
    expr        go to state 105
    xor_expr    go to state 106
    and_expr    go to state 107
    shift_expr  go to state 108
    arith_expr  go to state 109
    term        go to state 110
    factor      go to state 111
    power       go to state 112
    str_seq     go to state 113
    atom        go to state 114


State 289

  388 arglist: '*' . test
  389        | '*' . test ',' STAR_2 test
  390        | '*' . test comma_arg_seq
  391        | '*' . test comma_default_arg_seq
  392        | '*' . test comma_arg_seq comma_default_arg_seq
  393        | '*' . test comma_arg_seq ',' STAR_2 test

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    test        go to state 425
    or_test     go to state 100
    and_test    go to state 101
    not_test    go to state 102
    comparison  go to state 103
    expr        go to state 105
    xor_expr    go to state 106
    and_expr    go to state 107
    shift_expr  go to state 108
    arith_expr  go to state 109
    term        go to state 110
    factor      go to state 111
    power       go to state 112
    str_seq     go to state 113
    atom        go to state 114


State 290

  253 atom: NAME '(' ')' .

    $default  reduce using rule 253 (atom)


State 291

  410 default_arg: test . '=' test
  411 argument: test .
  412         | test . comp_for

    FOR  shift, and go to state 307
    '='  shift, and go to state 426

    $default  reduce using rule 411 (argument)

    comp_for  go to state 427


State 292

  382 arg_comma_seq: arg_comma_seq . argument ','
  395 arglist: arg_comma_seq . argument
  396        | arg_comma_seq . default_arg
  397        | arg_comma_seq . default_arg_comma_seq default_arg
  398        | arg_comma_seq . argument ','
  399        | arg_comma_seq . '*' test
  400        | arg_comma_seq . '*' test ',' STAR_2 test
  401        | arg_comma_seq . '*' test comma_arg_seq
  402        | arg_comma_seq . '*' test comma_default_arg_seq
  403        | arg_comma_seq . '*' test comma_arg_seq comma_default_arg_seq
  404        | arg_comma_seq . '*' test comma_arg_seq ',' STAR_2 test
  405        | arg_comma_seq . STAR_2 test

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    STAR_2        shift, and go to state 428
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 429
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    test                   go to state 291
    or_test                go to state 100
    and_test               go to state 101
    not_test               go to state 102
    comparison             go to state 103
    expr                   go to state 105
    xor_expr               go to state 106
    and_expr               go to state 107
    shift_expr             go to state 108
    arith_expr             go to state 109
    term                   go to state 110
    factor                 go to state 111
    power                  go to state 112
    str_seq                go to state 113
    atom                   go to state 114
    default_arg_comma_seq  go to state 430
    default_arg            go to state 431
    argument               go to state 432


State 293

  254 atom: NAME '(' arglist . ')'

    ')'  shift, and go to state 433


State 294

  386 arglist: default_arg .

    $default  reduce using rule 386 (arglist)


State 295

  381 arg_comma_seq: argument . ','
  385 arglist: argument .
  387        | argument . ','

    ','  shift, and go to state 434

    $default  reduce using rule 385 (arglist)


State 296

  290 subscript: ':' .
  295          | ':' . test
  296          | ':' . sliceop
  297          | ':' . test sliceop

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    ':'           shift, and go to state 435
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    $default  reduce using rule 290 (subscript)

    test        go to state 436
    or_test     go to state 100
    and_test    go to state 101
    not_test    go to state 102
    comparison  go to state 103
    expr        go to state 105
    xor_expr    go to state 106
    and_expr    go to state 107
    shift_expr  go to state 108
    arith_expr  go to state 109
    term        go to state 110
    factor      go to state 111
    power       go to state 112
    str_seq     go to state 113
    atom        go to state 114
    sliceop     go to state 437


State 297

  289 subscript: test .
  291          | test . ':'
  292          | test . ':' test
  293          | test . ':' sliceop
  294          | test . ':' test sliceop

    ':'  shift, and go to state 438

    $default  reduce using rule 289 (subscript)


State 298

  255 atom: NAME '[' subscriptlist . ']'

    ']'  shift, and go to state 439


State 299

  285 subscriptlist: subscript .
  286              | subscript . comma_subscript_seq
  287              | subscript . ','
  288              | subscript . comma_subscript_seq ','

    ','  shift, and go to state 440

    $default  reduce using rule 285 (subscriptlist)

    comma_subscript_seq  go to state 441


State 300

  159 with_seq: ',' . with_item

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    with_item   go to state 442
    test        go to state 154
    or_test     go to state 100
    and_test    go to state 101
    not_test    go to state 102
    comparison  go to state 103
    expr        go to state 105
    xor_expr    go to state 106
    and_expr    go to state 107
    shift_expr  go to state 108
    arith_expr  go to state 109
    term        go to state 110
    factor      go to state 111
    power       go to state 112
    str_seq     go to state 113
    atom        go to state 114


State 301

  161 with_stmt: WITH with_item ':' . suite

    IMPORT        shift, and go to state 1
    END           shift, and go to state 33
    NOT           shift, and go to state 34
    DEF           shift, and go to state 35
    IF            shift, and go to state 36
    WHILE         shift, and go to state 37
    FOR           shift, and go to state 38
    TRY           shift, and go to state 39
    NONLOCAL      shift, and go to state 40
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    WITH          shift, and go to state 48
    DEL           shift, and go to state 49
    RETURN        shift, and go to state 50
    PRINT         shift, and go to state 51
    GLOBAL        shift, and go to state 52
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    PASS          shift, and go to state 55
    CHAR_VALUE    shift, and go to state 56
    BREAK         shift, and go to state 57
    CONTINUE      shift, and go to state 58
    ','           shift, and go to state 59
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    funcdef               go to state 67
    funcheader            go to state 68
    stmt                  go to state 69
    simple_stmt           go to state 70
    small_stmt            go to state 71
    expr_stmt             go to state 72
    testlist_star_expr    go to state 73
    comma_test_star       go to state 74
    comma_test_star_seqJ  go to state 75
    print_stmt            go to state 76
    del_stmt              go to state 77
    pass_stmt             go to state 78
    flow_stmt             go to state 79
    break_stmt            go to state 80
    continue_stmt         go to state 81
    return_stmt           go to state 82
    import_stmt           go to state 83
    import_name           go to state 13
    global_stmt           go to state 84
    nonlocal_stmt         go to state 85
    compound_stmt         go to state 86
    vardef                go to state 87
    if_stmt               go to state 88
    if_header             go to state 89
    while_stmt            go to state 90
    while_header          go to state 91
    for_stmt              go to state 92
    for_header            go to state 93
    try_header            go to state 94
    try_stmt              go to state 95
    with_stmt             go to state 96
    list_stmt             go to state 97
    suite                 go to state 443
    test                  go to state 99
    or_test               go to state 100
    and_test              go to state 101
    not_test              go to state 102
    comparison            go to state 103
    star_expr             go to state 104
    expr                  go to state 105
    xor_expr              go to state 106
    and_expr              go to state 107
    shift_expr            go to state 108
    arith_expr            go to state 109
    term                  go to state 110
    factor                go to state 111
    power                 go to state 112
    str_seq               go to state 113
    atom                  go to state 114


State 302

  160 with_seq: with_seq . ',' with_item
  162 with_stmt: WITH with_item with_seq . ':' suite

    ','  shift, and go to state 444
    ':'  shift, and go to state 445


State 303

  164 with_item: test AS . expr

    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    expr        go to state 446
    xor_expr    go to state 106
    and_expr    go to state 107
    shift_expr  go to state 108
    arith_expr  go to state 109
    term        go to state 110
    factor      go to state 111
    power       go to state 112
    str_seq     go to state 113
    atom        go to state 114


State 304

  312 comma_test: ',' . test
  313           | ',' . test comma_test
  316 testlist: test ',' .

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    $default  reduce using rule 316 (testlist)

    test        go to state 447
    or_test     go to state 100
    and_test    go to state 101
    not_test    go to state 102
    comparison  go to state 103
    expr        go to state 105
    xor_expr    go to state 106
    and_expr    go to state 107
    shift_expr  go to state 108
    arith_expr  go to state 109
    term        go to state 110
    factor      go to state 111
    power       go to state 112
    str_seq     go to state 113
    atom        go to state 114


State 305

  315 testlist: test comma_test .
  317         | test comma_test . ','

    ','  shift, and go to state 448

    $default  reduce using rule 315 (testlist)


State 306

  108 comma_name_seq: comma_name_seq . ',' NAME
  110 global_stmt: GLOBAL NAME comma_name_seq .

    ','  shift, and go to state 423

    $default  reduce using rule 110 (global_stmt)


State 307

  415 comp_for: FOR . exprlist IN or_test
  416         | FOR . exprlist IN or_test comp_iter

    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    star_expr   go to state 146
    expr        go to state 147
    xor_expr    go to state 106
    and_expr    go to state 107
    shift_expr  go to state 108
    arith_expr  go to state 109
    term        go to state 110
    factor      go to state 111
    power       go to state 112
    str_seq     go to state 113
    atom        go to state 114
    exprlist    go to state 449


State 308

  265 comma_test_star_seq: ',' . test
  266                    | ',' . star_expr
  272 testlist_comp: test ',' .

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    $default  reduce using rule 272 (testlist_comp)

    test        go to state 450
    or_test     go to state 100
    and_test    go to state 101
    not_test    go to state 102
    comparison  go to state 103
    star_expr   go to state 451
    expr        go to state 105
    xor_expr    go to state 106
    and_expr    go to state 107
    shift_expr  go to state 108
    arith_expr  go to state 109
    term        go to state 110
    factor      go to state 111
    power       go to state 112
    str_seq     go to state 113
    atom        go to state 114


State 309

  267 comma_test_star_seq: comma_test_star_seq . ',' test
  268                    | comma_test_star_seq . ',' star_expr
  271 testlist_comp: test comma_test_star_seq .
  273              | test comma_test_star_seq . ','

    ','  shift, and go to state 452

    $default  reduce using rule 271 (testlist_comp)


State 310

  269 testlist_comp: test comp_for .

    $default  reduce using rule 269 (testlist_comp)


State 311

  265 comma_test_star_seq: ',' . test
  266                    | ',' . star_expr
  277 testlist_comp: star_expr ',' .

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    $default  reduce using rule 277 (testlist_comp)

    test        go to state 450
    or_test     go to state 100
    and_test    go to state 101
    not_test    go to state 102
    comparison  go to state 103
    star_expr   go to state 451
    expr        go to state 105
    xor_expr    go to state 106
    and_expr    go to state 107
    shift_expr  go to state 108
    arith_expr  go to state 109
    term        go to state 110
    factor      go to state 111
    power       go to state 112
    str_seq     go to state 113
    atom        go to state 114


State 312

  267 comma_test_star_seq: comma_test_star_seq . ',' test
  268                    | comma_test_star_seq . ',' star_expr
  276 testlist_comp: star_expr comma_test_star_seq .
  278              | star_expr comma_test_star_seq . ','

    ','  shift, and go to state 453

    $default  reduce using rule 276 (testlist_comp)


State 313

  274 testlist_comp: star_expr comp_for .

    $default  reduce using rule 274 (testlist_comp)


State 314

  247 atom: '(' testlist_comp ')' .

    $default  reduce using rule 247 (atom)


State 315

  250 atom: '[' testlist_comp ']' .

    $default  reduce using rule 250 (atom)


State 316

  320 comma_test_seq: ',' . test
  329 dictorsetmaker: test ',' .

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    $default  reduce using rule 329 (dictorsetmaker)

    test        go to state 454
    or_test     go to state 100
    and_test    go to state 101
    not_test    go to state 102
    comparison  go to state 103
    expr        go to state 105
    xor_expr    go to state 106
    and_expr    go to state 107
    shift_expr  go to state 108
    arith_expr  go to state 109
    term        go to state 110
    factor      go to state 111
    power       go to state 112
    str_seq     go to state 113
    atom        go to state 114


State 317

  322 dictorsetmaker: test ':' . test comp_for
  323               | test ':' . test
  324               | test ':' . test ','
  325               | test ':' . test comma_test_colon_test_seq
  326               | test ':' . test comma_test_colon_test_seq ','

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    test        go to state 455
    or_test     go to state 100
    and_test    go to state 101
    not_test    go to state 102
    comparison  go to state 103
    expr        go to state 105
    xor_expr    go to state 106
    and_expr    go to state 107
    shift_expr  go to state 108
    arith_expr  go to state 109
    term        go to state 110
    factor      go to state 111
    power       go to state 112
    str_seq     go to state 113
    atom        go to state 114


State 318

  321 comma_test_seq: comma_test_seq . ',' test
  330 dictorsetmaker: test comma_test_seq .
  331               | test comma_test_seq . ','

    ','  shift, and go to state 456

    $default  reduce using rule 330 (dictorsetmaker)


State 319

  327 dictorsetmaker: test comp_for .

    $default  reduce using rule 327 (dictorsetmaker)


State 320

  251 atom: '{' dictorsetmaker '}' .

    $default  reduce using rule 251 (atom)


State 321

   57 right_testlist: '=' testlist_star_expr . right_testlist
   58               | '=' testlist_star_expr .

    '='  shift, and go to state 189

    $default  reduce using rule 58 (right_testlist)

    right_testlist  go to state 457


State 322

   52 expr_stmt: testlist_star_expr augassign testlist .

    $default  reduce using rule 52 (expr_stmt)


State 323

  139 else_stmt: ELSE . ':'

    ':'  shift, and go to state 458


State 324

  138 elif_header: ELIF . test ':'

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    test        go to state 459
    or_test     go to state 100
    and_test    go to state 101
    not_test    go to state 102
    comparison  go to state 103
    expr        go to state 105
    xor_expr    go to state 106
    and_expr    go to state 107
    shift_expr  go to state 108
    arith_expr  go to state 109
    term        go to state 110
    factor      go to state 111
    power       go to state 112
    str_seq     go to state 113
    atom        go to state 114


State 325

  137 elif_seq: elif_seq . elif_header suite
  141 if_stmt: if_header suite elif_seq .
  143        | if_header suite elif_seq . else_stmt suite

    ELSE  shift, and go to state 323
    ELIF  shift, and go to state 324

    $default  reduce using rule 141 (if_stmt)

    elif_header  go to state 460
    else_stmt    go to state 461


State 326

  136 elif_seq: elif_header . suite

    IMPORT        shift, and go to state 1
    END           shift, and go to state 33
    NOT           shift, and go to state 34
    DEF           shift, and go to state 35
    IF            shift, and go to state 36
    WHILE         shift, and go to state 37
    FOR           shift, and go to state 38
    TRY           shift, and go to state 39
    NONLOCAL      shift, and go to state 40
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    WITH          shift, and go to state 48
    DEL           shift, and go to state 49
    RETURN        shift, and go to state 50
    PRINT         shift, and go to state 51
    GLOBAL        shift, and go to state 52
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    PASS          shift, and go to state 55
    CHAR_VALUE    shift, and go to state 56
    BREAK         shift, and go to state 57
    CONTINUE      shift, and go to state 58
    ','           shift, and go to state 59
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    funcdef               go to state 67
    funcheader            go to state 68
    stmt                  go to state 69
    simple_stmt           go to state 70
    small_stmt            go to state 71
    expr_stmt             go to state 72
    testlist_star_expr    go to state 73
    comma_test_star       go to state 74
    comma_test_star_seqJ  go to state 75
    print_stmt            go to state 76
    del_stmt              go to state 77
    pass_stmt             go to state 78
    flow_stmt             go to state 79
    break_stmt            go to state 80
    continue_stmt         go to state 81
    return_stmt           go to state 82
    import_stmt           go to state 83
    import_name           go to state 13
    global_stmt           go to state 84
    nonlocal_stmt         go to state 85
    compound_stmt         go to state 86
    vardef                go to state 87
    if_stmt               go to state 88
    if_header             go to state 89
    while_stmt            go to state 90
    while_header          go to state 91
    for_stmt              go to state 92
    for_header            go to state 93
    try_header            go to state 94
    try_stmt              go to state 95
    with_stmt             go to state 96
    list_stmt             go to state 97
    suite                 go to state 462
    test                  go to state 99
    or_test               go to state 100
    and_test              go to state 101
    not_test              go to state 102
    comparison            go to state 103
    star_expr             go to state 104
    expr                  go to state 105
    xor_expr              go to state 106
    and_expr              go to state 107
    shift_expr            go to state 108
    arith_expr            go to state 109
    term                  go to state 110
    factor                go to state 111
    power                 go to state 112
    str_seq               go to state 113
    atom                  go to state 114


State 327

  142 if_stmt: if_header suite else_stmt . suite

    IMPORT        shift, and go to state 1
    END           shift, and go to state 33
    NOT           shift, and go to state 34
    DEF           shift, and go to state 35
    IF            shift, and go to state 36
    WHILE         shift, and go to state 37
    FOR           shift, and go to state 38
    TRY           shift, and go to state 39
    NONLOCAL      shift, and go to state 40
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    WITH          shift, and go to state 48
    DEL           shift, and go to state 49
    RETURN        shift, and go to state 50
    PRINT         shift, and go to state 51
    GLOBAL        shift, and go to state 52
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    PASS          shift, and go to state 55
    CHAR_VALUE    shift, and go to state 56
    BREAK         shift, and go to state 57
    CONTINUE      shift, and go to state 58
    ','           shift, and go to state 59
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    funcdef               go to state 67
    funcheader            go to state 68
    stmt                  go to state 69
    simple_stmt           go to state 70
    small_stmt            go to state 71
    expr_stmt             go to state 72
    testlist_star_expr    go to state 73
    comma_test_star       go to state 74
    comma_test_star_seqJ  go to state 75
    print_stmt            go to state 76
    del_stmt              go to state 77
    pass_stmt             go to state 78
    flow_stmt             go to state 79
    break_stmt            go to state 80
    continue_stmt         go to state 81
    return_stmt           go to state 82
    import_stmt           go to state 83
    import_name           go to state 13
    global_stmt           go to state 84
    nonlocal_stmt         go to state 85
    compound_stmt         go to state 86
    vardef                go to state 87
    if_stmt               go to state 88
    if_header             go to state 89
    while_stmt            go to state 90
    while_header          go to state 91
    for_stmt              go to state 92
    for_header            go to state 93
    try_header            go to state 94
    try_stmt              go to state 95
    with_stmt             go to state 96
    list_stmt             go to state 97
    suite                 go to state 463
    test                  go to state 99
    or_test               go to state 100
    and_test              go to state 101
    not_test              go to state 102
    comparison            go to state 103
    star_expr             go to state 104
    expr                  go to state 105
    xor_expr              go to state 106
    and_expr              go to state 107
    shift_expr            go to state 108
    arith_expr            go to state 109
    term                  go to state 110
    factor                go to state 111
    power                 go to state 112
    str_seq               go to state 113
    atom                  go to state 114


State 328

  146 while_stmt: while_header suite ELSE . ':' suite

    ':'  shift, and go to state 464


State 329

  148 for_stmt: for_header IN testlist . ':' suite
  149         | for_header IN testlist . ':' suite ELSE ':' suite

    ':'  shift, and go to state 465


State 330

  156 finally_stmt: FINALLY . ':'

    ':'  shift, and go to state 466


State 331

  165 except_clause: EXCEPT .
  166              | EXCEPT . test
  167              | EXCEPT . test AS NAME

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    $default  reduce using rule 165 (except_clause)

    test        go to state 467
    or_test     go to state 100
    and_test    go to state 101
    not_test    go to state 102
    comparison  go to state 103
    expr        go to state 105
    xor_expr    go to state 106
    and_expr    go to state 107
    shift_expr  go to state 108
    arith_expr  go to state 109
    term        go to state 110
    factor      go to state 111
    power       go to state 112
    str_seq     go to state 113
    atom        go to state 114


State 332

  155 try_stmt: try_header suite finally_stmt . suite

    IMPORT        shift, and go to state 1
    END           shift, and go to state 33
    NOT           shift, and go to state 34
    DEF           shift, and go to state 35
    IF            shift, and go to state 36
    WHILE         shift, and go to state 37
    FOR           shift, and go to state 38
    TRY           shift, and go to state 39
    NONLOCAL      shift, and go to state 40
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    WITH          shift, and go to state 48
    DEL           shift, and go to state 49
    RETURN        shift, and go to state 50
    PRINT         shift, and go to state 51
    GLOBAL        shift, and go to state 52
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    PASS          shift, and go to state 55
    CHAR_VALUE    shift, and go to state 56
    BREAK         shift, and go to state 57
    CONTINUE      shift, and go to state 58
    ','           shift, and go to state 59
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    funcdef               go to state 67
    funcheader            go to state 68
    stmt                  go to state 69
    simple_stmt           go to state 70
    small_stmt            go to state 71
    expr_stmt             go to state 72
    testlist_star_expr    go to state 73
    comma_test_star       go to state 74
    comma_test_star_seqJ  go to state 75
    print_stmt            go to state 76
    del_stmt              go to state 77
    pass_stmt             go to state 78
    flow_stmt             go to state 79
    break_stmt            go to state 80
    continue_stmt         go to state 81
    return_stmt           go to state 82
    import_stmt           go to state 83
    import_name           go to state 13
    global_stmt           go to state 84
    nonlocal_stmt         go to state 85
    compound_stmt         go to state 86
    vardef                go to state 87
    if_stmt               go to state 88
    if_header             go to state 89
    while_stmt            go to state 90
    while_header          go to state 91
    for_stmt              go to state 92
    for_header            go to state 93
    try_header            go to state 94
    try_stmt              go to state 95
    with_stmt             go to state 96
    list_stmt             go to state 97
    suite                 go to state 468
    test                  go to state 99
    or_test               go to state 100
    and_test              go to state 101
    not_test              go to state 102
    comparison            go to state 103
    star_expr             go to state 104
    expr                  go to state 105
    xor_expr              go to state 106
    and_expr              go to state 107
    shift_expr            go to state 108
    arith_expr            go to state 109
    term                  go to state 110
    factor                go to state 111
    power                 go to state 112
    str_seq               go to state 113
    atom                  go to state 114


State 333

  152 try_stmt: try_header suite try_except_cla_seq .
  153         | try_header suite try_except_cla_seq . ELSE ':' suite
  154         | try_header suite try_except_cla_seq . finally_stmt suite
  158 try_except_cla_seq: try_except_cla_seq . except_clause ':' suite

    ELSE     shift, and go to state 469
    FINALLY  shift, and go to state 330
    EXCEPT   shift, and go to state 331

    $default  reduce using rule 152 (try_stmt)

    finally_stmt   go to state 470
    except_clause  go to state 471


State 334

  157 try_except_cla_seq: except_clause . ':' suite

    ':'  shift, and go to state 472


State 335

  173 test: or_test IF or_test . ELSE test

    ELSE  shift, and go to state 473


State 336

  174 or_seq: OR and_test .

    $default  reduce using rule 174 (or_seq)


State 337

  175 or_seq: or_seq OR . and_test

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    and_test    go to state 474
    not_test    go to state 102
    comparison  go to state 103
    expr        go to state 105
    xor_expr    go to state 106
    and_expr    go to state 107
    shift_expr  go to state 108
    arith_expr  go to state 109
    term        go to state 110
    factor      go to state 111
    power       go to state 112
    str_seq     go to state 113
    atom        go to state 114


State 338

  178 and_seq: AND not_test .

    $default  reduce using rule 178 (and_seq)


State 339

  179 and_seq: and_seq AND . not_test

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    not_test    go to state 475
    comparison  go to state 103
    expr        go to state 105
    xor_expr    go to state 106
    and_expr    go to state 107
    shift_expr  go to state 108
    arith_expr  go to state 109
    term        go to state 110
    factor      go to state 111
    power       go to state 112
    str_seq     go to state 113
    atom        go to state 114


State 340

   64 testlist_star_expr: star_expr comma_test_star_seqJ ',' .
   66 comma_test_star: ',' . test
   67                | ',' . star_expr

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    $default  reduce using rule 64 (testlist_star_expr)

    test        go to state 160
    or_test     go to state 100
    and_test    go to state 101
    not_test    go to state 102
    comparison  go to state 103
    star_expr   go to state 161
    expr        go to state 105
    xor_expr    go to state 106
    and_expr    go to state 107
    shift_expr  go to state 108
    arith_expr  go to state 109
    term        go to state 110
    factor      go to state 111
    power       go to state 112
    str_seq     go to state 113
    atom        go to state 114


State 341

  196 comp_op: NOT IN .

    $default  reduce using rule 196 (comp_op)


State 342

  198 comp_op: IS NOT .

    $default  reduce using rule 198 (comp_op)


State 343

  185 comp_op_seq: comp_op_seq comp_op . expr

    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    expr        go to state 476
    xor_expr    go to state 106
    and_expr    go to state 107
    shift_expr  go to state 108
    arith_expr  go to state 109
    term        go to state 110
    factor      go to state 111
    power       go to state 112
    str_seq     go to state 113
    atom        go to state 114


State 344

  184 comp_op_seq: comp_op expr .

    $default  reduce using rule 184 (comp_op_seq)


State 345

  200 or_xor_expr_seq: '|' xor_expr .

    $default  reduce using rule 200 (or_xor_expr_seq)


State 346

  201 or_xor_expr_seq: or_xor_expr_seq '|' . xor_expr

    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    xor_expr    go to state 477
    and_expr    go to state 107
    shift_expr  go to state 108
    arith_expr  go to state 109
    term        go to state 110
    factor      go to state 111
    power       go to state 112
    str_seq     go to state 113
    atom        go to state 114


State 347

  204 sha_and_expr_seq: '^' and_expr .

    $default  reduce using rule 204 (sha_and_expr_seq)


State 348

  205 sha_and_expr_seq: sha_and_expr_seq '^' . and_expr

    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    and_expr    go to state 478
    shift_expr  go to state 108
    arith_expr  go to state 109
    term        go to state 110
    factor      go to state 111
    power       go to state 112
    str_seq     go to state 113
    atom        go to state 114


State 349

  208 and_shift_expr_seq: '&' shift_expr .

    $default  reduce using rule 208 (and_shift_expr_seq)


State 350

  209 and_shift_expr_seq: and_shift_expr_seq '&' . shift_expr

    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    shift_expr  go to state 479
    arith_expr  go to state 109
    term        go to state 110
    factor      go to state 111
    power       go to state 112
    str_seq     go to state 113
    atom        go to state 114


State 351

  212 arith_seq: LESS_THAN_2 arith_expr .

    $default  reduce using rule 212 (arith_seq)


State 352

  213 arith_seq: MORE_THAN_2 arith_expr .

    $default  reduce using rule 213 (arith_seq)


State 353

  214 arith_seq: arith_seq LESS_THAN_2 . arith_expr

    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    arith_expr  go to state 480
    term        go to state 110
    factor      go to state 111
    power       go to state 112
    str_seq     go to state 113
    atom        go to state 114


State 354

  215 arith_seq: arith_seq MORE_THAN_2 . arith_expr

    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    arith_expr  go to state 481
    term        go to state 110
    factor      go to state 111
    power       go to state 112
    str_seq     go to state 113
    atom        go to state 114


State 355

  218 term_seq: '+' term .

    $default  reduce using rule 218 (term_seq)


State 356

  219 term_seq: '-' term .

    $default  reduce using rule 219 (term_seq)


State 357

  220 term_seq: term_seq '+' . term

    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    term     go to state 482
    factor   go to state 111
    power    go to state 112
    str_seq  go to state 113
    atom     go to state 114


State 358

  221 term_seq: term_seq '-' . term

    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    term     go to state 483
    factor   go to state 111
    power    go to state 112
    str_seq  go to state 113
    atom     go to state 114


State 359

  227 factor_seq: DIV_2 factor .

    $default  reduce using rule 227 (factor_seq)


State 360

  224 factor_seq: '*' factor .

    $default  reduce using rule 224 (factor_seq)


State 361

  225 factor_seq: '/' factor .

    $default  reduce using rule 225 (factor_seq)


State 362

  226 factor_seq: '%' factor .

    $default  reduce using rule 226 (factor_seq)


State 363

  231 factor_seq: factor_seq DIV_2 . factor

    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    factor   go to state 484
    power    go to state 112
    str_seq  go to state 113
    atom     go to state 114


State 364

  228 factor_seq: factor_seq '*' . factor

    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    factor   go to state 485
    power    go to state 112
    str_seq  go to state 113
    atom     go to state 114


State 365

  229 factor_seq: factor_seq '/' . factor

    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    factor   go to state 486
    power    go to state 112
    str_seq  go to state 113
    atom     go to state 114


State 366

  230 factor_seq: factor_seq '%' . factor

    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    factor   go to state 487
    power    go to state 112
    str_seq  go to state 113
    atom     go to state 114


State 367

  243 power: atom STAR_2 factor .

    $default  reduce using rule 243 (power)


State 368

  279 trailer: '.' NAME .
  280        | '.' NAME . '(' ')'
  281        | '.' NAME . '(' arglist ')'
  282        | '.' NAME . '[' subscriptlist ']'

    '('  shift, and go to state 488
    '['  shift, and go to state 489

    $default  reduce using rule 279 (trailer)


State 369

  242 power: atom trailer_seq STAR_2 . factor

    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    factor   go to state 490
    power    go to state 112
    str_seq  go to state 113
    atom     go to state 114


State 370

  239 trailer_seq: trailer_seq trailer .

    $default  reduce using rule 239 (trailer_seq)


State 371

  106 dotted_name_seq: dotted_name_seq '.' NAME .

    $default  reduce using rule 106 (dotted_name_seq)


State 372

   98 comma_dotted_as_name_seq: comma_dotted_as_name_seq ',' dotted_as_name .

    $default  reduce using rule 98 (comma_dotted_as_name_seq)


State 373

  349 classheader: CLASS NAME '(' ')' ':' .

    $default  reduce using rule 349 (classheader)


State 374

  365 classheader: CLASS NAME '(' dotted_as_names ')' . ':'

    ':'  shift, and go to state 491


State 375

  352 classheader: FINAL CLASS NAME '(' ')' . ':'

    ':'  shift, and go to state 492


State 376

  368 classheader: FINAL CLASS NAME '(' dotted_as_names . ')' ':'

    ')'  shift, and go to state 493


State 377

  354 classheader: FINAL STATIC CLASS NAME '(' . ')' ':'
  370            | FINAL STATIC CLASS NAME '(' . dotted_as_names ')' ':'

    NAME  shift, and go to state 16
    ')'   shift, and go to state 494

    dotted_as_names  go to state 495
    dotted_as_name   go to state 18
    dotted_name      go to state 19


State 378

  338 classheader: FINAL STATIC CLASS NAME ':' .

    $default  reduce using rule 338 (classheader)


State 379

  342 classheader: FINAL STATIC access CLASS NAME . ':'
  358            | FINAL STATIC access CLASS NAME . '(' ')' ':'
  374            | FINAL STATIC access CLASS NAME . '(' dotted_as_names ')' ':'

    '('  shift, and go to state 496
    ':'  shift, and go to state 497


State 380

  356 classheader: FINAL access CLASS NAME '(' . ')' ':'
  372            | FINAL access CLASS NAME '(' . dotted_as_names ')' ':'

    NAME  shift, and go to state 16
    ')'   shift, and go to state 498

    dotted_as_names  go to state 499
    dotted_as_name   go to state 18
    dotted_name      go to state 19


State 381

  339 classheader: FINAL access CLASS NAME ':' .

    $default  reduce using rule 339 (classheader)


State 382

  348 classheader: FINAL access STATIC CLASS NAME . ':'
  364            | FINAL access STATIC CLASS NAME . '(' ')' ':'
  380            | FINAL access STATIC CLASS NAME . '(' dotted_as_names ')' ':'

    '('  shift, and go to state 500
    ':'  shift, and go to state 501


State 383

  351 classheader: STATIC CLASS NAME '(' ')' . ':'

    ':'  shift, and go to state 502


State 384

  367 classheader: STATIC CLASS NAME '(' dotted_as_names . ')' ':'

    ')'  shift, and go to state 503


State 385

  353 classheader: STATIC FINAL CLASS NAME '(' . ')' ':'
  369            | STATIC FINAL CLASS NAME '(' . dotted_as_names ')' ':'

    NAME  shift, and go to state 16
    ')'   shift, and go to state 504

    dotted_as_names  go to state 505
    dotted_as_name   go to state 18
    dotted_name      go to state 19


State 386

  337 classheader: STATIC FINAL CLASS NAME ':' .

    $default  reduce using rule 337 (classheader)


State 387

  341 classheader: STATIC FINAL access CLASS NAME . ':'
  357            | STATIC FINAL access CLASS NAME . '(' ')' ':'
  373            | STATIC FINAL access CLASS NAME . '(' dotted_as_names ')' ':'

    '('  shift, and go to state 506
    ':'  shift, and go to state 507


State 388

  355 classheader: STATIC access CLASS NAME '(' . ')' ':'
  371            | STATIC access CLASS NAME '(' . dotted_as_names ')' ':'

    NAME  shift, and go to state 16
    ')'   shift, and go to state 508

    dotted_as_names  go to state 509
    dotted_as_name   go to state 18
    dotted_name      go to state 19


State 389

  340 classheader: STATIC access CLASS NAME ':' .

    $default  reduce using rule 340 (classheader)


State 390

  347 classheader: STATIC access FINAL CLASS NAME . ':'
  363            | STATIC access FINAL CLASS NAME . '(' ')' ':'
  379            | STATIC access FINAL CLASS NAME . '(' dotted_as_names ')' ':'

    '('  shift, and go to state 510
    ':'  shift, and go to state 511


State 391

  350 classheader: access CLASS NAME '(' ')' . ':'

    ':'  shift, and go to state 512


State 392

  366 classheader: access CLASS NAME '(' dotted_as_names . ')' ':'

    ')'  shift, and go to state 513


State 393

  360 classheader: access FINAL CLASS NAME '(' . ')' ':'
  376            | access FINAL CLASS NAME '(' . dotted_as_names ')' ':'

    NAME  shift, and go to state 16
    ')'   shift, and go to state 514

    dotted_as_names  go to state 515
    dotted_as_name   go to state 18
    dotted_name      go to state 19


State 394

  344 classheader: access FINAL CLASS NAME ':' .

    $default  reduce using rule 344 (classheader)


State 395

  346 classheader: access FINAL STATIC CLASS NAME . ':'
  362            | access FINAL STATIC CLASS NAME . '(' ')' ':'
  378            | access FINAL STATIC CLASS NAME . '(' dotted_as_names ')' ':'

    '('  shift, and go to state 516
    ':'  shift, and go to state 517


State 396

  359 classheader: access STATIC CLASS NAME '(' . ')' ':'
  375            | access STATIC CLASS NAME '(' . dotted_as_names ')' ':'

    NAME  shift, and go to state 16
    ')'   shift, and go to state 518

    dotted_as_names  go to state 519
    dotted_as_name   go to state 18
    dotted_name      go to state 19


State 397

  343 classheader: access STATIC CLASS NAME ':' .

    $default  reduce using rule 343 (classheader)


State 398

  345 classheader: access STATIC FINAL CLASS NAME . ':'
  361            | access STATIC FINAL CLASS NAME . '(' ')' ':'
  377            | access STATIC FINAL CLASS NAME . '(' dotted_as_names ')' ':'

    '('  shift, and go to state 520
    ':'  shift, and go to state 521


State 399

   16 funcheader: DEF FINAL STATIC NAME . parameters ARROW test ':'
   18           | DEF FINAL STATIC NAME . parameters ':'
  125 vardef: DEF FINAL STATIC NAME .

    '('  shift, and go to state 275

    $default  reduce using rule 125 (vardef)

    parameters  go to state 522


State 400

   24 funcheader: DEF FINAL STATIC access . NAME parameters ARROW test ':'
   26           | DEF FINAL STATIC access . NAME parameters ':'
  129 vardef: DEF FINAL STATIC access . NAME
  342 classheader: FINAL STATIC access . CLASS NAME ':'
  358            | FINAL STATIC access . CLASS NAME '(' ')' ':'
  374            | FINAL STATIC access . CLASS NAME '(' dotted_as_names ')' ':'

    CLASS  shift, and go to state 254
    NAME   shift, and go to state 523


State 401

   12 funcheader: DEF FINAL NAME parameters . ARROW test ':'
   14           | DEF FINAL NAME parameters . ':'

    ARROW  shift, and go to state 524
    ':'    shift, and go to state 525


State 402

   36 funcheader: DEF FINAL access STATIC . NAME parameters ARROW test ':'
   38           | DEF FINAL access STATIC . NAME parameters ':'
  135 vardef: DEF FINAL access STATIC . NAME
  348 classheader: FINAL access STATIC . CLASS NAME ':'
  364            | FINAL access STATIC . CLASS NAME '(' ')' ':'
  380            | FINAL access STATIC . CLASS NAME '(' dotted_as_names ')' ':'

    CLASS  shift, and go to state 256
    NAME   shift, and go to state 526


State 403

   19 funcheader: DEF FINAL access NAME . parameters ARROW test ':'
   22           | DEF FINAL access NAME . parameters ':'
  127 vardef: DEF FINAL access NAME .

    '('  shift, and go to state 275

    $default  reduce using rule 127 (vardef)

    parameters  go to state 527


State 404

   15 funcheader: DEF STATIC FINAL NAME . parameters ARROW test ':'
   17           | DEF STATIC FINAL NAME . parameters ':'
  124 vardef: DEF STATIC FINAL NAME .

    '('  shift, and go to state 275

    $default  reduce using rule 124 (vardef)

    parameters  go to state 528


State 405

   23 funcheader: DEF STATIC FINAL access . NAME parameters ARROW test ':'
   25           | DEF STATIC FINAL access . NAME parameters ':'
  128 vardef: DEF STATIC FINAL access . NAME
  341 classheader: STATIC FINAL access . CLASS NAME ':'
  357            | STATIC FINAL access . CLASS NAME '(' ')' ':'
  373            | STATIC FINAL access . CLASS NAME '(' dotted_as_names ')' ':'

    CLASS  shift, and go to state 260
    NAME   shift, and go to state 529


State 406

   11 funcheader: DEF STATIC NAME parameters . ARROW test ':'
   13           | DEF STATIC NAME parameters . ':'

    ARROW  shift, and go to state 530
    ':'    shift, and go to state 531


State 407

   35 funcheader: DEF STATIC access FINAL . NAME parameters ARROW test ':'
   37           | DEF STATIC access FINAL . NAME parameters ':'
  134 vardef: DEF STATIC access FINAL . NAME
  347 classheader: STATIC access FINAL . CLASS NAME ':'
  363            | STATIC access FINAL . CLASS NAME '(' ')' ':'
  379            | STATIC access FINAL . CLASS NAME '(' dotted_as_names ')' ':'

    CLASS  shift, and go to state 262
    NAME   shift, and go to state 532


State 408

   20 funcheader: DEF STATIC access NAME . parameters ARROW test ':'
   21           | DEF STATIC access NAME . parameters ':'
  126 vardef: DEF STATIC access NAME .

    '('  shift, and go to state 275

    $default  reduce using rule 126 (vardef)

    parameters  go to state 533


State 409

   40 parameters: '(' ')' .

    $default  reduce using rule 40 (parameters)


State 410

   39 parameters: '(' arglist . ')'

    ')'  shift, and go to state 534


State 411

    7 funcheader: DEF NAME parameters ARROW . test ':'

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    test        go to state 535
    or_test     go to state 100
    and_test    go to state 101
    not_test    go to state 102
    comparison  go to state 103
    expr        go to state 105
    xor_expr    go to state 106
    and_expr    go to state 107
    shift_expr  go to state 108
    arith_expr  go to state 109
    term        go to state 110
    factor      go to state 111
    power       go to state 112
    str_seq     go to state 113
    atom        go to state 114


State 412

    9 funcheader: DEF NAME parameters ':' .

    $default  reduce using rule 9 (funcheader)


State 413

   32 funcheader: DEF access FINAL STATIC . NAME parameters ARROW test ':'
   34           | DEF access FINAL STATIC . NAME parameters ':'
  133 vardef: DEF access FINAL STATIC . NAME
  346 classheader: access FINAL STATIC . CLASS NAME ':'
  362            | access FINAL STATIC . CLASS NAME '(' ')' ':'
  378            | access FINAL STATIC . CLASS NAME '(' dotted_as_names ')' ':'

    CLASS  shift, and go to state 266
    NAME   shift, and go to state 536


State 414

   28 funcheader: DEF access FINAL NAME . parameters ARROW test ':'
   30           | DEF access FINAL NAME . parameters ':'
  131 vardef: DEF access FINAL NAME .

    '('  shift, and go to state 275

    $default  reduce using rule 131 (vardef)

    parameters  go to state 537


State 415

   31 funcheader: DEF access STATIC FINAL . NAME parameters ARROW test ':'
   33           | DEF access STATIC FINAL . NAME parameters ':'
  132 vardef: DEF access STATIC FINAL . NAME
  345 classheader: access STATIC FINAL . CLASS NAME ':'
  361            | access STATIC FINAL . CLASS NAME '(' ')' ':'
  377            | access STATIC FINAL . CLASS NAME '(' dotted_as_names ')' ':'

    CLASS  shift, and go to state 268
    NAME   shift, and go to state 538


State 416

   27 funcheader: DEF access STATIC NAME . parameters ARROW test ':'
   29           | DEF access STATIC NAME . parameters ':'
  130 vardef: DEF access STATIC NAME .

    '('  shift, and go to state 275

    $default  reduce using rule 130 (vardef)

    parameters  go to state 539


State 417

    8 funcheader: DEF access NAME parameters . ARROW test ':'
   10           | DEF access NAME parameters . ':'

    ARROW  shift, and go to state 540
    ':'    shift, and go to state 541


State 418

  301 comma_expr_star_seq: ',' star_expr .

    $default  reduce using rule 301 (comma_expr_star_seq)


State 419

  300 comma_expr_star_seq: ',' expr .

    $default  reduce using rule 300 (comma_expr_star_seq)


State 420

  302 comma_expr_star_seq: comma_expr_star_seq ',' . expr
  303                    | comma_expr_star_seq ',' . star_expr
  311 exprlist: star_expr comma_expr_star_seq ',' .

    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    $default  reduce using rule 311 (exprlist)

    star_expr   go to state 542
    expr        go to state 543
    xor_expr    go to state 106
    and_expr    go to state 107
    shift_expr  go to state 108
    arith_expr  go to state 109
    term        go to state 110
    factor      go to state 111
    power       go to state 112
    str_seq     go to state 113
    atom        go to state 114


State 421

  302 comma_expr_star_seq: comma_expr_star_seq ',' . expr
  303                    | comma_expr_star_seq ',' . star_expr
  309 exprlist: expr comma_expr_star_seq ',' .

    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    $default  reduce using rule 309 (exprlist)

    star_expr   go to state 542
    expr        go to state 543
    xor_expr    go to state 106
    and_expr    go to state 107
    shift_expr  go to state 108
    arith_expr  go to state 109
    term        go to state 110
    factor      go to state 111
    power       go to state 112
    str_seq     go to state 113
    atom        go to state 114


State 422

  107 comma_name_seq: ',' NAME .

    $default  reduce using rule 107 (comma_name_seq)


State 423

  108 comma_name_seq: comma_name_seq ',' . NAME

    NAME  shift, and go to state 544


State 424

  394 arglist: STAR_2 test .

    $default  reduce using rule 394 (arglist)


State 425

  388 arglist: '*' test .
  389        | '*' test . ',' STAR_2 test
  390        | '*' test . comma_arg_seq
  391        | '*' test . comma_default_arg_seq
  392        | '*' test . comma_arg_seq comma_default_arg_seq
  393        | '*' test . comma_arg_seq ',' STAR_2 test

    ','  shift, and go to state 545

    $default  reduce using rule 388 (arglist)

    comma_arg_seq          go to state 546
    comma_default_arg_seq  go to state 547


State 426

  410 default_arg: test '=' . test

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    test        go to state 548
    or_test     go to state 100
    and_test    go to state 101
    not_test    go to state 102
    comparison  go to state 103
    expr        go to state 105
    xor_expr    go to state 106
    and_expr    go to state 107
    shift_expr  go to state 108
    arith_expr  go to state 109
    term        go to state 110
    factor      go to state 111
    power       go to state 112
    str_seq     go to state 113
    atom        go to state 114


State 427

  412 argument: test comp_for .

    $default  reduce using rule 412 (argument)


State 428

  405 arglist: arg_comma_seq STAR_2 . test

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    test        go to state 549
    or_test     go to state 100
    and_test    go to state 101
    not_test    go to state 102
    comparison  go to state 103
    expr        go to state 105
    xor_expr    go to state 106
    and_expr    go to state 107
    shift_expr  go to state 108
    arith_expr  go to state 109
    term        go to state 110
    factor      go to state 111
    power       go to state 112
    str_seq     go to state 113
    atom        go to state 114


State 429

  399 arglist: arg_comma_seq '*' . test
  400        | arg_comma_seq '*' . test ',' STAR_2 test
  401        | arg_comma_seq '*' . test comma_arg_seq
  402        | arg_comma_seq '*' . test comma_default_arg_seq
  403        | arg_comma_seq '*' . test comma_arg_seq comma_default_arg_seq
  404        | arg_comma_seq '*' . test comma_arg_seq ',' STAR_2 test

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    test        go to state 550
    or_test     go to state 100
    and_test    go to state 101
    not_test    go to state 102
    comparison  go to state 103
    expr        go to state 105
    xor_expr    go to state 106
    and_expr    go to state 107
    shift_expr  go to state 108
    arith_expr  go to state 109
    term        go to state 110
    factor      go to state 111
    power       go to state 112
    str_seq     go to state 113
    atom        go to state 114


State 430

  397 arglist: arg_comma_seq default_arg_comma_seq . default_arg
  409 default_arg_comma_seq: default_arg_comma_seq . default_arg ','

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    test         go to state 551
    or_test      go to state 100
    and_test     go to state 101
    not_test     go to state 102
    comparison   go to state 103
    expr         go to state 105
    xor_expr     go to state 106
    and_expr     go to state 107
    shift_expr   go to state 108
    arith_expr   go to state 109
    term         go to state 110
    factor       go to state 111
    power        go to state 112
    str_seq      go to state 113
    atom         go to state 114
    default_arg  go to state 552


State 431

  396 arglist: arg_comma_seq default_arg .
  408 default_arg_comma_seq: default_arg . ','

    ','  shift, and go to state 553

    $default  reduce using rule 396 (arglist)


State 432

  382 arg_comma_seq: arg_comma_seq argument . ','
  395 arglist: arg_comma_seq argument .
  398        | arg_comma_seq argument . ','

    ','  shift, and go to state 554

    $default  reduce using rule 395 (arglist)


State 433

  254 atom: NAME '(' arglist ')' .

    $default  reduce using rule 254 (atom)


State 434

  381 arg_comma_seq: argument ',' .
  387 arglist: argument ',' .

    ')'       reduce using rule 387 (arglist)
    $default  reduce using rule 381 (arg_comma_seq)


State 435

  298 sliceop: ':' .
  299        | ':' . test

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    $default  reduce using rule 298 (sliceop)

    test        go to state 555
    or_test     go to state 100
    and_test    go to state 101
    not_test    go to state 102
    comparison  go to state 103
    expr        go to state 105
    xor_expr    go to state 106
    and_expr    go to state 107
    shift_expr  go to state 108
    arith_expr  go to state 109
    term        go to state 110
    factor      go to state 111
    power       go to state 112
    str_seq     go to state 113
    atom        go to state 114


State 436

  295 subscript: ':' test .
  297          | ':' test . sliceop

    ':'  shift, and go to state 435

    $default  reduce using rule 295 (subscript)

    sliceop  go to state 556


State 437

  296 subscript: ':' sliceop .

    $default  reduce using rule 296 (subscript)


State 438

  291 subscript: test ':' .
  292          | test ':' . test
  293          | test ':' . sliceop
  294          | test ':' . test sliceop

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    ':'           shift, and go to state 435
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    $default  reduce using rule 291 (subscript)

    test        go to state 557
    or_test     go to state 100
    and_test    go to state 101
    not_test    go to state 102
    comparison  go to state 103
    expr        go to state 105
    xor_expr    go to state 106
    and_expr    go to state 107
    shift_expr  go to state 108
    arith_expr  go to state 109
    term        go to state 110
    factor      go to state 111
    power       go to state 112
    str_seq     go to state 113
    atom        go to state 114
    sliceop     go to state 558


State 439

  255 atom: NAME '[' subscriptlist ']' .

    $default  reduce using rule 255 (atom)


State 440

  283 comma_subscript_seq: ',' . subscript
  287 subscriptlist: subscript ',' .

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    ':'           shift, and go to state 296
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    $default  reduce using rule 287 (subscriptlist)

    test        go to state 297
    or_test     go to state 100
    and_test    go to state 101
    not_test    go to state 102
    comparison  go to state 103
    expr        go to state 105
    xor_expr    go to state 106
    and_expr    go to state 107
    shift_expr  go to state 108
    arith_expr  go to state 109
    term        go to state 110
    factor      go to state 111
    power       go to state 112
    str_seq     go to state 113
    atom        go to state 114
    subscript   go to state 559


State 441

  284 comma_subscript_seq: comma_subscript_seq . ',' subscript
  286 subscriptlist: subscript comma_subscript_seq .
  288              | subscript comma_subscript_seq . ','

    ','  shift, and go to state 560

    $default  reduce using rule 286 (subscriptlist)


State 442

  159 with_seq: ',' with_item .

    $default  reduce using rule 159 (with_seq)


State 443

  161 with_stmt: WITH with_item ':' suite .

    $default  reduce using rule 161 (with_stmt)


State 444

  160 with_seq: with_seq ',' . with_item

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    with_item   go to state 561
    test        go to state 154
    or_test     go to state 100
    and_test    go to state 101
    not_test    go to state 102
    comparison  go to state 103
    expr        go to state 105
    xor_expr    go to state 106
    and_expr    go to state 107
    shift_expr  go to state 108
    arith_expr  go to state 109
    term        go to state 110
    factor      go to state 111
    power       go to state 112
    str_seq     go to state 113
    atom        go to state 114


State 445

  162 with_stmt: WITH with_item with_seq ':' . suite

    IMPORT        shift, and go to state 1
    END           shift, and go to state 33
    NOT           shift, and go to state 34
    DEF           shift, and go to state 35
    IF            shift, and go to state 36
    WHILE         shift, and go to state 37
    FOR           shift, and go to state 38
    TRY           shift, and go to state 39
    NONLOCAL      shift, and go to state 40
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    WITH          shift, and go to state 48
    DEL           shift, and go to state 49
    RETURN        shift, and go to state 50
    PRINT         shift, and go to state 51
    GLOBAL        shift, and go to state 52
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    PASS          shift, and go to state 55
    CHAR_VALUE    shift, and go to state 56
    BREAK         shift, and go to state 57
    CONTINUE      shift, and go to state 58
    ','           shift, and go to state 59
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    funcdef               go to state 67
    funcheader            go to state 68
    stmt                  go to state 69
    simple_stmt           go to state 70
    small_stmt            go to state 71
    expr_stmt             go to state 72
    testlist_star_expr    go to state 73
    comma_test_star       go to state 74
    comma_test_star_seqJ  go to state 75
    print_stmt            go to state 76
    del_stmt              go to state 77
    pass_stmt             go to state 78
    flow_stmt             go to state 79
    break_stmt            go to state 80
    continue_stmt         go to state 81
    return_stmt           go to state 82
    import_stmt           go to state 83
    import_name           go to state 13
    global_stmt           go to state 84
    nonlocal_stmt         go to state 85
    compound_stmt         go to state 86
    vardef                go to state 87
    if_stmt               go to state 88
    if_header             go to state 89
    while_stmt            go to state 90
    while_header          go to state 91
    for_stmt              go to state 92
    for_header            go to state 93
    try_header            go to state 94
    try_stmt              go to state 95
    with_stmt             go to state 96
    list_stmt             go to state 97
    suite                 go to state 562
    test                  go to state 99
    or_test               go to state 100
    and_test              go to state 101
    not_test              go to state 102
    comparison            go to state 103
    star_expr             go to state 104
    expr                  go to state 105
    xor_expr              go to state 106
    and_expr              go to state 107
    shift_expr            go to state 108
    arith_expr            go to state 109
    term                  go to state 110
    factor                go to state 111
    power                 go to state 112
    str_seq               go to state 113
    atom                  go to state 114


State 446

  164 with_item: test AS expr .

    $default  reduce using rule 164 (with_item)


State 447

  312 comma_test: ',' test .
  313           | ',' test . comma_test

    ','  error (nonassociative)

    $default  reduce using rule 312 (comma_test)

    comma_test  go to state 563


State 448

  317 testlist: test comma_test ',' .

    $default  reduce using rule 317 (testlist)


State 449

  415 comp_for: FOR exprlist . IN or_test
  416         | FOR exprlist . IN or_test comp_iter

    IN  shift, and go to state 564


State 450

  265 comma_test_star_seq: ',' test .

    $default  reduce using rule 265 (comma_test_star_seq)


State 451

  266 comma_test_star_seq: ',' star_expr .

    $default  reduce using rule 266 (comma_test_star_seq)


State 452

  267 comma_test_star_seq: comma_test_star_seq ',' . test
  268                    | comma_test_star_seq ',' . star_expr
  273 testlist_comp: test comma_test_star_seq ',' .

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    $default  reduce using rule 273 (testlist_comp)

    test        go to state 565
    or_test     go to state 100
    and_test    go to state 101
    not_test    go to state 102
    comparison  go to state 103
    star_expr   go to state 566
    expr        go to state 105
    xor_expr    go to state 106
    and_expr    go to state 107
    shift_expr  go to state 108
    arith_expr  go to state 109
    term        go to state 110
    factor      go to state 111
    power       go to state 112
    str_seq     go to state 113
    atom        go to state 114


State 453

  267 comma_test_star_seq: comma_test_star_seq ',' . test
  268                    | comma_test_star_seq ',' . star_expr
  278 testlist_comp: star_expr comma_test_star_seq ',' .

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    $default  reduce using rule 278 (testlist_comp)

    test        go to state 565
    or_test     go to state 100
    and_test    go to state 101
    not_test    go to state 102
    comparison  go to state 103
    star_expr   go to state 566
    expr        go to state 105
    xor_expr    go to state 106
    and_expr    go to state 107
    shift_expr  go to state 108
    arith_expr  go to state 109
    term        go to state 110
    factor      go to state 111
    power       go to state 112
    str_seq     go to state 113
    atom        go to state 114


State 454

  320 comma_test_seq: ',' test .

    $default  reduce using rule 320 (comma_test_seq)


State 455

  322 dictorsetmaker: test ':' test . comp_for
  323               | test ':' test .
  324               | test ':' test . ','
  325               | test ':' test . comma_test_colon_test_seq
  326               | test ':' test . comma_test_colon_test_seq ','

    FOR  shift, and go to state 307
    ','  shift, and go to state 567

    $default  reduce using rule 323 (dictorsetmaker)

    comma_test_colon_test_seq  go to state 568
    comp_for                   go to state 569


State 456

  321 comma_test_seq: comma_test_seq ',' . test
  331 dictorsetmaker: test comma_test_seq ',' .

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    $default  reduce using rule 331 (dictorsetmaker)

    test        go to state 570
    or_test     go to state 100
    and_test    go to state 101
    not_test    go to state 102
    comparison  go to state 103
    expr        go to state 105
    xor_expr    go to state 106
    and_expr    go to state 107
    shift_expr  go to state 108
    arith_expr  go to state 109
    term        go to state 110
    factor      go to state 111
    power       go to state 112
    str_seq     go to state 113
    atom        go to state 114


State 457

   57 right_testlist: '=' testlist_star_expr right_testlist .

    $default  reduce using rule 57 (right_testlist)


State 458

  139 else_stmt: ELSE ':' .

    $default  reduce using rule 139 (else_stmt)


State 459

  138 elif_header: ELIF test . ':'

    ':'  shift, and go to state 571


State 460

  137 elif_seq: elif_seq elif_header . suite

    IMPORT        shift, and go to state 1
    END           shift, and go to state 33
    NOT           shift, and go to state 34
    DEF           shift, and go to state 35
    IF            shift, and go to state 36
    WHILE         shift, and go to state 37
    FOR           shift, and go to state 38
    TRY           shift, and go to state 39
    NONLOCAL      shift, and go to state 40
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    WITH          shift, and go to state 48
    DEL           shift, and go to state 49
    RETURN        shift, and go to state 50
    PRINT         shift, and go to state 51
    GLOBAL        shift, and go to state 52
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    PASS          shift, and go to state 55
    CHAR_VALUE    shift, and go to state 56
    BREAK         shift, and go to state 57
    CONTINUE      shift, and go to state 58
    ','           shift, and go to state 59
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    funcdef               go to state 67
    funcheader            go to state 68
    stmt                  go to state 69
    simple_stmt           go to state 70
    small_stmt            go to state 71
    expr_stmt             go to state 72
    testlist_star_expr    go to state 73
    comma_test_star       go to state 74
    comma_test_star_seqJ  go to state 75
    print_stmt            go to state 76
    del_stmt              go to state 77
    pass_stmt             go to state 78
    flow_stmt             go to state 79
    break_stmt            go to state 80
    continue_stmt         go to state 81
    return_stmt           go to state 82
    import_stmt           go to state 83
    import_name           go to state 13
    global_stmt           go to state 84
    nonlocal_stmt         go to state 85
    compound_stmt         go to state 86
    vardef                go to state 87
    if_stmt               go to state 88
    if_header             go to state 89
    while_stmt            go to state 90
    while_header          go to state 91
    for_stmt              go to state 92
    for_header            go to state 93
    try_header            go to state 94
    try_stmt              go to state 95
    with_stmt             go to state 96
    list_stmt             go to state 97
    suite                 go to state 572
    test                  go to state 99
    or_test               go to state 100
    and_test              go to state 101
    not_test              go to state 102
    comparison            go to state 103
    star_expr             go to state 104
    expr                  go to state 105
    xor_expr              go to state 106
    and_expr              go to state 107
    shift_expr            go to state 108
    arith_expr            go to state 109
    term                  go to state 110
    factor                go to state 111
    power                 go to state 112
    str_seq               go to state 113
    atom                  go to state 114


State 461

  143 if_stmt: if_header suite elif_seq else_stmt . suite

    IMPORT        shift, and go to state 1
    END           shift, and go to state 33
    NOT           shift, and go to state 34
    DEF           shift, and go to state 35
    IF            shift, and go to state 36
    WHILE         shift, and go to state 37
    FOR           shift, and go to state 38
    TRY           shift, and go to state 39
    NONLOCAL      shift, and go to state 40
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    WITH          shift, and go to state 48
    DEL           shift, and go to state 49
    RETURN        shift, and go to state 50
    PRINT         shift, and go to state 51
    GLOBAL        shift, and go to state 52
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    PASS          shift, and go to state 55
    CHAR_VALUE    shift, and go to state 56
    BREAK         shift, and go to state 57
    CONTINUE      shift, and go to state 58
    ','           shift, and go to state 59
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    funcdef               go to state 67
    funcheader            go to state 68
    stmt                  go to state 69
    simple_stmt           go to state 70
    small_stmt            go to state 71
    expr_stmt             go to state 72
    testlist_star_expr    go to state 73
    comma_test_star       go to state 74
    comma_test_star_seqJ  go to state 75
    print_stmt            go to state 76
    del_stmt              go to state 77
    pass_stmt             go to state 78
    flow_stmt             go to state 79
    break_stmt            go to state 80
    continue_stmt         go to state 81
    return_stmt           go to state 82
    import_stmt           go to state 83
    import_name           go to state 13
    global_stmt           go to state 84
    nonlocal_stmt         go to state 85
    compound_stmt         go to state 86
    vardef                go to state 87
    if_stmt               go to state 88
    if_header             go to state 89
    while_stmt            go to state 90
    while_header          go to state 91
    for_stmt              go to state 92
    for_header            go to state 93
    try_header            go to state 94
    try_stmt              go to state 95
    with_stmt             go to state 96
    list_stmt             go to state 97
    suite                 go to state 573
    test                  go to state 99
    or_test               go to state 100
    and_test              go to state 101
    not_test              go to state 102
    comparison            go to state 103
    star_expr             go to state 104
    expr                  go to state 105
    xor_expr              go to state 106
    and_expr              go to state 107
    shift_expr            go to state 108
    arith_expr            go to state 109
    term                  go to state 110
    factor                go to state 111
    power                 go to state 112
    str_seq               go to state 113
    atom                  go to state 114


State 462

  136 elif_seq: elif_header suite .

    $default  reduce using rule 136 (elif_seq)


State 463

  142 if_stmt: if_header suite else_stmt suite .

    $default  reduce using rule 142 (if_stmt)


State 464

  146 while_stmt: while_header suite ELSE ':' . suite

    IMPORT        shift, and go to state 1
    END           shift, and go to state 33
    NOT           shift, and go to state 34
    DEF           shift, and go to state 35
    IF            shift, and go to state 36
    WHILE         shift, and go to state 37
    FOR           shift, and go to state 38
    TRY           shift, and go to state 39
    NONLOCAL      shift, and go to state 40
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    WITH          shift, and go to state 48
    DEL           shift, and go to state 49
    RETURN        shift, and go to state 50
    PRINT         shift, and go to state 51
    GLOBAL        shift, and go to state 52
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    PASS          shift, and go to state 55
    CHAR_VALUE    shift, and go to state 56
    BREAK         shift, and go to state 57
    CONTINUE      shift, and go to state 58
    ','           shift, and go to state 59
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    funcdef               go to state 67
    funcheader            go to state 68
    stmt                  go to state 69
    simple_stmt           go to state 70
    small_stmt            go to state 71
    expr_stmt             go to state 72
    testlist_star_expr    go to state 73
    comma_test_star       go to state 74
    comma_test_star_seqJ  go to state 75
    print_stmt            go to state 76
    del_stmt              go to state 77
    pass_stmt             go to state 78
    flow_stmt             go to state 79
    break_stmt            go to state 80
    continue_stmt         go to state 81
    return_stmt           go to state 82
    import_stmt           go to state 83
    import_name           go to state 13
    global_stmt           go to state 84
    nonlocal_stmt         go to state 85
    compound_stmt         go to state 86
    vardef                go to state 87
    if_stmt               go to state 88
    if_header             go to state 89
    while_stmt            go to state 90
    while_header          go to state 91
    for_stmt              go to state 92
    for_header            go to state 93
    try_header            go to state 94
    try_stmt              go to state 95
    with_stmt             go to state 96
    list_stmt             go to state 97
    suite                 go to state 574
    test                  go to state 99
    or_test               go to state 100
    and_test              go to state 101
    not_test              go to state 102
    comparison            go to state 103
    star_expr             go to state 104
    expr                  go to state 105
    xor_expr              go to state 106
    and_expr              go to state 107
    shift_expr            go to state 108
    arith_expr            go to state 109
    term                  go to state 110
    factor                go to state 111
    power                 go to state 112
    str_seq               go to state 113
    atom                  go to state 114


State 465

  148 for_stmt: for_header IN testlist ':' . suite
  149         | for_header IN testlist ':' . suite ELSE ':' suite

    IMPORT        shift, and go to state 1
    END           shift, and go to state 33
    NOT           shift, and go to state 34
    DEF           shift, and go to state 35
    IF            shift, and go to state 36
    WHILE         shift, and go to state 37
    FOR           shift, and go to state 38
    TRY           shift, and go to state 39
    NONLOCAL      shift, and go to state 40
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    WITH          shift, and go to state 48
    DEL           shift, and go to state 49
    RETURN        shift, and go to state 50
    PRINT         shift, and go to state 51
    GLOBAL        shift, and go to state 52
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    PASS          shift, and go to state 55
    CHAR_VALUE    shift, and go to state 56
    BREAK         shift, and go to state 57
    CONTINUE      shift, and go to state 58
    ','           shift, and go to state 59
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    funcdef               go to state 67
    funcheader            go to state 68
    stmt                  go to state 69
    simple_stmt           go to state 70
    small_stmt            go to state 71
    expr_stmt             go to state 72
    testlist_star_expr    go to state 73
    comma_test_star       go to state 74
    comma_test_star_seqJ  go to state 75
    print_stmt            go to state 76
    del_stmt              go to state 77
    pass_stmt             go to state 78
    flow_stmt             go to state 79
    break_stmt            go to state 80
    continue_stmt         go to state 81
    return_stmt           go to state 82
    import_stmt           go to state 83
    import_name           go to state 13
    global_stmt           go to state 84
    nonlocal_stmt         go to state 85
    compound_stmt         go to state 86
    vardef                go to state 87
    if_stmt               go to state 88
    if_header             go to state 89
    while_stmt            go to state 90
    while_header          go to state 91
    for_stmt              go to state 92
    for_header            go to state 93
    try_header            go to state 94
    try_stmt              go to state 95
    with_stmt             go to state 96
    list_stmt             go to state 97
    suite                 go to state 575
    test                  go to state 99
    or_test               go to state 100
    and_test              go to state 101
    not_test              go to state 102
    comparison            go to state 103
    star_expr             go to state 104
    expr                  go to state 105
    xor_expr              go to state 106
    and_expr              go to state 107
    shift_expr            go to state 108
    arith_expr            go to state 109
    term                  go to state 110
    factor                go to state 111
    power                 go to state 112
    str_seq               go to state 113
    atom                  go to state 114


State 466

  156 finally_stmt: FINALLY ':' .

    $default  reduce using rule 156 (finally_stmt)


State 467

  166 except_clause: EXCEPT test .
  167              | EXCEPT test . AS NAME

    AS  shift, and go to state 576

    $default  reduce using rule 166 (except_clause)


State 468

  155 try_stmt: try_header suite finally_stmt suite .

    $default  reduce using rule 155 (try_stmt)


State 469

  153 try_stmt: try_header suite try_except_cla_seq ELSE . ':' suite

    ':'  shift, and go to state 577


State 470

  154 try_stmt: try_header suite try_except_cla_seq finally_stmt . suite

    IMPORT        shift, and go to state 1
    END           shift, and go to state 33
    NOT           shift, and go to state 34
    DEF           shift, and go to state 35
    IF            shift, and go to state 36
    WHILE         shift, and go to state 37
    FOR           shift, and go to state 38
    TRY           shift, and go to state 39
    NONLOCAL      shift, and go to state 40
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    WITH          shift, and go to state 48
    DEL           shift, and go to state 49
    RETURN        shift, and go to state 50
    PRINT         shift, and go to state 51
    GLOBAL        shift, and go to state 52
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    PASS          shift, and go to state 55
    CHAR_VALUE    shift, and go to state 56
    BREAK         shift, and go to state 57
    CONTINUE      shift, and go to state 58
    ','           shift, and go to state 59
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    funcdef               go to state 67
    funcheader            go to state 68
    stmt                  go to state 69
    simple_stmt           go to state 70
    small_stmt            go to state 71
    expr_stmt             go to state 72
    testlist_star_expr    go to state 73
    comma_test_star       go to state 74
    comma_test_star_seqJ  go to state 75
    print_stmt            go to state 76
    del_stmt              go to state 77
    pass_stmt             go to state 78
    flow_stmt             go to state 79
    break_stmt            go to state 80
    continue_stmt         go to state 81
    return_stmt           go to state 82
    import_stmt           go to state 83
    import_name           go to state 13
    global_stmt           go to state 84
    nonlocal_stmt         go to state 85
    compound_stmt         go to state 86
    vardef                go to state 87
    if_stmt               go to state 88
    if_header             go to state 89
    while_stmt            go to state 90
    while_header          go to state 91
    for_stmt              go to state 92
    for_header            go to state 93
    try_header            go to state 94
    try_stmt              go to state 95
    with_stmt             go to state 96
    list_stmt             go to state 97
    suite                 go to state 578
    test                  go to state 99
    or_test               go to state 100
    and_test              go to state 101
    not_test              go to state 102
    comparison            go to state 103
    star_expr             go to state 104
    expr                  go to state 105
    xor_expr              go to state 106
    and_expr              go to state 107
    shift_expr            go to state 108
    arith_expr            go to state 109
    term                  go to state 110
    factor                go to state 111
    power                 go to state 112
    str_seq               go to state 113
    atom                  go to state 114


State 471

  158 try_except_cla_seq: try_except_cla_seq except_clause . ':' suite

    ':'  shift, and go to state 579


State 472

  157 try_except_cla_seq: except_clause ':' . suite

    IMPORT        shift, and go to state 1
    END           shift, and go to state 33
    NOT           shift, and go to state 34
    DEF           shift, and go to state 35
    IF            shift, and go to state 36
    WHILE         shift, and go to state 37
    FOR           shift, and go to state 38
    TRY           shift, and go to state 39
    NONLOCAL      shift, and go to state 40
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    WITH          shift, and go to state 48
    DEL           shift, and go to state 49
    RETURN        shift, and go to state 50
    PRINT         shift, and go to state 51
    GLOBAL        shift, and go to state 52
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    PASS          shift, and go to state 55
    CHAR_VALUE    shift, and go to state 56
    BREAK         shift, and go to state 57
    CONTINUE      shift, and go to state 58
    ','           shift, and go to state 59
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    funcdef               go to state 67
    funcheader            go to state 68
    stmt                  go to state 69
    simple_stmt           go to state 70
    small_stmt            go to state 71
    expr_stmt             go to state 72
    testlist_star_expr    go to state 73
    comma_test_star       go to state 74
    comma_test_star_seqJ  go to state 75
    print_stmt            go to state 76
    del_stmt              go to state 77
    pass_stmt             go to state 78
    flow_stmt             go to state 79
    break_stmt            go to state 80
    continue_stmt         go to state 81
    return_stmt           go to state 82
    import_stmt           go to state 83
    import_name           go to state 13
    global_stmt           go to state 84
    nonlocal_stmt         go to state 85
    compound_stmt         go to state 86
    vardef                go to state 87
    if_stmt               go to state 88
    if_header             go to state 89
    while_stmt            go to state 90
    while_header          go to state 91
    for_stmt              go to state 92
    for_header            go to state 93
    try_header            go to state 94
    try_stmt              go to state 95
    with_stmt             go to state 96
    list_stmt             go to state 97
    suite                 go to state 580
    test                  go to state 99
    or_test               go to state 100
    and_test              go to state 101
    not_test              go to state 102
    comparison            go to state 103
    star_expr             go to state 104
    expr                  go to state 105
    xor_expr              go to state 106
    and_expr              go to state 107
    shift_expr            go to state 108
    arith_expr            go to state 109
    term                  go to state 110
    factor                go to state 111
    power                 go to state 112
    str_seq               go to state 113
    atom                  go to state 114


State 473

  173 test: or_test IF or_test ELSE . test

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    test        go to state 581
    or_test     go to state 100
    and_test    go to state 101
    not_test    go to state 102
    comparison  go to state 103
    expr        go to state 105
    xor_expr    go to state 106
    and_expr    go to state 107
    shift_expr  go to state 108
    arith_expr  go to state 109
    term        go to state 110
    factor      go to state 111
    power       go to state 112
    str_seq     go to state 113
    atom        go to state 114


State 474

  175 or_seq: or_seq OR and_test .

    $default  reduce using rule 175 (or_seq)


State 475

  179 and_seq: and_seq AND not_test .

    $default  reduce using rule 179 (and_seq)


State 476

  185 comp_op_seq: comp_op_seq comp_op expr .

    $default  reduce using rule 185 (comp_op_seq)


State 477

  201 or_xor_expr_seq: or_xor_expr_seq '|' xor_expr .

    $default  reduce using rule 201 (or_xor_expr_seq)


State 478

  205 sha_and_expr_seq: sha_and_expr_seq '^' and_expr .

    $default  reduce using rule 205 (sha_and_expr_seq)


State 479

  209 and_shift_expr_seq: and_shift_expr_seq '&' shift_expr .

    $default  reduce using rule 209 (and_shift_expr_seq)


State 480

  214 arith_seq: arith_seq LESS_THAN_2 arith_expr .

    $default  reduce using rule 214 (arith_seq)


State 481

  215 arith_seq: arith_seq MORE_THAN_2 arith_expr .

    $default  reduce using rule 215 (arith_seq)


State 482

  220 term_seq: term_seq '+' term .

    $default  reduce using rule 220 (term_seq)


State 483

  221 term_seq: term_seq '-' term .

    $default  reduce using rule 221 (term_seq)


State 484

  231 factor_seq: factor_seq DIV_2 factor .

    $default  reduce using rule 231 (factor_seq)


State 485

  228 factor_seq: factor_seq '*' factor .

    $default  reduce using rule 228 (factor_seq)


State 486

  229 factor_seq: factor_seq '/' factor .

    $default  reduce using rule 229 (factor_seq)


State 487

  230 factor_seq: factor_seq '%' factor .

    $default  reduce using rule 230 (factor_seq)


State 488

  280 trailer: '.' NAME '(' . ')'
  281        | '.' NAME '(' . arglist ')'

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    STAR_2        shift, and go to state 288
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 289
    ')'           shift, and go to state 582
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    test           go to state 291
    or_test        go to state 100
    and_test       go to state 101
    not_test       go to state 102
    comparison     go to state 103
    expr           go to state 105
    xor_expr       go to state 106
    and_expr       go to state 107
    shift_expr     go to state 108
    arith_expr     go to state 109
    term           go to state 110
    factor         go to state 111
    power          go to state 112
    str_seq        go to state 113
    atom           go to state 114
    arg_comma_seq  go to state 292
    arglist        go to state 583
    default_arg    go to state 294
    argument       go to state 295


State 489

  282 trailer: '.' NAME '[' . subscriptlist ']'

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    ':'           shift, and go to state 296
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    test           go to state 297
    or_test        go to state 100
    and_test       go to state 101
    not_test       go to state 102
    comparison     go to state 103
    expr           go to state 105
    xor_expr       go to state 106
    and_expr       go to state 107
    shift_expr     go to state 108
    arith_expr     go to state 109
    term           go to state 110
    factor         go to state 111
    power          go to state 112
    str_seq        go to state 113
    atom           go to state 114
    subscriptlist  go to state 584
    subscript      go to state 299


State 490

  242 power: atom trailer_seq STAR_2 factor .

    $default  reduce using rule 242 (power)


State 491

  365 classheader: CLASS NAME '(' dotted_as_names ')' ':' .

    $default  reduce using rule 365 (classheader)


State 492

  352 classheader: FINAL CLASS NAME '(' ')' ':' .

    $default  reduce using rule 352 (classheader)


State 493

  368 classheader: FINAL CLASS NAME '(' dotted_as_names ')' . ':'

    ':'  shift, and go to state 585


State 494

  354 classheader: FINAL STATIC CLASS NAME '(' ')' . ':'

    ':'  shift, and go to state 586


State 495

  370 classheader: FINAL STATIC CLASS NAME '(' dotted_as_names . ')' ':'

    ')'  shift, and go to state 587


State 496

  358 classheader: FINAL STATIC access CLASS NAME '(' . ')' ':'
  374            | FINAL STATIC access CLASS NAME '(' . dotted_as_names ')' ':'

    NAME  shift, and go to state 16
    ')'   shift, and go to state 588

    dotted_as_names  go to state 589
    dotted_as_name   go to state 18
    dotted_name      go to state 19


State 497

  342 classheader: FINAL STATIC access CLASS NAME ':' .

    $default  reduce using rule 342 (classheader)


State 498

  356 classheader: FINAL access CLASS NAME '(' ')' . ':'

    ':'  shift, and go to state 590


State 499

  372 classheader: FINAL access CLASS NAME '(' dotted_as_names . ')' ':'

    ')'  shift, and go to state 591


State 500

  364 classheader: FINAL access STATIC CLASS NAME '(' . ')' ':'
  380            | FINAL access STATIC CLASS NAME '(' . dotted_as_names ')' ':'

    NAME  shift, and go to state 16
    ')'   shift, and go to state 592

    dotted_as_names  go to state 593
    dotted_as_name   go to state 18
    dotted_name      go to state 19


State 501

  348 classheader: FINAL access STATIC CLASS NAME ':' .

    $default  reduce using rule 348 (classheader)


State 502

  351 classheader: STATIC CLASS NAME '(' ')' ':' .

    $default  reduce using rule 351 (classheader)


State 503

  367 classheader: STATIC CLASS NAME '(' dotted_as_names ')' . ':'

    ':'  shift, and go to state 594


State 504

  353 classheader: STATIC FINAL CLASS NAME '(' ')' . ':'

    ':'  shift, and go to state 595


State 505

  369 classheader: STATIC FINAL CLASS NAME '(' dotted_as_names . ')' ':'

    ')'  shift, and go to state 596


State 506

  357 classheader: STATIC FINAL access CLASS NAME '(' . ')' ':'
  373            | STATIC FINAL access CLASS NAME '(' . dotted_as_names ')' ':'

    NAME  shift, and go to state 16
    ')'   shift, and go to state 597

    dotted_as_names  go to state 598
    dotted_as_name   go to state 18
    dotted_name      go to state 19


State 507

  341 classheader: STATIC FINAL access CLASS NAME ':' .

    $default  reduce using rule 341 (classheader)


State 508

  355 classheader: STATIC access CLASS NAME '(' ')' . ':'

    ':'  shift, and go to state 599


State 509

  371 classheader: STATIC access CLASS NAME '(' dotted_as_names . ')' ':'

    ')'  shift, and go to state 600


State 510

  363 classheader: STATIC access FINAL CLASS NAME '(' . ')' ':'
  379            | STATIC access FINAL CLASS NAME '(' . dotted_as_names ')' ':'

    NAME  shift, and go to state 16
    ')'   shift, and go to state 601

    dotted_as_names  go to state 602
    dotted_as_name   go to state 18
    dotted_name      go to state 19


State 511

  347 classheader: STATIC access FINAL CLASS NAME ':' .

    $default  reduce using rule 347 (classheader)


State 512

  350 classheader: access CLASS NAME '(' ')' ':' .

    $default  reduce using rule 350 (classheader)


State 513

  366 classheader: access CLASS NAME '(' dotted_as_names ')' . ':'

    ':'  shift, and go to state 603


State 514

  360 classheader: access FINAL CLASS NAME '(' ')' . ':'

    ':'  shift, and go to state 604


State 515

  376 classheader: access FINAL CLASS NAME '(' dotted_as_names . ')' ':'

    ')'  shift, and go to state 605


State 516

  362 classheader: access FINAL STATIC CLASS NAME '(' . ')' ':'
  378            | access FINAL STATIC CLASS NAME '(' . dotted_as_names ')' ':'

    NAME  shift, and go to state 16
    ')'   shift, and go to state 606

    dotted_as_names  go to state 607
    dotted_as_name   go to state 18
    dotted_name      go to state 19


State 517

  346 classheader: access FINAL STATIC CLASS NAME ':' .

    $default  reduce using rule 346 (classheader)


State 518

  359 classheader: access STATIC CLASS NAME '(' ')' . ':'

    ':'  shift, and go to state 608


State 519

  375 classheader: access STATIC CLASS NAME '(' dotted_as_names . ')' ':'

    ')'  shift, and go to state 609


State 520

  361 classheader: access STATIC FINAL CLASS NAME '(' . ')' ':'
  377            | access STATIC FINAL CLASS NAME '(' . dotted_as_names ')' ':'

    NAME  shift, and go to state 16
    ')'   shift, and go to state 610

    dotted_as_names  go to state 611
    dotted_as_name   go to state 18
    dotted_name      go to state 19


State 521

  345 classheader: access STATIC FINAL CLASS NAME ':' .

    $default  reduce using rule 345 (classheader)


State 522

   16 funcheader: DEF FINAL STATIC NAME parameters . ARROW test ':'
   18           | DEF FINAL STATIC NAME parameters . ':'

    ARROW  shift, and go to state 612
    ':'    shift, and go to state 613


State 523

   24 funcheader: DEF FINAL STATIC access NAME . parameters ARROW test ':'
   26           | DEF FINAL STATIC access NAME . parameters ':'
  129 vardef: DEF FINAL STATIC access NAME .

    '('  shift, and go to state 275

    $default  reduce using rule 129 (vardef)

    parameters  go to state 614


State 524

   12 funcheader: DEF FINAL NAME parameters ARROW . test ':'

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    test        go to state 615
    or_test     go to state 100
    and_test    go to state 101
    not_test    go to state 102
    comparison  go to state 103
    expr        go to state 105
    xor_expr    go to state 106
    and_expr    go to state 107
    shift_expr  go to state 108
    arith_expr  go to state 109
    term        go to state 110
    factor      go to state 111
    power       go to state 112
    str_seq     go to state 113
    atom        go to state 114


State 525

   14 funcheader: DEF FINAL NAME parameters ':' .

    $default  reduce using rule 14 (funcheader)


State 526

   36 funcheader: DEF FINAL access STATIC NAME . parameters ARROW test ':'
   38           | DEF FINAL access STATIC NAME . parameters ':'
  135 vardef: DEF FINAL access STATIC NAME .

    '('  shift, and go to state 275

    $default  reduce using rule 135 (vardef)

    parameters  go to state 616


State 527

   19 funcheader: DEF FINAL access NAME parameters . ARROW test ':'
   22           | DEF FINAL access NAME parameters . ':'

    ARROW  shift, and go to state 617
    ':'    shift, and go to state 618


State 528

   15 funcheader: DEF STATIC FINAL NAME parameters . ARROW test ':'
   17           | DEF STATIC FINAL NAME parameters . ':'

    ARROW  shift, and go to state 619
    ':'    shift, and go to state 620


State 529

   23 funcheader: DEF STATIC FINAL access NAME . parameters ARROW test ':'
   25           | DEF STATIC FINAL access NAME . parameters ':'
  128 vardef: DEF STATIC FINAL access NAME .

    '('  shift, and go to state 275

    $default  reduce using rule 128 (vardef)

    parameters  go to state 621


State 530

   11 funcheader: DEF STATIC NAME parameters ARROW . test ':'

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    test        go to state 622
    or_test     go to state 100
    and_test    go to state 101
    not_test    go to state 102
    comparison  go to state 103
    expr        go to state 105
    xor_expr    go to state 106
    and_expr    go to state 107
    shift_expr  go to state 108
    arith_expr  go to state 109
    term        go to state 110
    factor      go to state 111
    power       go to state 112
    str_seq     go to state 113
    atom        go to state 114


State 531

   13 funcheader: DEF STATIC NAME parameters ':' .

    $default  reduce using rule 13 (funcheader)


State 532

   35 funcheader: DEF STATIC access FINAL NAME . parameters ARROW test ':'
   37           | DEF STATIC access FINAL NAME . parameters ':'
  134 vardef: DEF STATIC access FINAL NAME .

    '('  shift, and go to state 275

    $default  reduce using rule 134 (vardef)

    parameters  go to state 623


State 533

   20 funcheader: DEF STATIC access NAME parameters . ARROW test ':'
   21           | DEF STATIC access NAME parameters . ':'

    ARROW  shift, and go to state 624
    ':'    shift, and go to state 625


State 534

   39 parameters: '(' arglist ')' .

    $default  reduce using rule 39 (parameters)


State 535

    7 funcheader: DEF NAME parameters ARROW test . ':'

    ':'  shift, and go to state 626


State 536

   32 funcheader: DEF access FINAL STATIC NAME . parameters ARROW test ':'
   34           | DEF access FINAL STATIC NAME . parameters ':'
  133 vardef: DEF access FINAL STATIC NAME .

    '('  shift, and go to state 275

    $default  reduce using rule 133 (vardef)

    parameters  go to state 627


State 537

   28 funcheader: DEF access FINAL NAME parameters . ARROW test ':'
   30           | DEF access FINAL NAME parameters . ':'

    ARROW  shift, and go to state 628
    ':'    shift, and go to state 629


State 538

   31 funcheader: DEF access STATIC FINAL NAME . parameters ARROW test ':'
   33           | DEF access STATIC FINAL NAME . parameters ':'
  132 vardef: DEF access STATIC FINAL NAME .

    '('  shift, and go to state 275

    $default  reduce using rule 132 (vardef)

    parameters  go to state 630


State 539

   27 funcheader: DEF access STATIC NAME parameters . ARROW test ':'
   29           | DEF access STATIC NAME parameters . ':'

    ARROW  shift, and go to state 631
    ':'    shift, and go to state 632


State 540

    8 funcheader: DEF access NAME parameters ARROW . test ':'

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    test        go to state 633
    or_test     go to state 100
    and_test    go to state 101
    not_test    go to state 102
    comparison  go to state 103
    expr        go to state 105
    xor_expr    go to state 106
    and_expr    go to state 107
    shift_expr  go to state 108
    arith_expr  go to state 109
    term        go to state 110
    factor      go to state 111
    power       go to state 112
    str_seq     go to state 113
    atom        go to state 114


State 541

   10 funcheader: DEF access NAME parameters ':' .

    $default  reduce using rule 10 (funcheader)


State 542

  303 comma_expr_star_seq: comma_expr_star_seq ',' star_expr .

    $default  reduce using rule 303 (comma_expr_star_seq)


State 543

  302 comma_expr_star_seq: comma_expr_star_seq ',' expr .

    $default  reduce using rule 302 (comma_expr_star_seq)


State 544

  108 comma_name_seq: comma_name_seq ',' NAME .

    $default  reduce using rule 108 (comma_name_seq)


State 545

  383 comma_arg_seq: ',' . argument
  389 arglist: '*' test ',' . STAR_2 test
  406 comma_default_arg_seq: ',' . default_arg

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    STAR_2        shift, and go to state 634
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    test         go to state 291
    or_test      go to state 100
    and_test     go to state 101
    not_test     go to state 102
    comparison   go to state 103
    expr         go to state 105
    xor_expr     go to state 106
    and_expr     go to state 107
    shift_expr   go to state 108
    arith_expr   go to state 109
    term         go to state 110
    factor       go to state 111
    power        go to state 112
    str_seq      go to state 113
    atom         go to state 114
    default_arg  go to state 635
    argument     go to state 636


State 546

  384 comma_arg_seq: comma_arg_seq . ',' argument
  390 arglist: '*' test comma_arg_seq .
  392        | '*' test comma_arg_seq . comma_default_arg_seq
  393        | '*' test comma_arg_seq . ',' STAR_2 test

    ','  shift, and go to state 637

    $default  reduce using rule 390 (arglist)

    comma_default_arg_seq  go to state 638


State 547

  391 arglist: '*' test comma_default_arg_seq .
  407 comma_default_arg_seq: comma_default_arg_seq . ',' default_arg

    ','  shift, and go to state 639

    $default  reduce using rule 391 (arglist)


State 548

  410 default_arg: test '=' test .

    $default  reduce using rule 410 (default_arg)


State 549

  405 arglist: arg_comma_seq STAR_2 test .

    $default  reduce using rule 405 (arglist)


State 550

  399 arglist: arg_comma_seq '*' test .
  400        | arg_comma_seq '*' test . ',' STAR_2 test
  401        | arg_comma_seq '*' test . comma_arg_seq
  402        | arg_comma_seq '*' test . comma_default_arg_seq
  403        | arg_comma_seq '*' test . comma_arg_seq comma_default_arg_seq
  404        | arg_comma_seq '*' test . comma_arg_seq ',' STAR_2 test

    ','  shift, and go to state 640

    $default  reduce using rule 399 (arglist)

    comma_arg_seq          go to state 641
    comma_default_arg_seq  go to state 642


State 551

  410 default_arg: test . '=' test

    '='  shift, and go to state 426


State 552

  397 arglist: arg_comma_seq default_arg_comma_seq default_arg .
  409 default_arg_comma_seq: default_arg_comma_seq default_arg . ','

    ','  shift, and go to state 643

    $default  reduce using rule 397 (arglist)


State 553

  408 default_arg_comma_seq: default_arg ',' .

    $default  reduce using rule 408 (default_arg_comma_seq)


State 554

  382 arg_comma_seq: arg_comma_seq argument ',' .
  398 arglist: arg_comma_seq argument ',' .

    ')'       reduce using rule 398 (arglist)
    $default  reduce using rule 382 (arg_comma_seq)


State 555

  299 sliceop: ':' test .

    $default  reduce using rule 299 (sliceop)


State 556

  297 subscript: ':' test sliceop .

    $default  reduce using rule 297 (subscript)


State 557

  292 subscript: test ':' test .
  294          | test ':' test . sliceop

    ':'  shift, and go to state 435

    $default  reduce using rule 292 (subscript)

    sliceop  go to state 644


State 558

  293 subscript: test ':' sliceop .

    $default  reduce using rule 293 (subscript)


State 559

  283 comma_subscript_seq: ',' subscript .

    $default  reduce using rule 283 (comma_subscript_seq)


State 560

  284 comma_subscript_seq: comma_subscript_seq ',' . subscript
  288 subscriptlist: subscript comma_subscript_seq ',' .

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    ':'           shift, and go to state 296
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    $default  reduce using rule 288 (subscriptlist)

    test        go to state 297
    or_test     go to state 100
    and_test    go to state 101
    not_test    go to state 102
    comparison  go to state 103
    expr        go to state 105
    xor_expr    go to state 106
    and_expr    go to state 107
    shift_expr  go to state 108
    arith_expr  go to state 109
    term        go to state 110
    factor      go to state 111
    power       go to state 112
    str_seq     go to state 113
    atom        go to state 114
    subscript   go to state 645


State 561

  160 with_seq: with_seq ',' with_item .

    $default  reduce using rule 160 (with_seq)


State 562

  162 with_stmt: WITH with_item with_seq ':' suite .

    $default  reduce using rule 162 (with_stmt)


State 563

  313 comma_test: ',' test comma_test .

    $default  reduce using rule 313 (comma_test)


State 564

  415 comp_for: FOR exprlist IN . or_test
  416         | FOR exprlist IN . or_test comp_iter

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    or_test     go to state 646
    and_test    go to state 101
    not_test    go to state 102
    comparison  go to state 103
    expr        go to state 105
    xor_expr    go to state 106
    and_expr    go to state 107
    shift_expr  go to state 108
    arith_expr  go to state 109
    term        go to state 110
    factor      go to state 111
    power       go to state 112
    str_seq     go to state 113
    atom        go to state 114


State 565

  267 comma_test_star_seq: comma_test_star_seq ',' test .

    $default  reduce using rule 267 (comma_test_star_seq)


State 566

  268 comma_test_star_seq: comma_test_star_seq ',' star_expr .

    $default  reduce using rule 268 (comma_test_star_seq)


State 567

  318 comma_test_colon_test_seq: ',' . test ':' test
  324 dictorsetmaker: test ':' test ',' .

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    $default  reduce using rule 324 (dictorsetmaker)

    test        go to state 647
    or_test     go to state 100
    and_test    go to state 101
    not_test    go to state 102
    comparison  go to state 103
    expr        go to state 105
    xor_expr    go to state 106
    and_expr    go to state 107
    shift_expr  go to state 108
    arith_expr  go to state 109
    term        go to state 110
    factor      go to state 111
    power       go to state 112
    str_seq     go to state 113
    atom        go to state 114


State 568

  319 comma_test_colon_test_seq: comma_test_colon_test_seq . ',' test ':' test
  325 dictorsetmaker: test ':' test comma_test_colon_test_seq .
  326               | test ':' test comma_test_colon_test_seq . ','

    ','  shift, and go to state 648

    $default  reduce using rule 325 (dictorsetmaker)


State 569

  322 dictorsetmaker: test ':' test comp_for .

    $default  reduce using rule 322 (dictorsetmaker)


State 570

  321 comma_test_seq: comma_test_seq ',' test .

    $default  reduce using rule 321 (comma_test_seq)


State 571

  138 elif_header: ELIF test ':' .

    $default  reduce using rule 138 (elif_header)


State 572

  137 elif_seq: elif_seq elif_header suite .

    $default  reduce using rule 137 (elif_seq)


State 573

  143 if_stmt: if_header suite elif_seq else_stmt suite .

    $default  reduce using rule 143 (if_stmt)


State 574

  146 while_stmt: while_header suite ELSE ':' suite .

    $default  reduce using rule 146 (while_stmt)


State 575

  148 for_stmt: for_header IN testlist ':' suite .
  149         | for_header IN testlist ':' suite . ELSE ':' suite

    ELSE  shift, and go to state 649

    $default  reduce using rule 148 (for_stmt)


State 576

  167 except_clause: EXCEPT test AS . NAME

    NAME  shift, and go to state 650


State 577

  153 try_stmt: try_header suite try_except_cla_seq ELSE ':' . suite

    IMPORT        shift, and go to state 1
    END           shift, and go to state 33
    NOT           shift, and go to state 34
    DEF           shift, and go to state 35
    IF            shift, and go to state 36
    WHILE         shift, and go to state 37
    FOR           shift, and go to state 38
    TRY           shift, and go to state 39
    NONLOCAL      shift, and go to state 40
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    WITH          shift, and go to state 48
    DEL           shift, and go to state 49
    RETURN        shift, and go to state 50
    PRINT         shift, and go to state 51
    GLOBAL        shift, and go to state 52
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    PASS          shift, and go to state 55
    CHAR_VALUE    shift, and go to state 56
    BREAK         shift, and go to state 57
    CONTINUE      shift, and go to state 58
    ','           shift, and go to state 59
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    funcdef               go to state 67
    funcheader            go to state 68
    stmt                  go to state 69
    simple_stmt           go to state 70
    small_stmt            go to state 71
    expr_stmt             go to state 72
    testlist_star_expr    go to state 73
    comma_test_star       go to state 74
    comma_test_star_seqJ  go to state 75
    print_stmt            go to state 76
    del_stmt              go to state 77
    pass_stmt             go to state 78
    flow_stmt             go to state 79
    break_stmt            go to state 80
    continue_stmt         go to state 81
    return_stmt           go to state 82
    import_stmt           go to state 83
    import_name           go to state 13
    global_stmt           go to state 84
    nonlocal_stmt         go to state 85
    compound_stmt         go to state 86
    vardef                go to state 87
    if_stmt               go to state 88
    if_header             go to state 89
    while_stmt            go to state 90
    while_header          go to state 91
    for_stmt              go to state 92
    for_header            go to state 93
    try_header            go to state 94
    try_stmt              go to state 95
    with_stmt             go to state 96
    list_stmt             go to state 97
    suite                 go to state 651
    test                  go to state 99
    or_test               go to state 100
    and_test              go to state 101
    not_test              go to state 102
    comparison            go to state 103
    star_expr             go to state 104
    expr                  go to state 105
    xor_expr              go to state 106
    and_expr              go to state 107
    shift_expr            go to state 108
    arith_expr            go to state 109
    term                  go to state 110
    factor                go to state 111
    power                 go to state 112
    str_seq               go to state 113
    atom                  go to state 114


State 578

  154 try_stmt: try_header suite try_except_cla_seq finally_stmt suite .

    $default  reduce using rule 154 (try_stmt)


State 579

  158 try_except_cla_seq: try_except_cla_seq except_clause ':' . suite

    IMPORT        shift, and go to state 1
    END           shift, and go to state 33
    NOT           shift, and go to state 34
    DEF           shift, and go to state 35
    IF            shift, and go to state 36
    WHILE         shift, and go to state 37
    FOR           shift, and go to state 38
    TRY           shift, and go to state 39
    NONLOCAL      shift, and go to state 40
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    WITH          shift, and go to state 48
    DEL           shift, and go to state 49
    RETURN        shift, and go to state 50
    PRINT         shift, and go to state 51
    GLOBAL        shift, and go to state 52
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    PASS          shift, and go to state 55
    CHAR_VALUE    shift, and go to state 56
    BREAK         shift, and go to state 57
    CONTINUE      shift, and go to state 58
    ','           shift, and go to state 59
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    funcdef               go to state 67
    funcheader            go to state 68
    stmt                  go to state 69
    simple_stmt           go to state 70
    small_stmt            go to state 71
    expr_stmt             go to state 72
    testlist_star_expr    go to state 73
    comma_test_star       go to state 74
    comma_test_star_seqJ  go to state 75
    print_stmt            go to state 76
    del_stmt              go to state 77
    pass_stmt             go to state 78
    flow_stmt             go to state 79
    break_stmt            go to state 80
    continue_stmt         go to state 81
    return_stmt           go to state 82
    import_stmt           go to state 83
    import_name           go to state 13
    global_stmt           go to state 84
    nonlocal_stmt         go to state 85
    compound_stmt         go to state 86
    vardef                go to state 87
    if_stmt               go to state 88
    if_header             go to state 89
    while_stmt            go to state 90
    while_header          go to state 91
    for_stmt              go to state 92
    for_header            go to state 93
    try_header            go to state 94
    try_stmt              go to state 95
    with_stmt             go to state 96
    list_stmt             go to state 97
    suite                 go to state 652
    test                  go to state 99
    or_test               go to state 100
    and_test              go to state 101
    not_test              go to state 102
    comparison            go to state 103
    star_expr             go to state 104
    expr                  go to state 105
    xor_expr              go to state 106
    and_expr              go to state 107
    shift_expr            go to state 108
    arith_expr            go to state 109
    term                  go to state 110
    factor                go to state 111
    power                 go to state 112
    str_seq               go to state 113
    atom                  go to state 114


State 580

  157 try_except_cla_seq: except_clause ':' suite .

    $default  reduce using rule 157 (try_except_cla_seq)


State 581

  173 test: or_test IF or_test ELSE test .

    $default  reduce using rule 173 (test)


State 582

  280 trailer: '.' NAME '(' ')' .

    $default  reduce using rule 280 (trailer)


State 583

  281 trailer: '.' NAME '(' arglist . ')'

    ')'  shift, and go to state 653


State 584

  282 trailer: '.' NAME '[' subscriptlist . ']'

    ']'  shift, and go to state 654


State 585

  368 classheader: FINAL CLASS NAME '(' dotted_as_names ')' ':' .

    $default  reduce using rule 368 (classheader)


State 586

  354 classheader: FINAL STATIC CLASS NAME '(' ')' ':' .

    $default  reduce using rule 354 (classheader)


State 587

  370 classheader: FINAL STATIC CLASS NAME '(' dotted_as_names ')' . ':'

    ':'  shift, and go to state 655


State 588

  358 classheader: FINAL STATIC access CLASS NAME '(' ')' . ':'

    ':'  shift, and go to state 656


State 589

  374 classheader: FINAL STATIC access CLASS NAME '(' dotted_as_names . ')' ':'

    ')'  shift, and go to state 657


State 590

  356 classheader: FINAL access CLASS NAME '(' ')' ':' .

    $default  reduce using rule 356 (classheader)


State 591

  372 classheader: FINAL access CLASS NAME '(' dotted_as_names ')' . ':'

    ':'  shift, and go to state 658


State 592

  364 classheader: FINAL access STATIC CLASS NAME '(' ')' . ':'

    ':'  shift, and go to state 659


State 593

  380 classheader: FINAL access STATIC CLASS NAME '(' dotted_as_names . ')' ':'

    ')'  shift, and go to state 660


State 594

  367 classheader: STATIC CLASS NAME '(' dotted_as_names ')' ':' .

    $default  reduce using rule 367 (classheader)


State 595

  353 classheader: STATIC FINAL CLASS NAME '(' ')' ':' .

    $default  reduce using rule 353 (classheader)


State 596

  369 classheader: STATIC FINAL CLASS NAME '(' dotted_as_names ')' . ':'

    ':'  shift, and go to state 661


State 597

  357 classheader: STATIC FINAL access CLASS NAME '(' ')' . ':'

    ':'  shift, and go to state 662


State 598

  373 classheader: STATIC FINAL access CLASS NAME '(' dotted_as_names . ')' ':'

    ')'  shift, and go to state 663


State 599

  355 classheader: STATIC access CLASS NAME '(' ')' ':' .

    $default  reduce using rule 355 (classheader)


State 600

  371 classheader: STATIC access CLASS NAME '(' dotted_as_names ')' . ':'

    ':'  shift, and go to state 664


State 601

  363 classheader: STATIC access FINAL CLASS NAME '(' ')' . ':'

    ':'  shift, and go to state 665


State 602

  379 classheader: STATIC access FINAL CLASS NAME '(' dotted_as_names . ')' ':'

    ')'  shift, and go to state 666


State 603

  366 classheader: access CLASS NAME '(' dotted_as_names ')' ':' .

    $default  reduce using rule 366 (classheader)


State 604

  360 classheader: access FINAL CLASS NAME '(' ')' ':' .

    $default  reduce using rule 360 (classheader)


State 605

  376 classheader: access FINAL CLASS NAME '(' dotted_as_names ')' . ':'

    ':'  shift, and go to state 667


State 606

  362 classheader: access FINAL STATIC CLASS NAME '(' ')' . ':'

    ':'  shift, and go to state 668


State 607

  378 classheader: access FINAL STATIC CLASS NAME '(' dotted_as_names . ')' ':'

    ')'  shift, and go to state 669


State 608

  359 classheader: access STATIC CLASS NAME '(' ')' ':' .

    $default  reduce using rule 359 (classheader)


State 609

  375 classheader: access STATIC CLASS NAME '(' dotted_as_names ')' . ':'

    ':'  shift, and go to state 670


State 610

  361 classheader: access STATIC FINAL CLASS NAME '(' ')' . ':'

    ':'  shift, and go to state 671


State 611

  377 classheader: access STATIC FINAL CLASS NAME '(' dotted_as_names . ')' ':'

    ')'  shift, and go to state 672


State 612

   16 funcheader: DEF FINAL STATIC NAME parameters ARROW . test ':'

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    test        go to state 673
    or_test     go to state 100
    and_test    go to state 101
    not_test    go to state 102
    comparison  go to state 103
    expr        go to state 105
    xor_expr    go to state 106
    and_expr    go to state 107
    shift_expr  go to state 108
    arith_expr  go to state 109
    term        go to state 110
    factor      go to state 111
    power       go to state 112
    str_seq     go to state 113
    atom        go to state 114


State 613

   18 funcheader: DEF FINAL STATIC NAME parameters ':' .

    $default  reduce using rule 18 (funcheader)


State 614

   24 funcheader: DEF FINAL STATIC access NAME parameters . ARROW test ':'
   26           | DEF FINAL STATIC access NAME parameters . ':'

    ARROW  shift, and go to state 674
    ':'    shift, and go to state 675


State 615

   12 funcheader: DEF FINAL NAME parameters ARROW test . ':'

    ':'  shift, and go to state 676


State 616

   36 funcheader: DEF FINAL access STATIC NAME parameters . ARROW test ':'
   38           | DEF FINAL access STATIC NAME parameters . ':'

    ARROW  shift, and go to state 677
    ':'    shift, and go to state 678


State 617

   19 funcheader: DEF FINAL access NAME parameters ARROW . test ':'

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    test        go to state 679
    or_test     go to state 100
    and_test    go to state 101
    not_test    go to state 102
    comparison  go to state 103
    expr        go to state 105
    xor_expr    go to state 106
    and_expr    go to state 107
    shift_expr  go to state 108
    arith_expr  go to state 109
    term        go to state 110
    factor      go to state 111
    power       go to state 112
    str_seq     go to state 113
    atom        go to state 114


State 618

   22 funcheader: DEF FINAL access NAME parameters ':' .

    $default  reduce using rule 22 (funcheader)


State 619

   15 funcheader: DEF STATIC FINAL NAME parameters ARROW . test ':'

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    test        go to state 680
    or_test     go to state 100
    and_test    go to state 101
    not_test    go to state 102
    comparison  go to state 103
    expr        go to state 105
    xor_expr    go to state 106
    and_expr    go to state 107
    shift_expr  go to state 108
    arith_expr  go to state 109
    term        go to state 110
    factor      go to state 111
    power       go to state 112
    str_seq     go to state 113
    atom        go to state 114


State 620

   17 funcheader: DEF STATIC FINAL NAME parameters ':' .

    $default  reduce using rule 17 (funcheader)


State 621

   23 funcheader: DEF STATIC FINAL access NAME parameters . ARROW test ':'
   25           | DEF STATIC FINAL access NAME parameters . ':'

    ARROW  shift, and go to state 681
    ':'    shift, and go to state 682


State 622

   11 funcheader: DEF STATIC NAME parameters ARROW test . ':'

    ':'  shift, and go to state 683


State 623

   35 funcheader: DEF STATIC access FINAL NAME parameters . ARROW test ':'
   37           | DEF STATIC access FINAL NAME parameters . ':'

    ARROW  shift, and go to state 684
    ':'    shift, and go to state 685


State 624

   20 funcheader: DEF STATIC access NAME parameters ARROW . test ':'

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    test        go to state 686
    or_test     go to state 100
    and_test    go to state 101
    not_test    go to state 102
    comparison  go to state 103
    expr        go to state 105
    xor_expr    go to state 106
    and_expr    go to state 107
    shift_expr  go to state 108
    arith_expr  go to state 109
    term        go to state 110
    factor      go to state 111
    power       go to state 112
    str_seq     go to state 113
    atom        go to state 114


State 625

   21 funcheader: DEF STATIC access NAME parameters ':' .

    $default  reduce using rule 21 (funcheader)


State 626

    7 funcheader: DEF NAME parameters ARROW test ':' .

    $default  reduce using rule 7 (funcheader)


State 627

   32 funcheader: DEF access FINAL STATIC NAME parameters . ARROW test ':'
   34           | DEF access FINAL STATIC NAME parameters . ':'

    ARROW  shift, and go to state 687
    ':'    shift, and go to state 688


State 628

   28 funcheader: DEF access FINAL NAME parameters ARROW . test ':'

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    test        go to state 689
    or_test     go to state 100
    and_test    go to state 101
    not_test    go to state 102
    comparison  go to state 103
    expr        go to state 105
    xor_expr    go to state 106
    and_expr    go to state 107
    shift_expr  go to state 108
    arith_expr  go to state 109
    term        go to state 110
    factor      go to state 111
    power       go to state 112
    str_seq     go to state 113
    atom        go to state 114


State 629

   30 funcheader: DEF access FINAL NAME parameters ':' .

    $default  reduce using rule 30 (funcheader)


State 630

   31 funcheader: DEF access STATIC FINAL NAME parameters . ARROW test ':'
   33           | DEF access STATIC FINAL NAME parameters . ':'

    ARROW  shift, and go to state 690
    ':'    shift, and go to state 691


State 631

   27 funcheader: DEF access STATIC NAME parameters ARROW . test ':'

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    test        go to state 692
    or_test     go to state 100
    and_test    go to state 101
    not_test    go to state 102
    comparison  go to state 103
    expr        go to state 105
    xor_expr    go to state 106
    and_expr    go to state 107
    shift_expr  go to state 108
    arith_expr  go to state 109
    term        go to state 110
    factor      go to state 111
    power       go to state 112
    str_seq     go to state 113
    atom        go to state 114


State 632

   29 funcheader: DEF access STATIC NAME parameters ':' .

    $default  reduce using rule 29 (funcheader)


State 633

    8 funcheader: DEF access NAME parameters ARROW test . ':'

    ':'  shift, and go to state 693


State 634

  389 arglist: '*' test ',' STAR_2 . test

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    test        go to state 694
    or_test     go to state 100
    and_test    go to state 101
    not_test    go to state 102
    comparison  go to state 103
    expr        go to state 105
    xor_expr    go to state 106
    and_expr    go to state 107
    shift_expr  go to state 108
    arith_expr  go to state 109
    term        go to state 110
    factor      go to state 111
    power       go to state 112
    str_seq     go to state 113
    atom        go to state 114


State 635

  406 comma_default_arg_seq: ',' default_arg .

    $default  reduce using rule 406 (comma_default_arg_seq)


State 636

  383 comma_arg_seq: ',' argument .

    $default  reduce using rule 383 (comma_arg_seq)


State 637

  384 comma_arg_seq: comma_arg_seq ',' . argument
  393 arglist: '*' test comma_arg_seq ',' . STAR_2 test
  406 comma_default_arg_seq: ',' . default_arg

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    STAR_2        shift, and go to state 695
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    test         go to state 291
    or_test      go to state 100
    and_test     go to state 101
    not_test     go to state 102
    comparison   go to state 103
    expr         go to state 105
    xor_expr     go to state 106
    and_expr     go to state 107
    shift_expr   go to state 108
    arith_expr   go to state 109
    term         go to state 110
    factor       go to state 111
    power        go to state 112
    str_seq      go to state 113
    atom         go to state 114
    default_arg  go to state 635
    argument     go to state 696


State 638

  392 arglist: '*' test comma_arg_seq comma_default_arg_seq .
  407 comma_default_arg_seq: comma_default_arg_seq . ',' default_arg

    ','  shift, and go to state 639

    $default  reduce using rule 392 (arglist)


State 639

  407 comma_default_arg_seq: comma_default_arg_seq ',' . default_arg

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    test         go to state 551
    or_test      go to state 100
    and_test     go to state 101
    not_test     go to state 102
    comparison   go to state 103
    expr         go to state 105
    xor_expr     go to state 106
    and_expr     go to state 107
    shift_expr   go to state 108
    arith_expr   go to state 109
    term         go to state 110
    factor       go to state 111
    power        go to state 112
    str_seq      go to state 113
    atom         go to state 114
    default_arg  go to state 697


State 640

  383 comma_arg_seq: ',' . argument
  400 arglist: arg_comma_seq '*' test ',' . STAR_2 test
  406 comma_default_arg_seq: ',' . default_arg

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    STAR_2        shift, and go to state 698
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    test         go to state 291
    or_test      go to state 100
    and_test     go to state 101
    not_test     go to state 102
    comparison   go to state 103
    expr         go to state 105
    xor_expr     go to state 106
    and_expr     go to state 107
    shift_expr   go to state 108
    arith_expr   go to state 109
    term         go to state 110
    factor       go to state 111
    power        go to state 112
    str_seq      go to state 113
    atom         go to state 114
    default_arg  go to state 635
    argument     go to state 636


State 641

  384 comma_arg_seq: comma_arg_seq . ',' argument
  401 arglist: arg_comma_seq '*' test comma_arg_seq .
  403        | arg_comma_seq '*' test comma_arg_seq . comma_default_arg_seq
  404        | arg_comma_seq '*' test comma_arg_seq . ',' STAR_2 test

    ','  shift, and go to state 699

    $default  reduce using rule 401 (arglist)

    comma_default_arg_seq  go to state 700


State 642

  402 arglist: arg_comma_seq '*' test comma_default_arg_seq .
  407 comma_default_arg_seq: comma_default_arg_seq . ',' default_arg

    ','  shift, and go to state 639

    $default  reduce using rule 402 (arglist)


State 643

  409 default_arg_comma_seq: default_arg_comma_seq default_arg ',' .

    $default  reduce using rule 409 (default_arg_comma_seq)


State 644

  294 subscript: test ':' test sliceop .

    $default  reduce using rule 294 (subscript)


State 645

  284 comma_subscript_seq: comma_subscript_seq ',' subscript .

    $default  reduce using rule 284 (comma_subscript_seq)


State 646

  415 comp_for: FOR exprlist IN or_test .
  416         | FOR exprlist IN or_test . comp_iter

    IF   shift, and go to state 701
    FOR  shift, and go to state 307

    $default  reduce using rule 415 (comp_for)

    comp_iter  go to state 702
    comp_for   go to state 703
    comp_if    go to state 704


State 647

  318 comma_test_colon_test_seq: ',' test . ':' test

    ':'  shift, and go to state 705


State 648

  319 comma_test_colon_test_seq: comma_test_colon_test_seq ',' . test ':' test
  326 dictorsetmaker: test ':' test comma_test_colon_test_seq ',' .

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    $default  reduce using rule 326 (dictorsetmaker)

    test        go to state 706
    or_test     go to state 100
    and_test    go to state 101
    not_test    go to state 102
    comparison  go to state 103
    expr        go to state 105
    xor_expr    go to state 106
    and_expr    go to state 107
    shift_expr  go to state 108
    arith_expr  go to state 109
    term        go to state 110
    factor      go to state 111
    power       go to state 112
    str_seq     go to state 113
    atom        go to state 114


State 649

  149 for_stmt: for_header IN testlist ':' suite ELSE . ':' suite

    ':'  shift, and go to state 707


State 650

  167 except_clause: EXCEPT test AS NAME .

    $default  reduce using rule 167 (except_clause)


State 651

  153 try_stmt: try_header suite try_except_cla_seq ELSE ':' suite .

    $default  reduce using rule 153 (try_stmt)


State 652

  158 try_except_cla_seq: try_except_cla_seq except_clause ':' suite .

    $default  reduce using rule 158 (try_except_cla_seq)


State 653

  281 trailer: '.' NAME '(' arglist ')' .

    $default  reduce using rule 281 (trailer)


State 654

  282 trailer: '.' NAME '[' subscriptlist ']' .

    $default  reduce using rule 282 (trailer)


State 655

  370 classheader: FINAL STATIC CLASS NAME '(' dotted_as_names ')' ':' .

    $default  reduce using rule 370 (classheader)


State 656

  358 classheader: FINAL STATIC access CLASS NAME '(' ')' ':' .

    $default  reduce using rule 358 (classheader)


State 657

  374 classheader: FINAL STATIC access CLASS NAME '(' dotted_as_names ')' . ':'

    ':'  shift, and go to state 708


State 658

  372 classheader: FINAL access CLASS NAME '(' dotted_as_names ')' ':' .

    $default  reduce using rule 372 (classheader)


State 659

  364 classheader: FINAL access STATIC CLASS NAME '(' ')' ':' .

    $default  reduce using rule 364 (classheader)


State 660

  380 classheader: FINAL access STATIC CLASS NAME '(' dotted_as_names ')' . ':'

    ':'  shift, and go to state 709


State 661

  369 classheader: STATIC FINAL CLASS NAME '(' dotted_as_names ')' ':' .

    $default  reduce using rule 369 (classheader)


State 662

  357 classheader: STATIC FINAL access CLASS NAME '(' ')' ':' .

    $default  reduce using rule 357 (classheader)


State 663

  373 classheader: STATIC FINAL access CLASS NAME '(' dotted_as_names ')' . ':'

    ':'  shift, and go to state 710


State 664

  371 classheader: STATIC access CLASS NAME '(' dotted_as_names ')' ':' .

    $default  reduce using rule 371 (classheader)


State 665

  363 classheader: STATIC access FINAL CLASS NAME '(' ')' ':' .

    $default  reduce using rule 363 (classheader)


State 666

  379 classheader: STATIC access FINAL CLASS NAME '(' dotted_as_names ')' . ':'

    ':'  shift, and go to state 711


State 667

  376 classheader: access FINAL CLASS NAME '(' dotted_as_names ')' ':' .

    $default  reduce using rule 376 (classheader)


State 668

  362 classheader: access FINAL STATIC CLASS NAME '(' ')' ':' .

    $default  reduce using rule 362 (classheader)


State 669

  378 classheader: access FINAL STATIC CLASS NAME '(' dotted_as_names ')' . ':'

    ':'  shift, and go to state 712


State 670

  375 classheader: access STATIC CLASS NAME '(' dotted_as_names ')' ':' .

    $default  reduce using rule 375 (classheader)


State 671

  361 classheader: access STATIC FINAL CLASS NAME '(' ')' ':' .

    $default  reduce using rule 361 (classheader)


State 672

  377 classheader: access STATIC FINAL CLASS NAME '(' dotted_as_names ')' . ':'

    ':'  shift, and go to state 713


State 673

   16 funcheader: DEF FINAL STATIC NAME parameters ARROW test . ':'

    ':'  shift, and go to state 714


State 674

   24 funcheader: DEF FINAL STATIC access NAME parameters ARROW . test ':'

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    test        go to state 715
    or_test     go to state 100
    and_test    go to state 101
    not_test    go to state 102
    comparison  go to state 103
    expr        go to state 105
    xor_expr    go to state 106
    and_expr    go to state 107
    shift_expr  go to state 108
    arith_expr  go to state 109
    term        go to state 110
    factor      go to state 111
    power       go to state 112
    str_seq     go to state 113
    atom        go to state 114


State 675

   26 funcheader: DEF FINAL STATIC access NAME parameters ':' .

    $default  reduce using rule 26 (funcheader)


State 676

   12 funcheader: DEF FINAL NAME parameters ARROW test ':' .

    $default  reduce using rule 12 (funcheader)


State 677

   36 funcheader: DEF FINAL access STATIC NAME parameters ARROW . test ':'

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    test        go to state 716
    or_test     go to state 100
    and_test    go to state 101
    not_test    go to state 102
    comparison  go to state 103
    expr        go to state 105
    xor_expr    go to state 106
    and_expr    go to state 107
    shift_expr  go to state 108
    arith_expr  go to state 109
    term        go to state 110
    factor      go to state 111
    power       go to state 112
    str_seq     go to state 113
    atom        go to state 114


State 678

   38 funcheader: DEF FINAL access STATIC NAME parameters ':' .

    $default  reduce using rule 38 (funcheader)


State 679

   19 funcheader: DEF FINAL access NAME parameters ARROW test . ':'

    ':'  shift, and go to state 717


State 680

   15 funcheader: DEF STATIC FINAL NAME parameters ARROW test . ':'

    ':'  shift, and go to state 718


State 681

   23 funcheader: DEF STATIC FINAL access NAME parameters ARROW . test ':'

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    test        go to state 719
    or_test     go to state 100
    and_test    go to state 101
    not_test    go to state 102
    comparison  go to state 103
    expr        go to state 105
    xor_expr    go to state 106
    and_expr    go to state 107
    shift_expr  go to state 108
    arith_expr  go to state 109
    term        go to state 110
    factor      go to state 111
    power       go to state 112
    str_seq     go to state 113
    atom        go to state 114


State 682

   25 funcheader: DEF STATIC FINAL access NAME parameters ':' .

    $default  reduce using rule 25 (funcheader)


State 683

   11 funcheader: DEF STATIC NAME parameters ARROW test ':' .

    $default  reduce using rule 11 (funcheader)


State 684

   35 funcheader: DEF STATIC access FINAL NAME parameters ARROW . test ':'

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    test        go to state 720
    or_test     go to state 100
    and_test    go to state 101
    not_test    go to state 102
    comparison  go to state 103
    expr        go to state 105
    xor_expr    go to state 106
    and_expr    go to state 107
    shift_expr  go to state 108
    arith_expr  go to state 109
    term        go to state 110
    factor      go to state 111
    power       go to state 112
    str_seq     go to state 113
    atom        go to state 114


State 685

   37 funcheader: DEF STATIC access FINAL NAME parameters ':' .

    $default  reduce using rule 37 (funcheader)


State 686

   20 funcheader: DEF STATIC access NAME parameters ARROW test . ':'

    ':'  shift, and go to state 721


State 687

   32 funcheader: DEF access FINAL STATIC NAME parameters ARROW . test ':'

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    test        go to state 722
    or_test     go to state 100
    and_test    go to state 101
    not_test    go to state 102
    comparison  go to state 103
    expr        go to state 105
    xor_expr    go to state 106
    and_expr    go to state 107
    shift_expr  go to state 108
    arith_expr  go to state 109
    term        go to state 110
    factor      go to state 111
    power       go to state 112
    str_seq     go to state 113
    atom        go to state 114


State 688

   34 funcheader: DEF access FINAL STATIC NAME parameters ':' .

    $default  reduce using rule 34 (funcheader)


State 689

   28 funcheader: DEF access FINAL NAME parameters ARROW test . ':'

    ':'  shift, and go to state 723


State 690

   31 funcheader: DEF access STATIC FINAL NAME parameters ARROW . test ':'

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    test        go to state 724
    or_test     go to state 100
    and_test    go to state 101
    not_test    go to state 102
    comparison  go to state 103
    expr        go to state 105
    xor_expr    go to state 106
    and_expr    go to state 107
    shift_expr  go to state 108
    arith_expr  go to state 109
    term        go to state 110
    factor      go to state 111
    power       go to state 112
    str_seq     go to state 113
    atom        go to state 114


State 691

   33 funcheader: DEF access STATIC FINAL NAME parameters ':' .

    $default  reduce using rule 33 (funcheader)


State 692

   27 funcheader: DEF access STATIC NAME parameters ARROW test . ':'

    ':'  shift, and go to state 725


State 693

    8 funcheader: DEF access NAME parameters ARROW test ':' .

    $default  reduce using rule 8 (funcheader)


State 694

  389 arglist: '*' test ',' STAR_2 test .

    $default  reduce using rule 389 (arglist)


State 695

  393 arglist: '*' test comma_arg_seq ',' STAR_2 . test

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    test        go to state 726
    or_test     go to state 100
    and_test    go to state 101
    not_test    go to state 102
    comparison  go to state 103
    expr        go to state 105
    xor_expr    go to state 106
    and_expr    go to state 107
    shift_expr  go to state 108
    arith_expr  go to state 109
    term        go to state 110
    factor      go to state 111
    power       go to state 112
    str_seq     go to state 113
    atom        go to state 114


State 696

  384 comma_arg_seq: comma_arg_seq ',' argument .

    $default  reduce using rule 384 (comma_arg_seq)


State 697

  407 comma_default_arg_seq: comma_default_arg_seq ',' default_arg .

    $default  reduce using rule 407 (comma_default_arg_seq)


State 698

  400 arglist: arg_comma_seq '*' test ',' STAR_2 . test

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    test        go to state 727
    or_test     go to state 100
    and_test    go to state 101
    not_test    go to state 102
    comparison  go to state 103
    expr        go to state 105
    xor_expr    go to state 106
    and_expr    go to state 107
    shift_expr  go to state 108
    arith_expr  go to state 109
    term        go to state 110
    factor      go to state 111
    power       go to state 112
    str_seq     go to state 113
    atom        go to state 114


State 699

  384 comma_arg_seq: comma_arg_seq ',' . argument
  404 arglist: arg_comma_seq '*' test comma_arg_seq ',' . STAR_2 test
  406 comma_default_arg_seq: ',' . default_arg

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    STAR_2        shift, and go to state 728
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    test         go to state 291
    or_test      go to state 100
    and_test     go to state 101
    not_test     go to state 102
    comparison   go to state 103
    expr         go to state 105
    xor_expr     go to state 106
    and_expr     go to state 107
    shift_expr   go to state 108
    arith_expr   go to state 109
    term         go to state 110
    factor       go to state 111
    power        go to state 112
    str_seq      go to state 113
    atom         go to state 114
    default_arg  go to state 635
    argument     go to state 696


State 700

  403 arglist: arg_comma_seq '*' test comma_arg_seq comma_default_arg_seq .
  407 comma_default_arg_seq: comma_default_arg_seq . ',' default_arg

    ','  shift, and go to state 639

    $default  reduce using rule 403 (arglist)


State 701

  417 comp_if: IF . or_test
  418        | IF . or_test comp_iter

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    or_test     go to state 729
    and_test    go to state 101
    not_test    go to state 102
    comparison  go to state 103
    expr        go to state 105
    xor_expr    go to state 106
    and_expr    go to state 107
    shift_expr  go to state 108
    arith_expr  go to state 109
    term        go to state 110
    factor      go to state 111
    power       go to state 112
    str_seq     go to state 113
    atom        go to state 114


State 702

  416 comp_for: FOR exprlist IN or_test comp_iter .

    $default  reduce using rule 416 (comp_for)


State 703

  413 comp_iter: comp_for .

    $default  reduce using rule 413 (comp_iter)


State 704

  414 comp_iter: comp_if .

    $default  reduce using rule 414 (comp_iter)


State 705

  318 comma_test_colon_test_seq: ',' test ':' . test

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    test        go to state 730
    or_test     go to state 100
    and_test    go to state 101
    not_test    go to state 102
    comparison  go to state 103
    expr        go to state 105
    xor_expr    go to state 106
    and_expr    go to state 107
    shift_expr  go to state 108
    arith_expr  go to state 109
    term        go to state 110
    factor      go to state 111
    power       go to state 112
    str_seq     go to state 113
    atom        go to state 114


State 706

  319 comma_test_colon_test_seq: comma_test_colon_test_seq ',' test . ':' test

    ':'  shift, and go to state 731


State 707

  149 for_stmt: for_header IN testlist ':' suite ELSE ':' . suite

    IMPORT        shift, and go to state 1
    END           shift, and go to state 33
    NOT           shift, and go to state 34
    DEF           shift, and go to state 35
    IF            shift, and go to state 36
    WHILE         shift, and go to state 37
    FOR           shift, and go to state 38
    TRY           shift, and go to state 39
    NONLOCAL      shift, and go to state 40
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    WITH          shift, and go to state 48
    DEL           shift, and go to state 49
    RETURN        shift, and go to state 50
    PRINT         shift, and go to state 51
    GLOBAL        shift, and go to state 52
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    PASS          shift, and go to state 55
    CHAR_VALUE    shift, and go to state 56
    BREAK         shift, and go to state 57
    CONTINUE      shift, and go to state 58
    ','           shift, and go to state 59
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '*'           shift, and go to state 64
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    funcdef               go to state 67
    funcheader            go to state 68
    stmt                  go to state 69
    simple_stmt           go to state 70
    small_stmt            go to state 71
    expr_stmt             go to state 72
    testlist_star_expr    go to state 73
    comma_test_star       go to state 74
    comma_test_star_seqJ  go to state 75
    print_stmt            go to state 76
    del_stmt              go to state 77
    pass_stmt             go to state 78
    flow_stmt             go to state 79
    break_stmt            go to state 80
    continue_stmt         go to state 81
    return_stmt           go to state 82
    import_stmt           go to state 83
    import_name           go to state 13
    global_stmt           go to state 84
    nonlocal_stmt         go to state 85
    compound_stmt         go to state 86
    vardef                go to state 87
    if_stmt               go to state 88
    if_header             go to state 89
    while_stmt            go to state 90
    while_header          go to state 91
    for_stmt              go to state 92
    for_header            go to state 93
    try_header            go to state 94
    try_stmt              go to state 95
    with_stmt             go to state 96
    list_stmt             go to state 97
    suite                 go to state 732
    test                  go to state 99
    or_test               go to state 100
    and_test              go to state 101
    not_test              go to state 102
    comparison            go to state 103
    star_expr             go to state 104
    expr                  go to state 105
    xor_expr              go to state 106
    and_expr              go to state 107
    shift_expr            go to state 108
    arith_expr            go to state 109
    term                  go to state 110
    factor                go to state 111
    power                 go to state 112
    str_seq               go to state 113
    atom                  go to state 114


State 708

  374 classheader: FINAL STATIC access CLASS NAME '(' dotted_as_names ')' ':' .

    $default  reduce using rule 374 (classheader)


State 709

  380 classheader: FINAL access STATIC CLASS NAME '(' dotted_as_names ')' ':' .

    $default  reduce using rule 380 (classheader)


State 710

  373 classheader: STATIC FINAL access CLASS NAME '(' dotted_as_names ')' ':' .

    $default  reduce using rule 373 (classheader)


State 711

  379 classheader: STATIC access FINAL CLASS NAME '(' dotted_as_names ')' ':' .

    $default  reduce using rule 379 (classheader)


State 712

  378 classheader: access FINAL STATIC CLASS NAME '(' dotted_as_names ')' ':' .

    $default  reduce using rule 378 (classheader)


State 713

  377 classheader: access STATIC FINAL CLASS NAME '(' dotted_as_names ')' ':' .

    $default  reduce using rule 377 (classheader)


State 714

   16 funcheader: DEF FINAL STATIC NAME parameters ARROW test ':' .

    $default  reduce using rule 16 (funcheader)


State 715

   24 funcheader: DEF FINAL STATIC access NAME parameters ARROW test . ':'

    ':'  shift, and go to state 733


State 716

   36 funcheader: DEF FINAL access STATIC NAME parameters ARROW test . ':'

    ':'  shift, and go to state 734


State 717

   19 funcheader: DEF FINAL access NAME parameters ARROW test ':' .

    $default  reduce using rule 19 (funcheader)


State 718

   15 funcheader: DEF STATIC FINAL NAME parameters ARROW test ':' .

    $default  reduce using rule 15 (funcheader)


State 719

   23 funcheader: DEF STATIC FINAL access NAME parameters ARROW test . ':'

    ':'  shift, and go to state 735


State 720

   35 funcheader: DEF STATIC access FINAL NAME parameters ARROW test . ':'

    ':'  shift, and go to state 736


State 721

   20 funcheader: DEF STATIC access NAME parameters ARROW test ':' .

    $default  reduce using rule 20 (funcheader)


State 722

   32 funcheader: DEF access FINAL STATIC NAME parameters ARROW test . ':'

    ':'  shift, and go to state 737


State 723

   28 funcheader: DEF access FINAL NAME parameters ARROW test ':' .

    $default  reduce using rule 28 (funcheader)


State 724

   31 funcheader: DEF access STATIC FINAL NAME parameters ARROW test . ':'

    ':'  shift, and go to state 738


State 725

   27 funcheader: DEF access STATIC NAME parameters ARROW test ':' .

    $default  reduce using rule 27 (funcheader)


State 726

  393 arglist: '*' test comma_arg_seq ',' STAR_2 test .

    $default  reduce using rule 393 (arglist)


State 727

  400 arglist: arg_comma_seq '*' test ',' STAR_2 test .

    $default  reduce using rule 400 (arglist)


State 728

  404 arglist: arg_comma_seq '*' test comma_arg_seq ',' STAR_2 . test

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    test        go to state 739
    or_test     go to state 100
    and_test    go to state 101
    not_test    go to state 102
    comparison  go to state 103
    expr        go to state 105
    xor_expr    go to state 106
    and_expr    go to state 107
    shift_expr  go to state 108
    arith_expr  go to state 109
    term        go to state 110
    factor      go to state 111
    power       go to state 112
    str_seq     go to state 113
    atom        go to state 114


State 729

  417 comp_if: IF or_test .
  418        | IF or_test . comp_iter

    IF   shift, and go to state 701
    FOR  shift, and go to state 307

    $default  reduce using rule 417 (comp_if)

    comp_iter  go to state 740
    comp_for   go to state 703
    comp_if    go to state 704


State 730

  318 comma_test_colon_test_seq: ',' test ':' test .

    $default  reduce using rule 318 (comma_test_colon_test_seq)


State 731

  319 comma_test_colon_test_seq: comma_test_colon_test_seq ',' test ':' . test

    NOT           shift, and go to state 34
    FALSE         shift, and go to state 41
    TRUE          shift, and go to state 42
    NUMBER_INT    shift, and go to state 43
    NUMBER_LONG   shift, and go to state 44
    NUMBER_FLOAT  shift, and go to state 45
    NAME          shift, and go to state 46
    DOT_3         shift, and go to state 47
    STRING        shift, and go to state 53
    NONE          shift, and go to state 54
    CHAR_VALUE    shift, and go to state 56
    '('           shift, and go to state 60
    '['           shift, and go to state 61
    '+'           shift, and go to state 62
    '-'           shift, and go to state 63
    '~'           shift, and go to state 65
    '{'           shift, and go to state 66

    test        go to state 741
    or_test     go to state 100
    and_test    go to state 101
    not_test    go to state 102
    comparison  go to state 103
    expr        go to state 105
    xor_expr    go to state 106
    and_expr    go to state 107
    shift_expr  go to state 108
    arith_expr  go to state 109
    term        go to state 110
    factor      go to state 111
    power       go to state 112
    str_seq     go to state 113
    atom        go to state 114


State 732

  149 for_stmt: for_header IN testlist ':' suite ELSE ':' suite .

    $default  reduce using rule 149 (for_stmt)


State 733

   24 funcheader: DEF FINAL STATIC access NAME parameters ARROW test ':' .

    $default  reduce using rule 24 (funcheader)


State 734

   36 funcheader: DEF FINAL access STATIC NAME parameters ARROW test ':' .

    $default  reduce using rule 36 (funcheader)


State 735

   23 funcheader: DEF STATIC FINAL access NAME parameters ARROW test ':' .

    $default  reduce using rule 23 (funcheader)


State 736

   35 funcheader: DEF STATIC access FINAL NAME parameters ARROW test ':' .

    $default  reduce using rule 35 (funcheader)


State 737

   32 funcheader: DEF access FINAL STATIC NAME parameters ARROW test ':' .

    $default  reduce using rule 32 (funcheader)


State 738

   31 funcheader: DEF access STATIC FINAL NAME parameters ARROW test ':' .

    $default  reduce using rule 31 (funcheader)


State 739

  404 arglist: arg_comma_seq '*' test comma_arg_seq ',' STAR_2 test .

    $default  reduce using rule 404 (arglist)


State 740

  418 comp_if: IF or_test comp_iter .

    $default  reduce using rule 418 (comp_if)


State 741

  319 comma_test_colon_test_seq: comma_test_colon_test_seq ',' test ':' test .

    $default  reduce using rule 319 (comma_test_colon_test_seq)
