m4_init()
m4_define([b4_mergers], 
[[]])

m4_define([b4_symbol_numbers],


m4_define([b4_type_names],
[[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209]])

m4_define([b4_actions], 
[b4_case(2, [b4_syncline(115, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"file_input: program ENDMARKER\n";
										p->check_inhertance_list();
						if(!p->errRecovery->errQ->isEmpty())
								p->errRecovery->printErrQueue();
						p->print_symbol();
						ast->print(]b4_rhs_value(2, 1, [[tn]])[, 0);
						Streams::verbose().flush();	
								}]])

b4_case(3, [b4_syncline(125, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"program : import_stmt ';' temp2 \n";}]])

b4_case(4, [b4_syncline(126, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"program : temp2 \n";}]])

b4_case(5, [b4_syncline(130, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"temp2: classdef temp2\n";
							ast->addNext(]b4_rhs_value(2, 1, [[tn]])[,]b4_rhs_value(2, 2, [[tn]])[);
							cout<<"enter upper"<<endl;
						}]])

b4_case(6, [b4_syncline(134, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"temp2: classdef \n";
							//ast->createClassNode();
							cout<<"enter classdef"<<endl;
					}]])

b4_case(7, [b4_syncline(151, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {
							testfunction = p->finishFunctionDeclaration(testfunction,linefunc,colmfunc);
							]b4_lhs_value([[tn]])[=ast->createFunctionNode(testfunction,]b4_rhs_value(2, 2, [[tn]])[,NULL);
							parameters.clear();
							linefunc=0;colmfunc=0;
							Streams::verbose() <<"funcdef:	funcheader suite \n";
						  }]])

b4_case(8, [b4_syncline(159, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"funcheader:	DEF  NAME parameters ARROW test ':'  \n";}]])

b4_case(9, [b4_syncline(160, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"funcheader:  DEF access NAME parameters ARROW test ':'  \n";}]])

b4_case(10, [b4_syncline(161, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {
											testfunction = p->createTypeFunctionHeader(t,ss,pp,pro,ff, ]b4_rhs_value(4, 2, [[r.strVal]])[,parameters,yylval.r.lineNum, yylval.r.colNum);
											pp=true;ff=false;ss=false;pro=false;
											parameters.clear();
											linefunc=yylval.r.lineNum;
											colmfunc=yylval.r.colNum;
											Streams::verbose() <<"funcheader: DEF NAME parameters ':' \n";
											
									   }]])

b4_case(11, [b4_syncline(170, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    { 
												testfunction = p->createTypeFunctionHeader(t,ss,pp,pro,ff, ]b4_rhs_value(5, 3, [[r.strVal]])[,parameters,yylval.r.lineNum, yylval.r.colNum);
											pp=true;ff=false;ss=false;pro=false;
											parameters.clear();
											linefunc=yylval.r.lineNum;
											colmfunc=yylval.r.colNum;
												Streams::verbose() <<"funcheader: DEF access NAME parameters ':' \n";
											  }]])

b4_case(12, [b4_syncline(178, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"funcheader: DEF STATIC NAME parameters ARROW test ':' \n";}]])

b4_case(13, [b4_syncline(179, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"funcheader: DEF FINAL NAME parameters ARROW test ':' \n";}]])

b4_case(14, [b4_syncline(180, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {
												testfunction = p->createTypeFunctionHeader(t,true,pp,pro,ff, ]b4_rhs_value(5, 3, [[r.strVal]])[,parameters,yylval.r.lineNum, yylval.r.colNum);
											pp=true;ff=false;ss=false;pro=false;
											parameters.clear();
											linefunc=yylval.r.lineNum;
											colmfunc=yylval.r.colNum;
												Streams::verbose() <<"funcheader: DEF STATIC NAME parameters ':' \n";
											 }]])

b4_case(15, [b4_syncline(188, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {
											testfunction = p->createTypeFunctionHeader(t,ss,pp,pro,true, ]b4_rhs_value(5, 3, [[r.strVal]])[,parameters,yylval.r.lineNum, yylval.r.colNum);
											pp=true;ff=false;ss=false;pro=false;
											parameters.clear();
											linefunc=yylval.r.lineNum;
											colmfunc=yylval.r.colNum;
												Streams::verbose() <<"funcheader: DEF FINAL NAME parameters ':' \n";
											 }]])

b4_case(16, [b4_syncline(196, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"funcheader: DEF STATIC FINAL NAME parameters ARROW test ':' \n";}]])

b4_case(17, [b4_syncline(197, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"funcheader: DEF FINAL STATIC NAME parameters ARROW test ':'  \n";}]])

b4_case(18, [b4_syncline(198, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {
														testfunction = p->createTypeFunctionHeader(t,true,pp,pro,true, ]b4_rhs_value(6, 4, [[r.strVal]])[,parameters,yylval.r.lineNum, yylval.r.colNum);
											pp=true;ff=false;ss=false;pro=false;
											parameters.clear();
											linefunc=yylval.r.lineNum;
											colmfunc=yylval.r.colNum;
														Streams::verbose() <<"funcheader: DEF STATIC FINAL NAME parameters ':'  \n";
												    }]])

b4_case(19, [b4_syncline(206, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {
													testfunction = p->createTypeFunctionHeader(t,true,pp,pro,true, ]b4_rhs_value(6, 4, [[r.strVal]])[,parameters,yylval.r.lineNum, yylval.r.colNum);
											pp=true;ff=false;ss=false;pro=false;
											parameters.clear();
											linefunc=yylval.r.lineNum;
											colmfunc=yylval.r.colNum;
													Streams::verbose() <<"funcheader: DEF FINAL STATIC NAME parameters ':'  \n";
													}]])

b4_case(20, [b4_syncline(214, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {
																testfunction = p->createTypeFunctionHeader(t,ss,pp,pro,true, ]b4_rhs_value(8, 4, [[r.strVal]])[,parameters,yylval.r.lineNum, yylval.r.colNum);
											pp=true;ff=false;ss=false;pro=false;
											parameters.clear();
											linefunc=yylval.r.lineNum;
											colmfunc=yylval.r.colNum;
																Streams::verbose() <<"funcheader: DEF FINAL access NAME parameters ARROW test ':'  \n";
															  }]])

b4_case(21, [b4_syncline(222, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"funcheader: DEF STATIC access NAME parameters ARROW test ':'  \n";}]])

b4_case(22, [b4_syncline(223, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {
											testfunction = p->createTypeFunctionHeader(t,true,pp,pro,ff, ]b4_rhs_value(6, 4, [[r.strVal]])[,parameters,yylval.r.lineNum, yylval.r.colNum);
											pp=true;ff=false;ss=false;pro=false;
											parameters.clear();
											linefunc=yylval.r.lineNum;
														colmfunc=yylval.r.colNum;Streams::verbose() <<"funcheader: DEF STATIC access NAME parameters ':'  \n";
													}]])

b4_case(23, [b4_syncline(230, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {
														testfunction = p->createTypeFunctionHeader(t,ss,pp,pro,true, ]b4_rhs_value(6, 4, [[r.strVal]])[,parameters,yylval.r.lineNum, yylval.r.colNum);
											pp=true;ff=false;ss=false;pro=false;
											parameters.clear();
											linefunc=yylval.r.lineNum;
											colmfunc=yylval.r.colNum;
														Streams::verbose() <<"funcheader: DEF STATIC access NAME parameters ':' ";
													}]])

b4_case(24, [b4_syncline(238, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"funcheader: DEF STATIC FINAL access NAME parameters ARROW test ':'  \n";}]])

b4_case(25, [b4_syncline(239, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"funcheader: DEF FINAL STATIC access NAME parameters ARROW test ':'  \n";}]])

b4_case(26, [b4_syncline(240, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {
											testfunction = p->createTypeFunctionHeader(t,true,pp,pro,true, ]b4_rhs_value(7, 5, [[r.strVal]])[,parameters,yylval.r.lineNum, yylval.r.colNum);
											pp=true;ff=false;ss=false;pro=false;
											parameters.clear();
											linefunc=yylval.r.lineNum;
											colmfunc=yylval.r.colNum;
															Streams::verbose() <<"funcheader: DEF STATIC FINAL access NAME parameters ':'  \n";
														  }]])

b4_case(27, [b4_syncline(248, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {
															testfunction = p->createTypeFunctionHeader(t,true,pp,pro,true, ]b4_rhs_value(7, 5, [[r.strVal]])[,parameters,yylval.r.lineNum, yylval.r.colNum);
											pp=true;ff=false;ss=false;pro=false;
											parameters.clear();
											linefunc=yylval.r.lineNum;
															colmfunc=yylval.r.colNum;Streams::verbose() <<"funcheader: DEF FINAL STATIC access NAME parameters ':'  \n";
														  }]])

b4_case(28, [b4_syncline(255, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"funcheader: DEF access STATIC NAME parameters ARROW test ':'  \n";}]])

b4_case(29, [b4_syncline(256, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"funcheader: DEF access FINAL NAME parameters ARROW test ':'  \n";}]])

b4_case(30, [b4_syncline(257, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {
														testfunction = p->createTypeFunctionHeader(t,true,pp,pro,ff, ]b4_rhs_value(6, 4, [[r.strVal]])[,parameters,yylval.r.lineNum, yylval.r.colNum);
											pp=true;ff=false;ss=false;pro=false;
											parameters.clear();
											linefunc=yylval.r.lineNum;
											colmfunc=yylval.r.colNum;
														Streams::verbose() <<"funcheader: DEF access STATIC NAME parameters ':'  \n";
													}]])

b4_case(31, [b4_syncline(265, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {
														testfunction = p->createTypeFunctionHeader(t,ss,pp,pro,true, ]b4_rhs_value(6, 4, [[r.strVal]])[,parameters,yylval.r.lineNum, yylval.r.colNum);
											pp=true;ff=false;ss=false;pro=false;
											parameters.clear();
											linefunc=yylval.r.lineNum;
											colmfunc=yylval.r.colNum;
														Streams::verbose() <<"funcheader: DEF access FINAL NAME parameters ':'  \n";
													}]])

b4_case(32, [b4_syncline(273, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"funcheader: DEF access STATIC FINAL NAME parameters ARROW test ':'  \n";}]])

b4_case(33, [b4_syncline(274, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"funcheader: DEF access FINAL STATIC NAME parameters ARROW test ':'  \n";}]])

b4_case(34, [b4_syncline(275, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {
															testfunction = p->createTypeFunctionHeader(t,true,pp,pro,true, ]b4_rhs_value(7, 5, [[r.strVal]])[,parameters,yylval.r.lineNum, yylval.r.colNum);
											pp=true;ff=false;ss=false;pro=false;
											parameters.clear();
											linefunc=yylval.r.lineNum;
											colmfunc=yylval.r.colNum;
															Streams::verbose() <<"funcheader: DEF access STATIC FINAL NAME parameters ':'  \n";
			   											  }]])

b4_case(35, [b4_syncline(283, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {
															testfunction = p->createTypeFunctionHeader(t,true,pp,pro,true, ]b4_rhs_value(7, 5, [[r.strVal]])[,parameters,yylval.r.lineNum, yylval.r.colNum);
											pp=true;ff=false;ss=false;pro=false;
											parameters.clear();
											linefunc=yylval.r.lineNum;
															colmfunc=yylval.r.colNum;Streams::verbose() <<"funcheader: DEF access FINAL STATIC NAME parameters ':'  \n";
			  											  }]])

b4_case(36, [b4_syncline(290, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"funcheader: DEF STATIC access FINAL NAME parameters ARROW test ':'  \n";}]])

b4_case(37, [b4_syncline(291, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"funcheader: DEF FINAL access STATIC NAME parameters ARROW test ':'  \n";}]])

b4_case(38, [b4_syncline(292, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {
															testfunction = p->createTypeFunctionHeader(t,true,pp,pro,true, ]b4_rhs_value(7, 5, [[r.strVal]])[,parameters,yylval.r.lineNum, yylval.r.colNum);
											pp=true;ff=false;ss=false;pro=false;
											parameters.clear();
											linefunc=yylval.r.lineNum;
															colmfunc=yylval.r.colNum;Streams::verbose() <<"funcheader: DEF STATIC access FINAL NAME parameters ':'  \n";
			  											  }]])

b4_case(39, [b4_syncline(299, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {
															testfunction = p->createTypeFunctionHeader(t,true,pp,pro,true, ]b4_rhs_value(7, 5, [[r.strVal]])[,parameters,yylval.r.lineNum, yylval.r.colNum);
											pp=true;ff=false;ss=false;pro=false;
											parameters.clear();
											linefunc=yylval.r.lineNum;
															colmfunc=yylval.r.colNum;Streams::verbose() <<"funcheader: DEF FINAL access STATIC NAME parameters ':'  \n";
														  }]])

b4_case(40, [b4_syncline(308, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"parameters:'(' arglist ')'\n";}]])

b4_case(41, [b4_syncline(309, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"parameters:'(' ')'\n";}]])

b4_case(42, [b4_syncline(312, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {	]b4_lhs_value([[tn]])[=]b4_rhs_value(1, 1, [[tn]])[;	Streams::verbose() <<"stmt:	simple_stmt \n";}]])

b4_case(43, [b4_syncline(313, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {	]b4_lhs_value([[tn]])[=]b4_rhs_value(1, 1, [[tn]])[;	Streams::verbose() <<"stmt: compound_stmt\n";}]])

b4_case(44, [b4_syncline(315, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"simple_stmt: small_stmt ';' \n";}]])

b4_case(45, [b4_syncline(317, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"small_stmt: expr_stmt \n";}]])

b4_case(46, [b4_syncline(318, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"small_stmt: del_stmt \n";}]])

b4_case(47, [b4_syncline(319, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"small_stmt: pass_stmt \n";}]])

b4_case(48, [b4_syncline(320, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"small_stmt: flow_stmt \n";}]])

b4_case(49, [b4_syncline(321, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"small_stmt: import_stmt \n";}]])

b4_case(50, [b4_syncline(322, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"small_stmt: global_stmt \n";}]])

b4_case(51, [b4_syncline(323, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"small_stmt: nonlocal_stmt \n";}]])

b4_case(52, [b4_syncline(324, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"small_stmt: print_stmt \n";}]])

b4_case(53, [b4_syncline(327, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"expr_stmt:	testlist_star_expr augassign testlist \n";}]])

b4_case(54, [b4_syncline(328, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"expr_stmt: testlist_star_expr \n";}]])

b4_case(55, [b4_syncline(329, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"expr_stmt: testlist_star_expr right_testlist \n";}]])

b4_case(56, [b4_syncline(332, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"right_testlist: '=' testlist_star_expr right_testlist \n";}]])

b4_case(57, [b4_syncline(333, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"right_testlist: '=' testlist_star_expr \n";}]])

b4_case(58, [b4_syncline(336, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"testlist_star_expr: comma_test_star_seqJ \n";}]])

b4_case(59, [b4_syncline(337, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"testlist_star_expr: comma_test_star_seqJ ',' \n";}]])

b4_case(60, [b4_syncline(338, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"',' \n";}]])

b4_case(61, [b4_syncline(339, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"testlist_star_expr: test comma_test_star_seqJ \n";}]])

b4_case(62, [b4_syncline(340, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"testlist_star_expr: test \n";}]])

b4_case(63, [b4_syncline(341, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"testlist_star_expr: star_expr comma_test_star_seqJ ',' \n";}]])

b4_case(64, [b4_syncline(342, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"testlist_star_expr: star_expr ',' \n";}]])

b4_case(65, [b4_syncline(345, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"comma_test_star : ',' test \n";}]])

b4_case(66, [b4_syncline(346, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"comma_test_star : ',' star_expr \n";}]])

b4_case(67, [b4_syncline(349, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"comma_test_star_seqJ : comma_test_star_seqJ comma_test_star \n";}]])

b4_case(68, [b4_syncline(350, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"comma_test_star_seqJ : comma_test_star \n";}]])

b4_case(69, [b4_syncline(352, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"augassign:	PLUS_EQUAL \n";}]])

b4_case(70, [b4_syncline(353, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"augassign:	MINUS_EQUAL \n";}]])

b4_case(71, [b4_syncline(354, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"augassign:	STAR_EQUAL \n";}]])

b4_case(72, [b4_syncline(355, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"augassign:	DIV_EQUAL \n";}]])

b4_case(73, [b4_syncline(356, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"augassign:	MOD_EQUAL \n";}]])

b4_case(74, [b4_syncline(357, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"augassign:	AND_EQUAL \n";}]])

b4_case(75, [b4_syncline(358, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"augassign:	OR_EQUAL \n";}]])

b4_case(76, [b4_syncline(359, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"augassign:	SHAPOO_EQUAL \n";}]])

b4_case(77, [b4_syncline(360, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"augassign:	LESS_THAN_2_EQUAL \n";}]])

b4_case(78, [b4_syncline(361, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"augassign:	MORE_THAN_2_EQUAL \n";}]])

b4_case(79, [b4_syncline(362, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"augassign:	STAR_2_EQUAL \n";}]])

b4_case(80, [b4_syncline(363, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"augassign:	DIV_2_EQUAL \n";}]])

b4_case(81, [b4_syncline(366, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose()<<"access_modef: PRIVATE\n";acc_mod="private";pp=true;}]])

b4_case(82, [b4_syncline(367, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {pp=false;Streams::verbose()<<"access_modef:	PUBLIC\n";acc_mod="public";pp=false;}]])

b4_case(83, [b4_syncline(368, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {pro=true;Streams::verbose()<<"access_modef:	PROTECTED\n";acc_mod="protected";}]])

b4_case(84, [b4_syncline(370, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"print_stmt: PRINT exprlist \n";}]])

b4_case(85, [b4_syncline(371, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"del_stmt:   DEL exprlist \n";}]])

b4_case(86, [b4_syncline(374, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"pass_stmt:	PASS \n";}]])

b4_case(87, [b4_syncline(377, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"flow_stmt:	break_stmt \n";}]])

b4_case(88, [b4_syncline(378, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"flow_stmt: continue_stmt\n";}]])

b4_case(89, [b4_syncline(379, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"flow_stmt: return_stmt\n";}]])

b4_case(90, [b4_syncline(382, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"break_stmt: BREAK \n";}]])

b4_case(91, [b4_syncline(385, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"continue_stmt:	CONTINUE \n";}]])

b4_case(92, [b4_syncline(388, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"return_stmt:	RETURN testlist \n";}]])

b4_case(93, [b4_syncline(389, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"return_stmt:	RETURN \n";}]])

b4_case(94, [b4_syncline(393, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"import_stmt: import_name \n";}]])

b4_case(95, [b4_syncline(396, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"import_name: IMPORT dotted_as_names \n";}]])

b4_case(96, [b4_syncline(399, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"comma_dotted_as_name_seq: ',' dotted_as_name \n";}]])

b4_case(97, [b4_syncline(400, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"comma_dotted_as_name_seq: comma_dotted_as_name_seq ',' dotted_as_name \n";}]])

b4_case(98, [b4_syncline(402, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {
									Streams::verbose() <<"comma_dotted_as_name_seq: dotted_as_names: dotted_as_name \n";
								t_id=new char@{10@};
								strcpy(t_id,temp_id.c_str());
								inhertance_list.push_back(t_id);
								temp_id="";
					}]])

b4_case(99, [b4_syncline(409, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {
															Streams::verbose() <<"comma_dotted_as_name_seq: dotted_as_name comma_dotted_as_name_seq \n";
						t_id=new char@{10@};
								strcpy(t_id,temp_id.c_str());
								inhertance_list.push_back(t_id);
								temp_id="";
				 }]])

b4_case(100, [b4_syncline(419, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"dotted_as_name: dotted_name \n";}]])

b4_case(101, [b4_syncline(420, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"dotted_as_name: dotted_name AS NAME\n";}]])

b4_case(102, [b4_syncline(423, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"dotted_name: NAME \n"; temp_id=temp_id+]b4_rhs_value(1, 1, [[r.strVal]])[;}]])

b4_case(103, [b4_syncline(424, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"dotted_name: NAME dotted_name_seq \n";}]])

b4_case(104, [b4_syncline(427, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {
							Streams::verbose() <<"dotted_name_seq: '.' NAME \n";
							temp_id=temp_id+"."+]b4_rhs_value(2, 2, [[r.strVal]])[;
						}]])

b4_case(105, [b4_syncline(431, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {
												Streams::verbose() <<"dotted_name_seq: dotted_name_seq '.' NAME \n";
					temp_id=temp_id+"."+]b4_rhs_value(3, 3, [[r.strVal]])[;
				 }]])

b4_case(106, [b4_syncline(437, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"comma_name_seq :	',' NAME \n";}]])

b4_case(107, [b4_syncline(438, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"comma_name_seq :	comma_name_seq ',' NAME \n";}]])

b4_case(108, [b4_syncline(441, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"global_stmt: GLOBAL NAME \n";}]])

b4_case(109, [b4_syncline(442, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"global_stmt: GLOBAL NAME comma_name_seq\n";}]])

b4_case(110, [b4_syncline(445, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"nonlocal_stmt:	NONLOCAL NAME \n";}]])

b4_case(111, [b4_syncline(446, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"nonlocal_stmt: NONLOCAL NAME comma_name_seq \n";}]])

b4_case(112, [b4_syncline(449, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"compound_stmt:  if_stmt \n";}]])

b4_case(113, [b4_syncline(450, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"compound_stmt: while_stmt\n";}]])

b4_case(114, [b4_syncline(451, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"compound_stmt: for_stmt\n";}]])

b4_case(115, [b4_syncline(452, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"compound_stmt: try_stmt\n";}]])

b4_case(116, [b4_syncline(453, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"compound_stmt: with_stmt\n";}]])

b4_case(117, [b4_syncline(454, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"compound_stmt: funcdef\n";
								]b4_lhs_value([[tn]])[=]b4_rhs_value(1, 1, [[tn]])[;
							}]])

b4_case(118, [b4_syncline(457, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"compound_stmt: DEF classdef\n";
									]b4_lhs_value([[tn]])[=]b4_rhs_value(2, 2, [[tn]])[;
								}]])

b4_case(119, [b4_syncline(462, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"elif_seq :  ELIF test ':' suite \n";}]])

b4_case(120, [b4_syncline(463, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"elif_seq : elif_seq ELIF test ':' suite \n";}]])

b4_case(121, [b4_syncline(466, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"if_stmt:	IF test ':' suite \n";}]])

b4_case(122, [b4_syncline(467, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"if_stmt:	IF test ':' suite elif_seq \n";}]])

b4_case(123, [b4_syncline(468, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"if_stmt:	IF test ':' suite ELSE ':' suite \n";}]])

b4_case(124, [b4_syncline(469, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"if_stmt:	IF test ':' suite elif_seq ELSE ':' suite \n";}]])

b4_case(125, [b4_syncline(472, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"while_stmt: WHILE test ':' suite \n";}]])

b4_case(126, [b4_syncline(473, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"while_stmt:  WHILE test ':' suite ELSE ':' suite \n";}]])

b4_case(127, [b4_syncline(476, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"for_stmt:   FOR exprlist IN testlist ':' suite \n";}]])

b4_case(128, [b4_syncline(477, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"for_stmt:  FOR exprlist IN testlist ':' suite ELSE ':' suite\n";}]])

b4_case(129, [b4_syncline(480, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<" try_stmt:   TRY ':' suite try_except_cla_seq\n";}]])

b4_case(130, [b4_syncline(481, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<" try_stmt: TRY ':' suite try_except_cla_seq ELSE ':' suite\n";}]])

b4_case(131, [b4_syncline(482, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"try_stmt:  TRY ':' suite try_except_cla_seq FINALLY ':' suite\n";}]])

b4_case(132, [b4_syncline(483, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"try_stmt:  TRY ':' suite FINALLY ':' suite\n";}]])

b4_case(133, [b4_syncline(486, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"try_except_cla_seq: except_clause ':' suite \n";}]])

b4_case(134, [b4_syncline(487, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"try_except_cla_seq: try_except_cla_seq except_clause ':' suite\n";}]])

b4_case(135, [b4_syncline(490, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"with_seq:	',' with_item \n";}]])

b4_case(136, [b4_syncline(491, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"with_seq: with_seq ',' with_item\n";}]])

b4_case(137, [b4_syncline(494, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"with_stmt:  WITH with_item ':' suite \n";}]])

b4_case(138, [b4_syncline(495, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"with_stmt: WITH with_item with_seq ':' suite\n";}]])

b4_case(139, [b4_syncline(498, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<" with_item:  test\n";}]])

b4_case(140, [b4_syncline(499, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"with_item: test AS expr\n";}]])

b4_case(141, [b4_syncline(502, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"except_clause:  EXCEPT \n";}]])

b4_case(142, [b4_syncline(503, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"except_clause:  EXCEPT test\n";}]])

b4_case(143, [b4_syncline(504, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"except_clause:  EXCEPT test AS NAME\n";}]])

b4_case(144, [b4_syncline(507, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {	]b4_lhs_value([[tn]])[=]b4_rhs_value(1, 1, [[tn]])[;	Streams:: verbose() <<"list_stmt : stmt\n";}]])

b4_case(145, [b4_syncline(508, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams:: verbose() <<"list_stmt : stmt list_stmt\n";
						ast->addNext(]b4_rhs_value(2, 1, [[tn]])[,]b4_rhs_value(2, 2, [[tn]])[);
						]b4_lhs_value([[tn]])[=]b4_rhs_value(2, 1, [[tn]])[;	
			}]])

b4_case(146, [b4_syncline(514, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {
							Streams::verbose() <<"suite:	list_stmt END\n";
							]b4_lhs_value([[tn]])[=]b4_rhs_value(2, 1, [[tn]])[;	
						}]])

b4_case(147, [b4_syncline(518, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {	]b4_lhs_value([[tn]])[=NULL;	Streams::verbose() <<"suite:	END\n"; ]b4_lhs_value([[tn]])[=NULL;}]])

b4_case(148, [b4_syncline(521, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"test:	or_test\n";}]])

b4_case(149, [b4_syncline(522, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"or_test IF or_test ELSE test\n";}]])

b4_case(150, [b4_syncline(525, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"or_seq:	OR and_test \n";}]])

b4_case(151, [b4_syncline(526, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"or_seq: or_seq OR and_test \n";}]])

b4_case(152, [b4_syncline(529, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"or_test:	and_test\n";}]])

b4_case(153, [b4_syncline(530, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"or_test:	and_test or_seq\n";}]])

b4_case(154, [b4_syncline(533, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"and_seq: AND not_test \n";}]])

b4_case(155, [b4_syncline(534, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"and_seq: and_seq AND not_test \n";}]])

b4_case(156, [b4_syncline(537, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"and_test:	not_test\n";}]])

b4_case(157, [b4_syncline(538, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"and_test: not_test and_seq \n";}]])

b4_case(158, [b4_syncline(541, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"not_test:	NOT not_test\n";}]])

b4_case(159, [b4_syncline(542, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"not_test:	comparison\n";}]])

b4_case(160, [b4_syncline(545, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"comp_op_seq: comp_op expr \n";}]])

b4_case(161, [b4_syncline(546, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"comp_op_seq: comp_op_seq comp_op expr \n";}]])

b4_case(162, [b4_syncline(549, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"comparison: expr\n";}]])

b4_case(163, [b4_syncline(550, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"comparison: expr comp_op_seq\n";}]])

b4_case(164, [b4_syncline(553, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"comp_op: '<' \n";}]])

b4_case(165, [b4_syncline(554, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"comp_op: '>' \n";}]])

b4_case(166, [b4_syncline(555, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"comp_op: EQUAL \n";}]])

b4_case(167, [b4_syncline(556, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"comp_op: MORE_OR_EQUAL \n";}]])

b4_case(168, [b4_syncline(557, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"comp_op: LESS_OR_EQUAL \n";}]])

b4_case(169, [b4_syncline(558, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"comp_op: MORE_LESS \n";}]])

b4_case(170, [b4_syncline(559, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"comp_op: NOT_EQUAL \n";}]])

b4_case(171, [b4_syncline(560, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"comp_op: IN \n";}]])

b4_case(172, [b4_syncline(561, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"comp_op: NOT IN \n";}]])

b4_case(173, [b4_syncline(562, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"comp_op: IS \n";}]])

b4_case(174, [b4_syncline(563, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"comp_op: IS NOT \n";}]])

b4_case(175, [b4_syncline(566, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"star_expr: '*' expr \n";}]])

b4_case(176, [b4_syncline(569, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"or_xor_expr_seq: '|' xor_expr \n";}]])

b4_case(177, [b4_syncline(570, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"or_xor_expr_seq: or_xor_expr_seq '|' xor_expr\n";}]])

b4_case(178, [b4_syncline(572, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"expr: xor_expr\n";}]])

b4_case(179, [b4_syncline(573, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"expr: xor_expr or_xor_expr_seq\n";}]])

b4_case(180, [b4_syncline(576, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"sha_and_expr_seq: '^' and_expr \n";}]])

b4_case(181, [b4_syncline(577, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"sha_and_expr_seq: sha_and_expr_seq '^' and_expr\n";}]])

b4_case(182, [b4_syncline(580, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"xor_expr: and_expr\n";}]])

b4_case(183, [b4_syncline(581, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"xor_expr: and_expr sha_and_expr_seq\n";}]])

b4_case(184, [b4_syncline(584, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"and_shift_expr_seq: '&' shift_expr \n";}]])

b4_case(185, [b4_syncline(585, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"and_shift_expr_seq: and_shift_expr_seq '&' shift_expr\n";}]])

b4_case(186, [b4_syncline(588, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"and_expr: shift_expr\n";}]])

b4_case(187, [b4_syncline(589, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"and_expr: shift_expr and_shift_expr_seq\n";}]])

b4_case(188, [b4_syncline(592, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"arith_seq:	LESS_THAN_2 arith_expr \n";}]])

b4_case(189, [b4_syncline(593, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"arith_seq:	MORE_THAN_2 arith_expr \n";}]])

b4_case(190, [b4_syncline(594, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"arith_seq:	arith_seq LESS_THAN_2 arith_expr \n";}]])

b4_case(191, [b4_syncline(595, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"arith_seq:	arith_seq MORE_THAN_2 arith_expr \n";}]])

b4_case(192, [b4_syncline(598, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"shift_expr: arith_expr\n";}]])

b4_case(193, [b4_syncline(599, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"shift_expr: arith_expr arith_seq\n";}]])

b4_case(194, [b4_syncline(602, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"term_seq : '+' term \n";
						op=PLUS;
						]b4_lhs_value([[tn]])[=]b4_rhs_value(2, 2, [[tn]])[;
						}]])

b4_case(195, [b4_syncline(606, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"term_seq : '-' term \n";
							op=MINUS;
							]b4_lhs_value([[tn]])[=]b4_rhs_value(2, 2, [[tn]])[;
						}]])

b4_case(196, [b4_syncline(610, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"term_seq : term_seq '+' term \n";op=PLUS;
									k=ast->addNext(]b4_rhs_value(3, 1, [[tn]])[,]b4_rhs_value(3, 2, [[tn]])[);
									]b4_lhs_value([[tn]])[ = ast->createExprNode(k,NULL,op);
								}]])

b4_case(197, [b4_syncline(614, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"term_seq : term_seq '-' term \n";op=MINUS;
									k=ast->addNext(]b4_rhs_value(3, 1, [[tn]])[,]b4_rhs_value(3, 2, [[tn]])[);
									]b4_lhs_value([[tn]])[ = ast->createExprNode(k,NULL,op);
								}]])

b4_case(198, [b4_syncline(620, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"arith_expr: term\n";}]])

b4_case(199, [b4_syncline(621, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {
											Streams::verbose() <<"arith_expr: term term_seq\n";
											k=ast->addNext(]b4_rhs_value(2, 1, [[tn]])[,]b4_rhs_value(2, 2, [[tn]])[);
											cout<<"op= "<<op<<endl;
											]b4_lhs_value([[tn]])[ = ast->createExprNode(k,NULL,op);
											
										}]])

b4_case(200, [b4_syncline(631, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"factor_seq: '*' factor \n";
							op=MULT;
							]b4_lhs_value([[tn]])[=]b4_rhs_value(2, 2, [[tn]])[;
						}]])

b4_case(201, [b4_syncline(635, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"factor_seq: '/' factor \n";
								op=DIV;
							]b4_lhs_value([[tn]])[=]b4_rhs_value(2, 2, [[tn]])[;
							}]])

b4_case(202, [b4_syncline(639, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"factor_seq: '%' factor \n";
								op=MOD;
							]b4_lhs_value([[tn]])[=]b4_rhs_value(2, 2, [[tn]])[;
							}]])

b4_case(203, [b4_syncline(643, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"factor_seq: DIV_2 factor \n";}]])

b4_case(204, [b4_syncline(644, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"factor_seq: factor_seq '*' factor \n";
									op=MULT;
									]b4_lhs_value([[tn]])[ = ast->createExprNode(NULL,NULL,op);
									}]])

b4_case(205, [b4_syncline(648, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"factor_seq: factor_seq '/' factor \n";
									op=DIV;
									]b4_lhs_value([[tn]])[ = ast->createExprNode(NULL,NULL,op);
									}]])

b4_case(206, [b4_syncline(652, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"factor_seq: factor_seq '%' factor \n";
									op=MOD;
									]b4_lhs_value([[tn]])[ = ast->createExprNode(NULL,NULL,op);
									}]])

b4_case(207, [b4_syncline(656, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"factor_seq: factor_seq DIV_2 factor \n";}]])

b4_case(208, [b4_syncline(659, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"term: 	factor\n";]b4_lhs_value([[tn]])[=]b4_rhs_value(1, 1, [[tn]])[;}]])

b4_case(209, [b4_syncline(660, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"term: 	factor factor_seq\n";
								]b4_lhs_value([[tn]])[ = ast->createExprNode(NULL,NULL,op);
							}]])

b4_case(210, [b4_syncline(665, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"factor: '+' factor \n";}]])

b4_case(211, [b4_syncline(666, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"factor: '-' factor \n";}]])

b4_case(212, [b4_syncline(667, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"factor: '~' factor \n";}]])

b4_case(213, [b4_syncline(668, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"factor: power\n";]b4_lhs_value([[tn]])[=]b4_rhs_value(1, 1, [[tn]])[;}]])

b4_case(214, [b4_syncline(671, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"trailer_seq: trailer \n";}]])

b4_case(215, [b4_syncline(672, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"trailer_seq: trailer_seq trailer \n";}]])

b4_case(216, [b4_syncline(675, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"power:	atom\n";]b4_lhs_value([[tn]])[=]b4_rhs_value(1, 1, [[tn]])[;}]])

b4_case(217, [b4_syncline(676, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"power: atom trailer_seq \n";}]])

b4_case(218, [b4_syncline(677, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"power: atom trailer_seq STAR_2 factor \n";}]])

b4_case(219, [b4_syncline(678, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"power: atom STAR_2 factor \n";}]])

b4_case(220, [b4_syncline(681, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"str_seq:	STRING \n";}]])

b4_case(221, [b4_syncline(682, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"str_seq:	str_seq STRING \n";}]])

b4_case(222, [b4_syncline(685, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"atom:	'(' ')' \n";}]])

b4_case(223, [b4_syncline(686, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"atom:	'(' testlist_comp ')' \n";}]])

b4_case(224, [b4_syncline(687, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"atom:	'@{' '@}' \n";}]])

b4_case(225, [b4_syncline(688, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"atom: '{' '}' \n";}]])

b4_case(226, [b4_syncline(689, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"atom: '{' '}' \n";}]])

b4_case(227, [b4_syncline(690, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"atom: '{' dictorsetmaker '}' \n";}]])

b4_case(228, [b4_syncline(691, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    { Streams::verbose() <<"atom: NAME\n";}]])

b4_case(229, [b4_syncline(692, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"atom: DEF NAME\n";
											]b4_lhs_value([[var]])[=p->addVariableToCurrentScope(]b4_rhs_value(2, 2, [[r.strVal]])[,acc_mod,0,0, yylval.r.lineNum, yylval.r.colNum,0,0);
										v=]b4_lhs_value([[var]])[;
									]b4_lhs_value([[tn]])[ = ast->createIDNode(v,0,0);
									}]])

b4_case(230, [b4_syncline(697, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"atom: DEF access NAME\n";
											Streams::verbose()<<"var_declaration: access_modef ID\n";
									]b4_lhs_value([[var]])[=p->addVariableToCurrentScope(]b4_rhs_value(3, 3, [[r.strVal]])[,acc_mod,0,0, yylval.r.lineNum, yylval.r.colNum,false,false);
									v=]b4_lhs_value([[var]])[;
									acc_mod="";
									]b4_lhs_value([[tn]])[ = ast->createIDNode(v,0,0);
											}]])

b4_case(231, [b4_syncline(704, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"atom: DEF STATIC NAME\n";
											Streams::verbose()<<"var_declaration: STATIC ID\n";
											]b4_lhs_value([[var]])[=p->addVariableToCurrentScope(]b4_rhs_value(3, 3, [[r.strVal]])[,acc_mod,1,0, yylval.r.lineNum, yylval.r.colNum,false,false);
											v=]b4_lhs_value([[var]])[;
											]b4_lhs_value([[tn]])[ = ast->createIDNode(v,0,0);
										}]])

b4_case(232, [b4_syncline(710, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"atom: DEF FINAL NAME\n";
												Streams::verbose()<<"var_declaration: FINAL ID\n";
												]b4_lhs_value([[var]])[=p->addVariableToCurrentScope(]b4_rhs_value(3, 3, [[r.strVal]])[,acc_mod,0,1, yylval.r.lineNum, yylval.r.colNum,false,false);
													v=]b4_lhs_value([[var]])[;
													]b4_lhs_value([[tn]])[ = ast->createIDNode(v,0,0);
										}]])

b4_case(233, [b4_syncline(716, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"atom: DEF STATIC FINAL NAME\n";
													Streams::verbose()<<"var_declaration: STATIC FINAL ID\n";
													]b4_lhs_value([[var]])[=p->addVariableToCurrentScope(]b4_rhs_value(4, 4, [[r.strVal]])[,acc_mod,1,1, yylval.r.lineNum, yylval.r.colNum,false,false);
													v=]b4_lhs_value([[var]])[;
													]b4_lhs_value([[tn]])[ = ast->createIDNode(v,0,0);
												}]])

b4_case(234, [b4_syncline(722, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"atom: DEF FINAL STATIC NAME\n";
													Streams::verbose()<<"var_declaration: STATIC FINAL ID\n";
													]b4_lhs_value([[var]])[=p->addVariableToCurrentScope(]b4_rhs_value(4, 4, [[r.strVal]])[,acc_mod,1,1, yylval.r.lineNum, yylval.r.colNum,false,false);
													v=]b4_lhs_value([[var]])[;
													]b4_lhs_value([[tn]])[ = ast->createIDNode(v,0,0);
												}]])

b4_case(235, [b4_syncline(728, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"atom: DEF STATIC access NAME\n";
													]b4_lhs_value([[var]])[=p->addVariableToCurrentScope(]b4_rhs_value(4, 4, [[r.strVal]])[,acc_mod,1,0, yylval.r.lineNum, yylval.r.colNum,false,false);
													v=]b4_lhs_value([[var]])[;
													acc_mod="";
													]b4_lhs_value([[tn]])[ = ast->createIDNode(v,0,0);
												}]])

b4_case(236, [b4_syncline(734, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"atom: DEF FINAL access NAME\n";
													]b4_lhs_value([[var]])[=p->addVariableToCurrentScope(]b4_rhs_value(4, 4, [[r.strVal]])[,acc_mod,0,1, yylval.r.lineNum, yylval.r.colNum,false,false);
													v=]b4_lhs_value([[var]])[;
													acc_mod="";
													]b4_lhs_value([[tn]])[ = ast->createIDNode(v,0,0);
												}]])

b4_case(237, [b4_syncline(740, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"atom: DEF STATIC FINAL access NAME\n";
															]b4_lhs_value([[var]])[=p->addVariableToCurrentScope(]b4_rhs_value(5, 5, [[r.strVal]])[,acc_mod,1,1, yylval.r.lineNum, yylval.r.colNum,false,false);
															v=]b4_lhs_value([[var]])[;
															acc_mod="";
															]b4_lhs_value([[tn]])[ = ast->createIDNode(v,0,0);
														}]])

b4_case(238, [b4_syncline(746, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"atom: DEF FINAL STATIC access NAME\n";
															]b4_lhs_value([[var]])[=p->addVariableToCurrentScope(]b4_rhs_value(5, 5, [[r.strVal]])[,acc_mod,1,1, yylval.r.lineNum, yylval.r.colNum,false,false);
															v=]b4_lhs_value([[var]])[;
															acc_mod="";
															]b4_lhs_value([[tn]])[ = ast->createIDNode(v,0,0);
														}]])

b4_case(239, [b4_syncline(752, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"atom: DEF access STATIC NAME\n";
													]b4_lhs_value([[var]])[=p->addVariableToCurrentScope(]b4_rhs_value(4, 4, [[r.strVal]])[,acc_mod,1,0, yylval.r.lineNum, yylval.r.colNum,false,false);
													v=]b4_lhs_value([[var]])[;
													acc_mod="";
													]b4_lhs_value([[tn]])[ = ast->createIDNode(v,0,0);
												}]])

b4_case(240, [b4_syncline(758, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"atom: DEF access FINAL NAME\n";
													]b4_lhs_value([[var]])[=p->addVariableToCurrentScope(]b4_rhs_value(4, 4, [[r.strVal]])[,acc_mod,0,1, yylval.r.lineNum, yylval.r.colNum,false,false);
													v=]b4_lhs_value([[var]])[;
													acc_mod="";
													]b4_lhs_value([[tn]])[ = ast->createIDNode(v,0,0);
											}]])

b4_case(241, [b4_syncline(764, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"atom: DEF access STATIC FINAL NAME\n";
														]b4_lhs_value([[var]])[=p->addVariableToCurrentScope(]b4_rhs_value(5, 5, [[r.strVal]])[,acc_mod,1,1, yylval.r.lineNum, yylval.r.colNum,false,false);
														v=]b4_lhs_value([[var]])[;
														acc_mod="";
														]b4_lhs_value([[tn]])[ = ast->createIDNode(v,0,0);
													}]])

b4_case(242, [b4_syncline(770, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"atom: DEF access FINAL STATIC NAME\n";
														]b4_lhs_value([[var]])[=p->addVariableToCurrentScope(]b4_rhs_value(5, 5, [[r.strVal]])[,acc_mod,1,1, yylval.r.lineNum, yylval.r.colNum,false,false);
														v=]b4_lhs_value([[var]])[;
														acc_mod="";
														]b4_lhs_value([[tn]])[ = ast->createIDNode(v,0,0);
													}]])

b4_case(243, [b4_syncline(776, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"atom: DEF STATIC access FINAL NAME\n";
															]b4_lhs_value([[var]])[=p->addVariableToCurrentScope(]b4_rhs_value(5, 5, [[r.strVal]])[,acc_mod,1,1, yylval.r.lineNum, yylval.r.colNum,false,false);
															v=]b4_lhs_value([[var]])[;
															acc_mod="";
															]b4_lhs_value([[tn]])[ = ast->createIDNode(v,0,0);
														}]])

b4_case(244, [b4_syncline(782, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"atom: DEF FINAL access STATIC NAME\n";
														]b4_lhs_value([[var]])[=p->addVariableToCurrentScope(]b4_rhs_value(5, 5, [[r.strVal]])[,acc_mod,1,1, yylval.r.lineNum, yylval.r.colNum,false,false);
														v=]b4_lhs_value([[var]])[;
														acc_mod="";
														]b4_lhs_value([[tn]])[ = ast->createIDNode(v,0,0);
													}]])

b4_case(245, [b4_syncline(788, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"atom: NUMBER_INT\n";
						int xx=]b4_rhs_value(1, 1, [[r.intVal]])[;
						]b4_lhs_value([[tn]])[ = ast->createTypeNode(&xx,0,0,INT);
						}]])

b4_case(246, [b4_syncline(792, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"atom: NUMBER_FLOAT\n";
							float x=]b4_rhs_value(1, 1, [[r.floatVal]])[;
							]b4_lhs_value([[tn]])[ = ast->createTypeNode(&x,0,0,FLOAT);
						}]])

b4_case(247, [b4_syncline(796, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"atom: NUMBER_FLOAT\n";
							long xxx=]b4_rhs_value(1, 1, [[r.longVal]])[;
							]b4_lhs_value([[tn]])[ = ast->createTypeNode(&xxx,0,0,LONG);
						}]])

b4_case(248, [b4_syncline(800, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"atom: CHAR_VALUE\n"}]])

b4_case(249, [b4_syncline(801, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"atom: str_seq\n";
									]b4_lhs_value([[tn]])[ = ast->createTypeNode(]b4_rhs_value(1, 1, [[r.strVal]])[,0,0,STRINGS);
								}]])

b4_case(250, [b4_syncline(804, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"atom: DOT_3\n"}]])

b4_case(251, [b4_syncline(805, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"atom: NONE\n";}]])

b4_case(252, [b4_syncline(806, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"atom: TRUE\n";
					]b4_lhs_value([[tn]])[ = ast->createTypeNode(]b4_rhs_value(1, 1, [[r.strVal]])[,0,0,True);
				}]])

b4_case(253, [b4_syncline(809, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"atom: FALSE\n";
					]b4_lhs_value([[tn]])[ = ast->createTypeNode(]b4_rhs_value(1, 1, [[r.strVal]])[,0,0,False);
				}]])

b4_case(254, [b4_syncline(814, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"comma_test_star_seq: ',' test\n";}]])

b4_case(255, [b4_syncline(815, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"comma_test_star_seq: ',' star_expr\n";}]])

b4_case(256, [b4_syncline(816, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"comma_test_star_seq: comma_test_star_seq ',' test\n";}]])

b4_case(257, [b4_syncline(817, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"comma_test_star_seq: comma_test_star_seq ',' star_expr\n";}]])

b4_case(258, [b4_syncline(820, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"testlist_comp: test comp_for\n";}]])

b4_case(259, [b4_syncline(821, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"testlist_comp: test\n";}]])

b4_case(260, [b4_syncline(822, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"testlist_comp: test   comma_test_star_seq\n";}]])

b4_case(261, [b4_syncline(823, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"testlist_comp: comma_test_star_seq ',' star_expr\n";}]])

b4_case(262, [b4_syncline(824, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"testlist_comp: comma_test_star_seq ',' star_expr\n";}]])

b4_case(263, [b4_syncline(825, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"testlist_comp: comma_test_star_seq ',' star_expr\n";}]])

b4_case(264, [b4_syncline(826, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"testlist_comp: comma_test_star_seq ',' star_expr\n";}]])

b4_case(265, [b4_syncline(827, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"testlist_comp: comma_test_star_seq ',' star_expr\n";}]])

b4_case(266, [b4_syncline(828, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"testlist_comp: comma_test_star_seq ',' star_expr\n";}]])

b4_case(267, [b4_syncline(829, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"testlist_comp: comma_test_star_seq ',' star_expr\n";}]])

b4_case(268, [b4_syncline(832, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"trailer:	'('  ')'\n";}]])

b4_case(269, [b4_syncline(833, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"trailer:	'(' arglist ')'\n";}]])

b4_case(270, [b4_syncline(834, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"trailer:	'@{' subscriptlist '@}'\n";}]])

b4_case(271, [b4_syncline(835, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"trailer:	'.' NAME\n";}]])

b4_case(272, [b4_syncline(838, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"comma_subscript_seq: ',' subscript\n";}]])

b4_case(273, [b4_syncline(839, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"comma_subscript_seq: comma_subscript_seq ',' subscript\n";}]])

b4_case(274, [b4_syncline(842, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"subscriptlist:	subscript\n";}]])

b4_case(275, [b4_syncline(843, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"subscriptlist:	subscript comma_subscript_seq\n";}]])

b4_case(276, [b4_syncline(844, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"subscriptlist:	subscript  ','\n";}]])

b4_case(277, [b4_syncline(845, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"subscriptlist:	subscript comma_subscript_seq ','\n";}]])

b4_case(278, [b4_syncline(848, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"subscript:  test\n";}]])

b4_case(279, [b4_syncline(849, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"subscript:  ':'\n";}]])

b4_case(280, [b4_syncline(850, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"subscript: test ':'\n";}]])

b4_case(281, [b4_syncline(851, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"subscript:  test ':' test\n";}]])

b4_case(282, [b4_syncline(852, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"subscript:  test ':' sliceop\n";}]])

b4_case(283, [b4_syncline(853, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"subscript:  test ':' test sliceop\n";}]])

b4_case(284, [b4_syncline(854, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"subscript:  ':' test\n";}]])

b4_case(285, [b4_syncline(855, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"subscript:  ':' sliceop\n";}]])

b4_case(286, [b4_syncline(856, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"subscript:  ':' test sliceop\n";}]])

b4_case(287, [b4_syncline(859, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"sliceop: ':'\n";}]])

b4_case(288, [b4_syncline(860, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"sliceop: ':' test\n";}]])

b4_case(289, [b4_syncline(863, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"comma_expr_star_seq : 	',' expr \n";}]])

b4_case(290, [b4_syncline(864, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"comma_expr_star_seq : 	',' star_expr \n";}]])

b4_case(291, [b4_syncline(865, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"comma_expr_star_seq : 	comma_expr_star_seq ',' expr \n";}]])

b4_case(292, [b4_syncline(866, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"comma_expr_star_seq : 	comma_expr_star_seq ',' star_expr \n";}]])

b4_case(293, [b4_syncline(869, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"exprlist: 	expr \n";}]])

b4_case(294, [b4_syncline(870, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"exprlist: 	expr comma_expr_star_seq \n";}]])

b4_case(295, [b4_syncline(871, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"exprlist: 	star_expr \n";}]])

b4_case(296, [b4_syncline(872, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"exprlist: 	star_expr comma_expr_star_seq \n";}]])

b4_case(297, [b4_syncline(873, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"exprlist: 	expr ',' \n";}]])

b4_case(298, [b4_syncline(874, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"exprlist: 	expr comma_expr_star_seq ',' \n";}]])

b4_case(299, [b4_syncline(875, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"exprlist: 	star_expr ',' \n";}]])

b4_case(300, [b4_syncline(876, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"exprlist: 	star_expr  comma_expr_star_seq ',' \n";}]])

b4_case(301, [b4_syncline(879, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"comma_test: ',' test \n";}]])

b4_case(302, [b4_syncline(880, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"',' test comma_test \n";}]])

b4_case(303, [b4_syncline(883, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"testlist:	test \n";}]])

b4_case(304, [b4_syncline(884, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"testlist:	test comma_test \n";}]])

b4_case(305, [b4_syncline(885, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"testlist:	 test ','\n";}]])

b4_case(306, [b4_syncline(886, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"testlist:	 test comma_test ','\n";}]])

b4_case(307, [b4_syncline(889, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"comma_test_colon_test_seq:  ',' test ':' test \n";}]])

b4_case(308, [b4_syncline(890, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"comma_test_colon_test_seq: comma_test_colon_test_seq ',' test ':' test\n";}]])

b4_case(309, [b4_syncline(892, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"comma_test_seq: ',' test \n";}]])

b4_case(310, [b4_syncline(893, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"comma_test_seq: comma_test_seq ',' test \n";}]])

b4_case(311, [b4_syncline(896, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"dictorsetmaker: test ':' test comp_for \n";}]])

b4_case(312, [b4_syncline(897, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"dictorsetmaker: test ':' test \n";}]])

b4_case(313, [b4_syncline(898, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"dictorsetmaker: test ':' test ',' \n";}]])

b4_case(314, [b4_syncline(899, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"dictorsetmaker: test ':' test comma_test_colon_test_seq \n";}]])

b4_case(315, [b4_syncline(900, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"dictorsetmaker: test ':' test comma_test_colon_test_seq ','\n";}]])

b4_case(316, [b4_syncline(901, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"dictorsetmaker: test comp_for\n";}]])

b4_case(317, [b4_syncline(902, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"dictorsetmaker: test\n";}]])

b4_case(318, [b4_syncline(903, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"dictorsetmaker: test ','\n";}]])

b4_case(319, [b4_syncline(904, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"dictorsetmaker: test ','\n";}]])

b4_case(320, [b4_syncline(905, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"dictorsetmaker: test comma_test_seq ','\n";}]])

b4_case(321, [b4_syncline(907, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {
								Streams::verbose() <<"classdef: classheader suite\n";
								]b4_lhs_value([[type]])[=p->finishTypeDeclaration(t);
								]b4_lhs_value([[tn]])[=ast->createClassNode(]b4_rhs_value(2, 1, [[type]])[,]b4_rhs_value(2, 2, [[tn]])[,NULL);
							}]])

b4_case(322, [b4_syncline(913, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {
								Streams::verbose() << "class_h: CLASS ID \n";
								colonStack.push(new ColonStack(]b4_rhs_value(3, 1, [[r.lineNum]])[,]b4_rhs_value(3, 2, [[r.colNum]])[+1));
								]b4_lhs_value([[type]])[=p->createType(]b4_rhs_value(3, 2, [[r.strVal]])[,inhertance_list,acc_mod,0,0, yylval.r.lineNum, yylval.r.colNum,false);
								t=]b4_lhs_value([[type]])[;

								inhertance_list.clear();
					}]])

b4_case(323, [b4_syncline(921, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {
									Streams::verbose() << "class_h: access_modef CLASS ID \n"; colonStack.push(new ColonStack(]b4_rhs_value(4, 1, [[r.lineNum]])[,]b4_rhs_value(4, 2, [[r.colNum]])[+1));
								]b4_lhs_value([[type]])[=p->createType(]b4_rhs_value(4, 3, [[r.strVal]])[,inhertance_list,acc_mod,0,0, yylval.r.lineNum, yylval.r.colNum,false);
								t=]b4_lhs_value([[type]])[;
								inhertance_list.clear();
								acc_mod="";
					}]])

b4_case(324, [b4_syncline(928, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {
									Streams::verbose() << "class_h: STATIC CLASS ID \n"; colonStack.push(new ColonStack(]b4_rhs_value(4, 1, [[r.lineNum]])[,]b4_rhs_value(4, 2, [[r.colNum]])[+1));
								]b4_lhs_value([[type]])[=p->createType(]b4_rhs_value(4, 3, [[r.strVal]])[,inhertance_list,acc_mod,1,0, yylval.r.lineNum, yylval.r.colNum,false);
								t=]b4_lhs_value([[type]])[;
								inhertance_list.clear();
								acc_mod="";
					}]])

b4_case(325, [b4_syncline(935, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {
									Streams::verbose() << "class_h: FINAL CLASS ID \n"; colonStack.push(new ColonStack(]b4_rhs_value(4, 1, [[r.lineNum]])[,]b4_rhs_value(4, 2, [[r.colNum]])[+1));
								]b4_lhs_value([[type]])[=p->createType(]b4_rhs_value(4, 3, [[r.strVal]])[,inhertance_list,acc_mod,0,1, yylval.r.lineNum, yylval.r.colNum,false);
								t=]b4_lhs_value([[type]])[;
								inhertance_list.clear();
								acc_mod="";
					}]])

b4_case(326, [b4_syncline(942, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {
											Streams::verbose() << "class_h: STATIC FINAL CLASS ID \n"; colonStack.push(new ColonStack(]b4_rhs_value(5, 1, [[r.lineNum]])[,]b4_rhs_value(5, 2, [[r.colNum]])[+1));
								]b4_lhs_value([[type]])[=p->createType(]b4_rhs_value(5, 4, [[r.strVal]])[,inhertance_list,acc_mod,1,1, yylval.r.lineNum, yylval.r.colNum,false);
								t=]b4_lhs_value([[type]])[;
								inhertance_list.clear();
								acc_mod="";
					}]])

b4_case(327, [b4_syncline(949, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {
												Streams::verbose() << "class_h: STATIC FINAL CLASS ID \n"; colonStack.push(new ColonStack(]b4_rhs_value(5, 1, [[r.lineNum]])[,]b4_rhs_value(5, 2, [[r.colNum]])[+1));
								]b4_lhs_value([[type]])[=p->createType(]b4_rhs_value(5, 4, [[r.strVal]])[,inhertance_list,acc_mod,1,1, yylval.r.lineNum, yylval.r.colNum,false);
								t=]b4_lhs_value([[type]])[;
								inhertance_list.clear();
								acc_mod="";
					}]])

b4_case(328, [b4_syncline(956, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {
											Streams::verbose() << "class_h: FINAL access_modef CLASS ID \n"; colonStack.push(new ColonStack(]b4_rhs_value(5, 1, [[r.lineNum]])[,]b4_rhs_value(5, 2, [[r.colNum]])[+1));
								]b4_lhs_value([[type]])[=p->createType(]b4_rhs_value(5, 4, [[r.strVal]])[,inhertance_list,acc_mod,0,1, yylval.r.lineNum, yylval.r.colNum,false);
								t=]b4_lhs_value([[type]])[;
								inhertance_list.clear();
								acc_mod="";
					}]])

b4_case(329, [b4_syncline(963, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {
											Streams::verbose() << "class_h: STATIC access_modef CLASS ID \n"; colonStack.push(new ColonStack(]b4_rhs_value(5, 1, [[r.lineNum]])[,]b4_rhs_value(5, 2, [[r.colNum]])[+1));
								]b4_lhs_value([[type]])[=p->createType(]b4_rhs_value(5, 4, [[r.strVal]])[,inhertance_list,acc_mod,1,0, yylval.r.lineNum, yylval.r.colNum,false);
								t=]b4_lhs_value([[type]])[;
								inhertance_list.clear();
								acc_mod="";
					}]])

b4_case(330, [b4_syncline(970, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {
													Streams::verbose() << "class_h: STATIC FINAL access_modef CLASS ID \n"; colonStack.push(new ColonStack(]b4_rhs_value(6, 1, [[r.lineNum]])[,]b4_rhs_value(6, 2, [[r.colNum]])[+1));
								]b4_lhs_value([[type]])[=p->createType(]b4_rhs_value(6, 5, [[r.strVal]])[,inhertance_list,acc_mod,1,1, yylval.r.lineNum, yylval.r.colNum,false);
								t=]b4_lhs_value([[type]])[;
								inhertance_list.clear();
								acc_mod="";
					}]])

b4_case(331, [b4_syncline(977, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {
													Streams::verbose() << "class_h: STATIC FINAL access_modef CLASS ID \n"; colonStack.push(new ColonStack(]b4_rhs_value(6, 1, [[r.lineNum]])[,]b4_rhs_value(6, 2, [[r.colNum]])[+1));
								]b4_lhs_value([[type]])[=p->createType(]b4_rhs_value(6, 5, [[r.strVal]])[,inhertance_list,acc_mod,1,1, yylval.r.lineNum, yylval.r.colNum,false);
								t=]b4_lhs_value([[type]])[;
								inhertance_list.clear();
								acc_mod="";
					}]])

b4_case(332, [b4_syncline(984, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {
											Streams::verbose() << "class_h: access_modef STATIC CLASS ID \n"; colonStack.push(new ColonStack(]b4_rhs_value(5, 1, [[r.lineNum]])[,]b4_rhs_value(5, 2, [[r.colNum]])[+1));
								]b4_lhs_value([[type]])[=p->createType(]b4_rhs_value(5, 4, [[r.strVal]])[,inhertance_list,acc_mod,1,0, yylval.r.lineNum, yylval.r.colNum,false);
								t=]b4_lhs_value([[type]])[;
								inhertance_list.clear();
								acc_mod="";
					}]])

b4_case(333, [b4_syncline(991, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {
											Streams::verbose() << "class_h: access_modef FINAL CLASS ID \n"; colonStack.push(new ColonStack(]b4_rhs_value(5, 1, [[r.lineNum]])[,]b4_rhs_value(5, 2, [[r.colNum]])[+1));
							]b4_lhs_value([[type]])[=p->createType(]b4_rhs_value(5, 4, [[r.strVal]])[,inhertance_list,acc_mod,0,1, yylval.r.lineNum, yylval.r.colNum,false);
								t=]b4_lhs_value([[type]])[;
								inhertance_list.clear();
								acc_mod="";
					}]])

b4_case(334, [b4_syncline(998, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {
													Streams::verbose() << "class_h: access_modef STATIC FINAL CLASS ID \n"; colonStack.push(new ColonStack(]b4_rhs_value(6, 1, [[r.lineNum]])[,]b4_rhs_value(6, 2, [[r.colNum]])[+1));
							]b4_lhs_value([[type]])[=p->createType(]b4_rhs_value(6, 5, [[r.strVal]])[,inhertance_list,acc_mod,1,1, yylval.r.lineNum, yylval.r.colNum,false);
								t=]b4_lhs_value([[type]])[;
								inhertance_list.clear();
								acc_mod="";
					}]])

b4_case(335, [b4_syncline(1005, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {
													Streams::verbose() << "class_h: access_modef STATIC FINAL CLASS ID \n"; colonStack.push(new ColonStack(]b4_rhs_value(6, 1, [[r.lineNum]])[,]b4_rhs_value(6, 2, [[r.colNum]])[+1));
							]b4_lhs_value([[type]])[=p->createType(]b4_rhs_value(6, 5, [[r.strVal]])[,inhertance_list,acc_mod,1,1, yylval.r.lineNum, yylval.r.colNum,false);
								t=]b4_lhs_value([[type]])[;
								inhertance_list.clear();
								acc_mod="";
					}]])

b4_case(336, [b4_syncline(1012, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {
													Streams::verbose() << "class_h: access_modef STATIC FINAL CLASS ID \n"; colonStack.push(new ColonStack(]b4_rhs_value(6, 1, [[r.lineNum]])[,]b4_rhs_value(6, 2, [[r.colNum]])[+1));
							]b4_lhs_value([[type]])[=p->createType(]b4_rhs_value(6, 5, [[r.strVal]])[,inhertance_list,acc_mod,1,1, yylval.r.lineNum, yylval.r.colNum,false);
								t=]b4_lhs_value([[type]])[;
								inhertance_list.clear();
								acc_mod="";
					}]])

b4_case(337, [b4_syncline(1019, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {
													Streams::verbose() << "class_h: access_modef STATIC FINAL CLASS ID \n"; colonStack.push(new ColonStack(]b4_rhs_value(6, 1, [[r.lineNum]])[,]b4_rhs_value(6, 2, [[r.colNum]])[+1));
							]b4_lhs_value([[type]])[=p->createType(]b4_rhs_value(6, 5, [[r.strVal]])[,inhertance_list,acc_mod,1,1, yylval.r.lineNum, yylval.r.colNum,false);
								t=]b4_lhs_value([[type]])[;
								inhertance_list.clear();
								acc_mod="";
					}]])

b4_case(338, [b4_syncline(1026, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {
										Streams::verbose() << "class_h: CLASS ID OPEN_S CLOSE_S \n"; colonStack.push(new ColonStack(]b4_rhs_value(5, 1, [[r.lineNum]])[,]b4_rhs_value(5, 4, [[r.colNum]])[+1)); 
									]b4_lhs_value([[type]])[=p->createType(]b4_rhs_value(5, 2, [[r.strVal]])[,inhertance_list,acc_mod,0,0, yylval.r.lineNum, yylval.r.colNum,false);
									t=]b4_lhs_value([[type]])[;
									inhertance_list.clear();
									temp_id="";
									acc_mod="";
								}]])

b4_case(339, [b4_syncline(1034, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {
											Streams::verbose() << "class_h: access_modef CLASS ID OPEN_S CLOSE_S \n"; colonStack.push(new ColonStack(]b4_rhs_value(6, 1, [[r.lineNum]])[,]b4_rhs_value(6, 4, [[r.colNum]])[+1)); 
									]b4_lhs_value([[type]])[=p->createType(]b4_rhs_value(6, 3, [[r.strVal]])[,inhertance_list,acc_mod,0,0, yylval.r.lineNum, yylval.r.colNum,false);
								t=]b4_lhs_value([[type]])[;
								inhertance_list.clear();
								acc_mod="";
								}]])

b4_case(340, [b4_syncline(1041, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {
											Streams::verbose() << "class_h: STATIC CLASS ID OPEN_S CLOSE_S \n"; colonStack.push(new ColonStack(]b4_rhs_value(6, 1, [[r.lineNum]])[,]b4_rhs_value(6, 4, [[r.colNum]])[+1)); 
									]b4_lhs_value([[type]])[=p->createType(]b4_rhs_value(6, 3, [[r.strVal]])[,inhertance_list,acc_mod,1,0, yylval.r.lineNum, yylval.r.colNum,false);
								t=]b4_lhs_value([[type]])[;
								inhertance_list.clear();
								acc_mod="";
								}]])

b4_case(341, [b4_syncline(1048, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {
											Streams::verbose() << "class_h: FINAL CLASS ID OPEN_S CLOSE_S \n"; colonStack.push(new ColonStack(]b4_rhs_value(6, 1, [[r.lineNum]])[,]b4_rhs_value(6, 4, [[r.colNum]])[+1)); 
									]b4_lhs_value([[type]])[=p->createType(]b4_rhs_value(6, 3, [[r.strVal]])[,inhertance_list,acc_mod,0,1, yylval.r.lineNum, yylval.r.colNum,false);
								t=]b4_lhs_value([[type]])[;
								inhertance_list.clear();
								acc_mod="";
								}]])

b4_case(342, [b4_syncline(1055, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {
													Streams::verbose() << "class_h: STATIC FINAL CLASS ID OPEN_S CLOSE_S \n"; colonStack.push(new ColonStack(]b4_rhs_value(7, 1, [[r.lineNum]])[,]b4_rhs_value(7, 4, [[r.colNum]])[+1)); 
									]b4_lhs_value([[type]])[=p->createType(]b4_rhs_value(7, 4, [[r.strVal]])[,inhertance_list,acc_mod,1,1, yylval.r.lineNum, yylval.r.colNum,false);
								t=]b4_lhs_value([[type]])[;
								inhertance_list.clear();
								acc_mod="";
								}]])

b4_case(343, [b4_syncline(1062, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {
													Streams::verbose() << "class_h: STATIC FINAL CLASS ID OPEN_S CLOSE_S \n"; colonStack.push(new ColonStack(]b4_rhs_value(7, 1, [[r.lineNum]])[,]b4_rhs_value(7, 4, [[r.colNum]])[+1)); 
									]b4_lhs_value([[type]])[=p->createType(]b4_rhs_value(7, 4, [[r.strVal]])[,inhertance_list,acc_mod,1,1, yylval.r.lineNum, yylval.r.colNum,false);
								t=]b4_lhs_value([[type]])[;
								inhertance_list.clear();
								acc_mod="";
								}]])

b4_case(344, [b4_syncline(1069, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {
													Streams::verbose() << "class_h: STATIC access_modef CLASS ID OPEN_S CLOSE_S \n"; colonStack.push(new ColonStack(]b4_rhs_value(7, 1, [[r.lineNum]])[,]b4_rhs_value(7, 4, [[r.colNum]])[+1)); 
								]b4_lhs_value([[type]])[=p->createType(]b4_rhs_value(7, 4, [[r.strVal]])[,inhertance_list,acc_mod,1,0, yylval.r.lineNum, yylval.r.colNum,false);
								t=]b4_lhs_value([[type]])[;
								inhertance_list.clear();
								acc_mod="";
								}]])

b4_case(345, [b4_syncline(1076, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {
													Streams::verbose() << "class_h: FINAL access_modef CLASS ID OPEN_S CLOSE_S \n"; colonStack.push(new ColonStack(]b4_rhs_value(7, 1, [[r.lineNum]])[,]b4_rhs_value(7, 4, [[r.colNum]])[+1)); 
									]b4_lhs_value([[type]])[=p->createType(]b4_rhs_value(7, 4, [[r.strVal]])[,inhertance_list,acc_mod,0,1, yylval.r.lineNum, yylval.r.colNum,false);
								t=]b4_lhs_value([[type]])[;
								inhertance_list.clear();
								acc_mod="";
								}]])

b4_case(346, [b4_syncline(1083, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {
															Streams::verbose() << "class_h: STATIC FINAL access_modef CLASS ID OPEN_S CLOSE_S \n"; colonStack.push(new ColonStack(]b4_rhs_value(8, 1, [[r.lineNum]])[,]b4_rhs_value(8, 4, [[r.colNum]])[+1)); 
									]b4_lhs_value([[type]])[=p->createType(]b4_rhs_value(8, 5, [[r.strVal]])[,inhertance_list,acc_mod,1,1, yylval.r.lineNum, yylval.r.colNum,false);
								t=]b4_lhs_value([[type]])[;
								inhertance_list.clear();
								acc_mod="";
								}]])

b4_case(347, [b4_syncline(1090, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {
															Streams::verbose() << "class_h: STATIC FINAL access_modef CLASS ID OPEN_S CLOSE_S \n"; colonStack.push(new ColonStack(]b4_rhs_value(8, 1, [[r.lineNum]])[,]b4_rhs_value(8, 4, [[r.colNum]])[+1)); 
									]b4_lhs_value([[type]])[=p->createType(]b4_rhs_value(8, 5, [[r.strVal]])[,inhertance_list,acc_mod,1,1, yylval.r.lineNum, yylval.r.colNum,false);
								t=]b4_lhs_value([[type]])[;
								inhertance_list.clear();
								acc_mod="";
								}]])

b4_case(348, [b4_syncline(1097, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {
													Streams::verbose() << "class_h: access_modef STATIC CLASS ID OPEN_S CLOSE_S \n"; colonStack.push(new ColonStack(]b4_rhs_value(7, 1, [[r.lineNum]])[,]b4_rhs_value(7, 4, [[r.colNum]])[+1)); 
								]b4_lhs_value([[type]])[=p->createType(]b4_rhs_value(7, 4, [[r.strVal]])[,inhertance_list,acc_mod,1,0, yylval.r.lineNum, yylval.r.colNum,false);
								t=]b4_lhs_value([[type]])[;
								inhertance_list.clear();
								acc_mod="";
								}]])

b4_case(349, [b4_syncline(1104, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {
													Streams::verbose() << "class_h: access_modef FINAL CLASS ID OPEN_S CLOSE_S \n"; colonStack.push(new ColonStack(]b4_rhs_value(7, 1, [[r.lineNum]])[,]b4_rhs_value(7, 4, [[r.colNum]])[+1)); 
									]b4_lhs_value([[type]])[=p->createType(]b4_rhs_value(7, 4, [[r.strVal]])[,inhertance_list,acc_mod,0,1, yylval.r.lineNum, yylval.r.colNum,false);
								t=]b4_lhs_value([[type]])[;
								inhertance_list.clear();
								acc_mod="";
								}]])

b4_case(350, [b4_syncline(1111, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {
															Streams::verbose() << "class_h: access_modef STATIC FINAL CLASS ID OPEN_S CLOSE_S \n"; colonStack.push(new ColonStack(]b4_rhs_value(8, 1, [[r.lineNum]])[,]b4_rhs_value(8, 4, [[r.colNum]])[+1)); 
									]b4_lhs_value([[type]])[=p->createType(]b4_rhs_value(8, 5, [[r.strVal]])[,inhertance_list,acc_mod,1,1, yylval.r.lineNum, yylval.r.colNum,false);
								t=]b4_lhs_value([[type]])[;
								inhertance_list.clear();
								acc_mod="";
								}]])

b4_case(351, [b4_syncline(1118, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {
															Streams::verbose() << "class_h: access_modef STATIC FINAL CLASS ID OPEN_S CLOSE_S \n"; colonStack.push(new ColonStack(]b4_rhs_value(8, 1, [[r.lineNum]])[,]b4_rhs_value(8, 4, [[r.colNum]])[+1)); 
									]b4_lhs_value([[type]])[=p->createType(]b4_rhs_value(8, 5, [[r.strVal]])[,inhertance_list,acc_mod,1,1, yylval.r.lineNum, yylval.r.colNum,false);
								t=]b4_lhs_value([[type]])[;
								inhertance_list.clear();
								acc_mod="";
								}]])

b4_case(352, [b4_syncline(1125, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {
															Streams::verbose() << "class_h: access_modef STATIC FINAL CLASS ID OPEN_S CLOSE_S \n"; colonStack.push(new ColonStack(]b4_rhs_value(8, 1, [[r.lineNum]])[,]b4_rhs_value(8, 4, [[r.colNum]])[+1)); 
									]b4_lhs_value([[type]])[=p->createType(]b4_rhs_value(8, 5, [[r.strVal]])[,inhertance_list,acc_mod,1,1, yylval.r.lineNum, yylval.r.colNum,false);
								t=]b4_lhs_value([[type]])[;
								inhertance_list.clear();
								acc_mod="";
								}]])

b4_case(353, [b4_syncline(1132, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {
															Streams::verbose() << "class_h: access_modef STATIC FINAL CLASS ID OPEN_S CLOSE_S \n"; colonStack.push(new ColonStack(]b4_rhs_value(8, 1, [[r.lineNum]])[,]b4_rhs_value(8, 4, [[r.colNum]])[+1)); 
									]b4_lhs_value([[type]])[=p->createType(]b4_rhs_value(8, 5, [[r.strVal]])[,inhertance_list,acc_mod,1,1, yylval.r.lineNum, yylval.r.colNum,false);
								t=]b4_lhs_value([[type]])[;
								inhertance_list.clear();
								acc_mod="";
								}]])

b4_case(354, [b4_syncline(1139, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {
														Streams::verbose() << "class_h: CLASS ID OPEN_S unit_list CLOSE_S \n";colonStack.push(new ColonStack(]b4_rhs_value(6, 1, [[r.lineNum]])[,]b4_rhs_value(6, 5, [[r.colNum]])[+1));
												]b4_lhs_value([[type]])[=p->createType(]b4_rhs_value(6, 2, [[r.strVal]])[,inhertance_list,acc_mod,0,0, yylval.r.lineNum, yylval.r.colNum,false);
													t=]b4_lhs_value([[type]])[;
													inhertance_list.clear();
												acc_mod="";
											}]])

b4_case(355, [b4_syncline(1146, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {
																Streams::verbose() << "class_h: access_modef CLASS ID OPEN_S unit_list CLOSE_S \n";colonStack.push(new ColonStack(]b4_rhs_value(7, 1, [[r.lineNum]])[,]b4_rhs_value(7, 5, [[r.colNum]])[+1));
													]b4_lhs_value([[type]])[=p->createType(]b4_rhs_value(7, 3, [[r.strVal]])[,inhertance_list,acc_mod,0,0, yylval.r.lineNum, yylval.r.colNum,false);
													t=]b4_lhs_value([[type]])[;
													inhertance_list.clear();
													acc_mod="";
											}]])

b4_case(356, [b4_syncline(1153, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {
															Streams::verbose() << "class_h: STATIC CLASS ID OPEN_S unit_list CLOSE_S \n";colonStack.push(new ColonStack(]b4_rhs_value(7, 1, [[r.lineNum]])[,]b4_rhs_value(7, 5, [[r.colNum]])[+1));
													]b4_lhs_value([[type]])[=p->createType(]b4_rhs_value(7, 3, [[r.strVal]])[,inhertance_list,acc_mod,1,0, yylval.r.lineNum, yylval.r.colNum,false);
													t=]b4_lhs_value([[type]])[;
													inhertance_list.clear();
													acc_mod="";
											}]])

b4_case(357, [b4_syncline(1160, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {
															Streams::verbose() << "class_h: FINAL CLASS ID OPEN_S unit_list CLOSE_S \n";colonStack.push(new ColonStack(]b4_rhs_value(7, 1, [[r.lineNum]])[,]b4_rhs_value(7, 5, [[r.colNum]])[+1));
													]b4_lhs_value([[type]])[=p->createType(]b4_rhs_value(7, 3, [[r.strVal]])[,inhertance_list,acc_mod,0,1, yylval.r.lineNum, yylval.r.colNum,false);
													t=]b4_lhs_value([[type]])[;
													inhertance_list.clear();
													acc_mod="";
											}]])

b4_case(358, [b4_syncline(1167, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {
																	Streams::verbose() << "class_h: STATIC FINAL CLASS ID OPEN_S unit_list CLOSE_S \n";colonStack.push(new ColonStack(]b4_rhs_value(8, 1, [[r.lineNum]])[,]b4_rhs_value(8, 5, [[r.colNum]])[+1));
													]b4_lhs_value([[type]])[=p->createType(]b4_rhs_value(8, 4, [[r.strVal]])[,inhertance_list,acc_mod,1,1, yylval.r.lineNum, yylval.r.colNum,false);
													t=]b4_lhs_value([[type]])[;
													inhertance_list.clear();
													acc_mod="";
											}]])

b4_case(359, [b4_syncline(1174, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {
																	Streams::verbose() << "class_h: STATIC FINAL CLASS ID OPEN_S unit_list CLOSE_S \n";colonStack.push(new ColonStack(]b4_rhs_value(8, 1, [[r.lineNum]])[,]b4_rhs_value(8, 5, [[r.colNum]])[+1));
													]b4_lhs_value([[type]])[=p->createType(]b4_rhs_value(8, 4, [[r.strVal]])[,inhertance_list,acc_mod,1,1, yylval.r.lineNum, yylval.r.colNum,false);
													t=]b4_lhs_value([[type]])[;
													inhertance_list.clear();
													acc_mod="";
											}]])

b4_case(360, [b4_syncline(1181, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {
																		Streams::verbose() << "class_h: STATIC access_modef CLASS ID OPEN_S unit_list CLOSE_S \n";colonStack.push(new ColonStack(]b4_rhs_value(8, 1, [[r.lineNum]])[,]b4_rhs_value(8, 5, [[r.colNum]])[+1));
													]b4_lhs_value([[type]])[=p->createType(]b4_rhs_value(8, 4, [[r.strVal]])[,inhertance_list,acc_mod,1,0, yylval.r.lineNum, yylval.r.colNum,false);
													t=]b4_lhs_value([[type]])[;
													acc_mod="";
													inhertance_list.clear();
											}]])

b4_case(361, [b4_syncline(1188, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {
																	Streams::verbose() << "class_h: FINAL access_modef CLASS ID OPEN_S unit_list CLOSE_S \n";colonStack.push(new ColonStack(]b4_rhs_value(8, 1, [[r.lineNum]])[,]b4_rhs_value(8, 5, [[r.colNum]])[+1));
													]b4_lhs_value([[type]])[=p->createType(]b4_rhs_value(8, 4, [[r.strVal]])[,inhertance_list,acc_mod,0,1, yylval.r.lineNum, yylval.r.colNum,false);
													t=]b4_lhs_value([[type]])[;
													acc_mod="";
													inhertance_list.clear();
											}]])

b4_case(362, [b4_syncline(1195, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {
																			Streams::verbose() << "class_h: STATIC FINAL access_modef CLASS ID OPEN_S unit_list CLOSE_S \n";colonStack.push(new ColonStack(]b4_rhs_value(9, 1, [[r.lineNum]])[,]b4_rhs_value(9, 5, [[r.colNum]])[+1));
													]b4_lhs_value([[type]])[=p->createType(]b4_rhs_value(9, 5, [[r.strVal]])[,inhertance_list,acc_mod,1,1, yylval.r.lineNum, yylval.r.colNum,false);
													t=]b4_lhs_value([[type]])[;
													acc_mod="";
													inhertance_list.clear();
											}]])

b4_case(363, [b4_syncline(1202, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {
																			Streams::verbose() << "class_h: STATIC FINAL access_modef CLASS ID OPEN_S unit_list CLOSE_S \n";colonStack.push(new ColonStack(]b4_rhs_value(9, 1, [[r.lineNum]])[,]b4_rhs_value(9, 5, [[r.colNum]])[+1));
													]b4_lhs_value([[type]])[=p->createType(]b4_rhs_value(9, 5, [[r.strVal]])[,inhertance_list,acc_mod,1,1, yylval.r.lineNum, yylval.r.colNum,false);
													t=]b4_lhs_value([[type]])[;
													acc_mod="";
													inhertance_list.clear();
											}]])

b4_case(364, [b4_syncline(1209, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"classheader: CLASS NAME '(' arglist ')' ':' \n";}]])

b4_case(365, [b4_syncline(1210, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"classheader: CLASS NAME '(' arglist ')' ':' \n";}]])

b4_case(366, [b4_syncline(1211, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {
																			Streams::verbose() << "class_h: STATIC FINAL access_modef CLASS ID OPEN_S dotted_as_names CLOSE_S \n";colonStack.push(new ColonStack(]b4_rhs_value(9, 1, [[r.lineNum]])[,]b4_rhs_value(9, 5, [[r.colNum]])[+1));
													]b4_lhs_value([[type]])[=p->createType(]b4_rhs_value(9, 5, [[r.strVal]])[,inhertance_list,acc_mod,1,1, yylval.r.lineNum, yylval.r.colNum,false);
													t=]b4_lhs_value([[type]])[;
													acc_mod="";
													inhertance_list.clear();
											}]])

b4_case(367, [b4_syncline(1218, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {
																			Streams::verbose() << "class_h: STATIC FINAL access_modef CLASS ID OPEN_S dotted_as_names CLOSE_S \n";colonStack.push(new ColonStack(]b4_rhs_value(9, 1, [[r.lineNum]])[,]b4_rhs_value(9, 5, [[r.colNum]])[+1));
													]b4_lhs_value([[type]])[=p->createType(]b4_rhs_value(9, 5, [[r.strVal]])[,inhertance_list,acc_mod,1,1, yylval.r.lineNum, yylval.r.colNum,false);
													t=]b4_lhs_value([[type]])[;
													acc_mod="";
													inhertance_list.clear();
											}]])

b4_case(368, [b4_syncline(1225, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {
																			Streams::verbose() << "class_h: STATIC FINAL access_modef CLASS ID OPEN_S dotted_as_names CLOSE_S \n";colonStack.push(new ColonStack(]b4_rhs_value(9, 1, [[r.lineNum]])[,]b4_rhs_value(9, 5, [[r.colNum]])[+1));
													]b4_lhs_value([[type]])[=p->createType(]b4_rhs_value(9, 5, [[r.strVal]])[,inhertance_list,acc_mod,1,1, yylval.r.lineNum, yylval.r.colNum,false);
													t=]b4_lhs_value([[type]])[;
													acc_mod="";
													inhertance_list.clear();
											}]])

b4_case(369, [b4_syncline(1232, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {
																			Streams::verbose() << "class_h: STATIC FINAL access_modef CLASS ID OPEN_S dotted_as_names CLOSE_S \n";colonStack.push(new ColonStack(]b4_rhs_value(9, 1, [[r.lineNum]])[,]b4_rhs_value(9, 5, [[r.colNum]])[+1));
													]b4_lhs_value([[type]])[=p->createType(]b4_rhs_value(9, 5, [[r.strVal]])[,inhertance_list,acc_mod,1,1, yylval.r.lineNum, yylval.r.colNum,false);
													t=]b4_lhs_value([[type]])[;
													acc_mod="";
													inhertance_list.clear();
											}]])

b4_case(370, [b4_syncline(1242, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"arg_comma_seq : argument ','\n";}]])

b4_case(371, [b4_syncline(1243, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"arg_comma_seq : argument ',' arg_comma_seq\n";}]])

b4_case(372, [b4_syncline(1246, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"comma_arg_seq:	',' argument\n";}]])

b4_case(373, [b4_syncline(1247, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"comma_arg_seq:	comma_arg_seq ',' argument\n";}]])

b4_case(374, [b4_syncline(1250, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"arglist: argument\n";}]])

b4_case(375, [b4_syncline(1251, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"arglist: default_arg\n";}]])

b4_case(376, [b4_syncline(1253, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"arglist: argument ','\n";}]])

b4_case(377, [b4_syncline(1255, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {    
						std::string tempstr(]b4_rhs_value(2, 2, [[r.strVal]])[);
						std::string erro("*" + tempstr);
						char *cstr = new char@{erro.length() + 1@};
						strcpy(cstr, erro.c_str()); parameters.push_back(cstr);
						Streams::verbose() <<"arglist: '*' test\n";
				   }]])

b4_case(378, [b4_syncline(1263, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {
										std::string tempstr(]b4_rhs_value(5, 2, [[r.strVal]])[);
										std::string erro("*" + tempstr);
										char *cstr = new char@{erro.length() + 1@};
										strcpy(cstr, erro.c_str()); parameters.push_back(cstr);
										std::string tempstr1(]b4_rhs_value(5, 5, [[r.strVal]])[);
										std::string erro1("**" + tempstr1);
										char *cstr1 = new char@{erro1.length() + 1@};
										strcpy(cstr1, erro1.c_str()); parameters.push_back(cstr1);
										
										Streams::verbose() <<"arglist: '*' test ',' STAR_2 test\n";
									}]])

b4_case(379, [b4_syncline(1276, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {
		 					   		    std::string tempstr(]b4_rhs_value(3, 2, [[r.strVal]])[);
										std::string erro("*" + tempstr);
										char *cstr = new char@{erro.length() + 1@};
										strcpy(cstr, erro.c_str()); parameters.push_back(cstr);
									    
										Streams::verbose() <<"arglist: '*' test comma_arg_seq\n";
								 }]])

b4_case(380, [b4_syncline(1285, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {
										std::string tempstr(]b4_rhs_value(3, 2, [[r.strVal]])[);
										std::string erro("*" + tempstr);
										char *cstr = new char@{erro.length() + 1@};
										strcpy(cstr, erro.c_str()); parameters.push_back(cstr);

											Streams::verbose() <<"arglist: '*' test comma_arg_seq\n";
										 }]])

b4_case(381, [b4_syncline(1294, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {
		 										std::string tempstr(]b4_rhs_value(4, 2, [[r.strVal]])[);
										std::string erro("*" + tempstr);
										char *cstr = new char@{erro.length() + 1@};
										strcpy(cstr, erro.c_str()); parameters.push_back(cstr);
															Streams::verbose() <<"arglist: '*' test comma_arg_seq\n";
													   }]])

b4_case(382, [b4_syncline(1302, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {
													std::string tempstr(]b4_rhs_value(6, 2, [[r.strVal]])[);
										std::string erro("*" + tempstr);
										char *cstr = new char@{erro.length() + 1@};
										strcpy(cstr, erro.c_str()); parameters.push_back(cstr);
										
										std::string tempstr1(]b4_rhs_value(6, 6, [[r.strVal]])[);
										std::string erro1("**" + tempstr1);
										char *cstr1 = new char@{erro1.length() + 1@};
													strcpy(cstr1, erro1.c_str()); parameters.push_back(cstr1);Streams::verbose() <<"arglist: '*' test comma_arg_seq ',' STAR_2 test\n";
												  }]])

b4_case(383, [b4_syncline(1314, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {
						std::string tempstr(]b4_rhs_value(2, 2, [[r.strVal]])[);
										std::string erro("**" + tempstr);
										char *cstr = new char@{erro.length() + 1@};
						strcpy(cstr, erro.c_str()); parameters.push_back(cstr);Streams::verbose() <<"arglist: STAR_2 test\n";
					  }]])

b4_case(384, [b4_syncline(1321, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"arglist: arg_comma_seq argument\n";}]])

b4_case(385, [b4_syncline(1322, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"arglist: arg_comma_seq default_arg\n";}]])

b4_case(386, [b4_syncline(1323, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"arglist: arg_comma_seq default_arg_comma_seq default_arg\n";}]])

b4_case(387, [b4_syncline(1324, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"arglist: arg_comma_seq argument ','\n";}]])

b4_case(388, [b4_syncline(1326, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {		
									std::string tempstr(]b4_rhs_value(3, 3, [[r.strVal]])[);
										std::string erro("*" + tempstr);
										char *cstr = new char@{erro.length() + 1@};
										strcpy(cstr, erro.c_str()); parameters.push_back(cstr);
									Streams::verbose() <<"arglist: arg_comma_seq '*' test\n";
								  }]])

b4_case(389, [b4_syncline(1334, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {
											std::string tempstr(]b4_rhs_value(6, 3, [[r.strVal]])[);
										std::string erro("*" + tempstr);
										char *cstr = new char@{erro.length() + 1@};
										strcpy(cstr, erro.c_str()); parameters.push_back(cstr);
										
										std::string tempstr1(]b4_rhs_value(6, 6, [[r.strVal]])[);
										std::string erro1("**" + tempstr1);
										char *cstr1 = new char@{erro1.length() + 1@};
										strcpy(cstr1, erro1.c_str()); parameters.push_back(cstr1);
													Streams::verbose() <<"arglist: arg_comma_seq '*' test ',' STAR_2 test\n";
												 }]])

b4_case(390, [b4_syncline(1347, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {
												std::string tempstr(]b4_rhs_value(4, 3, [[r.strVal]])[);
										std::string erro("*" + tempstr);
										char *cstr = new char@{erro.length() + 1@};
										strcpy(cstr, erro.c_str()); parameters.push_back(cstr);
												Streams::verbose() <<"arglist: arg_comma_seq '*' test comma_arg_seq\n";
											   }]])

b4_case(391, [b4_syncline(1355, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {
														std::string tempstr(]b4_rhs_value(4, 3, [[r.strVal]])[);
										std::string erro("*" + tempstr);
										char *cstr = new char@{erro.length() + 1@};
										strcpy(cstr, erro.c_str()); parameters.push_back(cstr);
														Streams::verbose() <<"arglist: arg_comma_seq '*' test comma_default_arg_seq\n";
													   }]])

b4_case(392, [b4_syncline(1363, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {
																		std::string tempstr(]b4_rhs_value(5, 3, [[r.strVal]])[);
										std::string erro("*" + tempstr);
										char *cstr = new char@{erro.length() + 1@};
										strcpy(cstr, erro.c_str()); parameters.push_back(cstr);
																		Streams::verbose() <<"arglist: arg_comma_seq '*' test comma_arg_seq comma_default_arg_seq\n";
																	 }]])

b4_case(393, [b4_syncline(1371, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {
																std::string tempstr(]b4_rhs_value(7, 3, [[r.strVal]])[);
										std::string erro("*" + tempstr);
										char *cstr = new char@{erro.length() + 1@};
										strcpy(cstr, erro.c_str()); parameters.push_back(cstr);
										
										std::string tempstr1(]b4_rhs_value(7, 7, [[r.strVal]])[);
										std::string erro1("**" + tempstr1);
										char *cstr1 = new char@{erro1.length() + 1@};
										strcpy(cstr1, erro1.c_str()); parameters.push_back(cstr1);
																Streams::verbose() <<"arglist: arg_comma_seq '*' test comma_arg_seq ',' STAR_2 test\n";
															   }]])

b4_case(394, [b4_syncline(1384, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {	std::string tempstr(]b4_rhs_value(3, 3, [[r.strVal]])[);
										std::string erro("**" + tempstr);
										char *cstr = new char@{erro.length() + 1@};
										strcpy(cstr, erro.c_str()); parameters.push_back(cstr);
										Streams::verbose() <<"arglist: arg_comma_seq STAR_2 test\n";
								    }]])

b4_case(395, [b4_syncline(1394, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"comma_default_arg_seq: ',' default_arg\n";}]])

b4_case(396, [b4_syncline(1395, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"comma_default_arg_seq: comma_default_arg_seq ',' default_arg\n";}]])

b4_case(397, [b4_syncline(1398, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"default_arg_comma_seq: default_arg ','\n";}]])

b4_case(398, [b4_syncline(1399, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"default_arg_comma_seq: default_arg_comma_seq default_arg ','\n";}]])

b4_case(399, [b4_syncline(1402, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {parameters.push_back(]b4_rhs_value(3, 1, [[r.strVal]])[);Streams::verbose() <<"default_arg: test '=' test\n";}]])

b4_case(400, [b4_syncline(1404, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {parameters.push_back(]b4_rhs_value(1, 1, [[r.strVal]])[); Streams::verbose() <<"argument: 	test\n";}]])

b4_case(401, [b4_syncline(1405, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {parameters.push_back(]b4_rhs_value(2, 1, [[r.strVal]])[);Streams::verbose() <<"argument: 	test comp_for\n";}]])

b4_case(402, [b4_syncline(1409, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"comp_iter:  comp_for\n";}]])

b4_case(403, [b4_syncline(1410, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"comp_iter:  comp_if\n";}]])

b4_case(404, [b4_syncline(1413, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"comp_for: 	FOR exprlist IN or_test\n";}]])

b4_case(405, [b4_syncline(1414, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"comp_for: FOR exprlist IN or_test comp_iter\n";}]])

b4_case(406, [b4_syncline(1417, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"comp_if: IF or_test\n";}]])

b4_case(407, [b4_syncline(1418, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])
[    {Streams::verbose() <<"comp_if: IF or_test comp_iter\n";}]])

])

m4_define([b4_check],
[[    37,    38,   193,   231,    69,   346,   286,    35,    50,    39,
      52,   113,    49,    76,    51,    39,   194,   221,   222,   469,
      50,   471,    52,    60,    61,    62,    50,   212,    52,   187,
      67,   218,   219,   473,   214,    65,    60,    61,    62,   216,
      20,    20,   565,   271,   158,   159,   569,    24,    24,    20,
      10,    11,    40,    23,   168,    24,    88,    20,     5,    44,
      44,    21,    12,    24,   116,    63,    64,    99,    66,    24,
      24,    24,    44,     3,     4,    20,    44,    37,    24,     3,
      24,   146,    24,    24,    24,    24,    14,    24,    24,    88,
      50,    24,    22,    44,    44,    25,    16,    44,    18,    69,
      99,    89,    90,    16,    32,    65,    36,    67,    68,    88,
      23,    93,    94,    44,   102,   100,   100,    88,   346,    44,
      99,   101,    99,    99,   282,    88,   576,   331,   332,   192,
      99,    91,    92,   311,   657,   320,   199,   239,    99,   579,
     327,   328,   322,    88,    99,    99,    99,   324,   428,   100,
     187,   188,    40,    99,   191,    99,    69,    99,    99,    99,
      99,   198,    99,    99,   188,    44,    99,   191,   196,   100,
       5,     5,    93,    94,   198,   100,     5,    44,    12,    13,
      44,   211,    13,    12,     4,     5,    44,    44,    44,    13,
      44,   243,    12,    13,   231,   232,    44,   249,    12,    44,
       0,    89,    90,   255,   134,    44,   136,   137,    44,    44,
      44,   276,   277,    44,   102,    44,   266,     5,    98,   269,
      44,   100,   287,   564,    12,   275,   224,   225,   226,   227,
      44,   345,   230,   100,   271,   463,   100,    13,    58,    59,
      60,     5,   100,   100,   100,   282,   100,   102,   278,   286,
     280,   293,   100,   290,   278,   100,   280,   294,    88,   289,
     297,   100,    89,   293,   100,   302,   303,     5,    44,   293,
     294,     5,    99,   297,    12,    13,    48,   314,     5,    13,
      44,     5,    58,    59,    60,   313,    13,   317,    44,    13,
     314,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    12,    13,    44,   342,   343,     5,     5,   346,
      44,   363,   653,   350,   366,   656,     5,    44,     5,   371,
      55,     5,   374,    12,     5,   439,    13,   379,    12,    13,
     382,   261,   262,    44,    44,   265,    99,     5,   268,   337,
     338,   339,   340,     5,   394,    13,    44,    44,   398,   399,
      12,    13,    16,   403,    18,    44,     5,   355,    89,   409,
      44,   411,     5,    12,   429,   556,   101,     5,    99,   406,
      13,    58,    59,    60,    58,    59,    60,    58,    59,    60,
      89,   722,    89,    17,   421,    98,    20,   417,   418,    66,
      99,   428,    99,   417,   418,    44,    58,    59,    60,   436,
     437,    44,    95,   440,    44,   442,    44,   100,     5,    58,
      59,    60,   436,   437,     5,    58,    59,    60,    95,    96,
      97,    12,   459,    44,   461,   462,   463,   655,    89,   481,
      89,   468,    89,   485,   471,    89,   473,    88,    99,   491,
      99,    89,    99,   495,     5,    99,     6,    44,    17,   501,
       8,    99,     5,   505,    89,   385,    89,     5,   388,    12,
      10,    58,    59,    60,    99,    15,    99,    58,    59,    60,
     520,     9,    89,   523,    88,    88,   526,    12,    13,   529,
     545,   546,    99,   533,   521,   535,   551,    12,    38,    39,
     527,    41,    42,    43,    44,    45,    44,    58,    59,    60,
     537,    66,    44,   540,   103,    89,   104,    63,    44,    44,
      58,    59,    60,    63,    64,    99,    58,    59,    60,    44,
     711,    71,   559,    58,    59,    60,   105,   564,   102,    88,
      95,    96,    97,    58,    59,    60,    44,    89,    89,    89,
      90,    44,   579,    93,    94,    89,    44,    99,    99,     5,
      58,    59,    60,    44,    56,    99,   106,    56,   108,   109,
      62,     5,    44,    62,     5,    44,     5,    44,     5,    44,
     635,     5,    89,    99,   639,    99,   613,    88,   643,   644,
     645,   618,    88,   620,    88,    21,    48,    88,   625,   107,
     100,     8,   629,   109,     9,   632,    88,    21,    10,   104,
      88,   638,    44,   103,    44,    99,    44,   100,   105,    44,
      88,    44,   649,   650,    44,    44,   653,    44,   655,   656,
      88,    44,    88,    88,    88,    88,    16,   101,   100,    88,
      99,   107,    99,    88,    16,    44,    21,   702,   703,    99,
      88,    48,   100,   100,   681,    99,    99,   684,   100,   100,
      99,   688,    99,     4,   691,     6,    99,   694,    44,    10,
     697,   307,    88,    88,    15,    44,    17,    88,    19,    20,
      88,    22,   100,    44,    25,    44,    44,    99,   715,   744,
     745,   718,    44,    99,   721,   722,    99,    38,    39,   100,
      41,    42,    43,    44,    45,    99,    47,   100,    99,    99,
      51,    52,    53,    54,   100,    99,   101,   100,    99,    16,
      99,   748,    63,    64,   751,    44,   100,   100,    99,    70,
      71,    72,    73,    99,    99,    99,    99,    99,    88,    99,
      88,    88,    88,    88,   100,     4,    99,    88,    89,    90,
      99,    10,    93,    94,    95,    99,    15,   100,    17,    99,
      19,    20,   100,    22,    99,   106,    25,   108,    99,     0,
     100,    99,    99,    88,   100,    99,    99,   154,   100,    38,
      39,    99,    41,    42,    43,    44,    45,    99,    47,   100,
      99,    10,    51,    52,    53,    54,    15,    99,    99,    99,
      99,    99,   422,    99,    63,    64,    99,    99,    99,    99,
      99,    70,    71,    72,    73,    99,    99,    99,    99,    38,
      39,    40,    41,    42,    43,    44,    45,    99,    99,    88,
      89,    90,    10,    99,    93,    94,    95,    15,    99,    99,
      70,    99,    99,    99,    63,    64,    99,   106,    99,   108,
      99,   185,    71,   210,   159,    62,   234,   144,   431,    36,
      38,    39,    40,    41,    42,    43,    44,    45,    -1,   746,
      89,    90,    10,   569,    93,    94,    95,    15,    -1,   271,
      -1,   100,    -1,    -1,    -1,    63,    64,   106,    -1,   108,
      -1,    -1,    -1,    71,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    44,    45,    -1,    -1,
      -1,    89,    90,    10,    -1,    93,    94,    95,    15,    -1,
      -1,    -1,   100,    -1,    -1,    63,    64,    -1,   106,    -1,
     108,    -1,    -1,    71,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    44,    45,    -1,
      -1,    89,    90,    10,    -1,    93,    94,    95,    15,    -1,
      -1,    -1,   100,    -1,    -1,    -1,    63,    64,   106,    -1,
     108,    -1,    -1,    -1,    71,    -1,    -1,    -1,    -1,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    44,    45,    10,
      -1,    -1,    89,    90,    15,    -1,    93,    94,    95,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    63,    64,    -1,   106,
     107,   108,    -1,    -1,    71,    -1,    -1,    38,    39,    40,
      41,    42,    43,    44,    45,    10,    -1,    -1,    -1,    -1,
      15,    88,    89,    90,    -1,    -1,    93,    94,    95,    -1,
      -1,    -1,    63,    64,    -1,    -1,    -1,    -1,    -1,   106,
      71,   108,    -1,    38,    39,    -1,    41,    42,    43,    44,
      45,    10,    -1,    -1,    -1,    -1,    15,    -1,    89,    90,
      -1,    -1,    93,    94,    95,    -1,    -1,    -1,    63,    64,
      -1,    -1,    -1,    -1,    -1,   106,    71,   108,    -1,    38,
      39,    -1,    41,    42,    43,    44,    45,    -1,    -1,    -1,
      -1,    10,    -1,    -1,    89,    90,    15,    -1,    93,    94,
      95,    -1,    -1,    -1,    63,    64,    -1,    -1,    -1,    -1,
      -1,   106,    71,   108,    -1,    -1,    -1,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    44,    45,    -1,    -1,    -1,
      89,    90,    10,    -1,    93,    94,    -1,    15,    -1,    -1,
      99,    -1,    -1,    -1,    63,    64,    -1,   106,    -1,   108,
      -1,    -1,    71,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    40,    41,    42,    43,    44,    45,    10,    -1,
      89,    90,    -1,    15,    93,    94,    -1,    -1,    -1,    -1,
      99,    -1,    -1,    -1,    -1,    63,    64,   106,    -1,   108,
      -1,    -1,    -1,    71,    -1,    -1,    38,    39,    40,    41,
      42,    43,    44,    45,    10,    -1,    -1,    -1,    -1,    15,
      -1,    89,    90,    -1,    -1,    93,    94,    -1,    -1,    -1,
      -1,    63,    64,    -1,    -1,    -1,    -1,    -1,   106,    71,
     108,    -1,    38,    39,    40,    41,    42,    43,    44,    45,
      10,    -1,    -1,    -1,    -1,    15,    -1,    89,    90,    -1,
      -1,    93,    94,    -1,    -1,    -1,    -1,    63,    64,    -1,
      -1,    -1,    -1,    -1,   106,    71,   108,    -1,    38,    39,
      40,    41,    42,    43,    44,    45,    10,    -1,    -1,    -1,
      -1,    15,    -1,    89,    90,    -1,    -1,    93,    94,    -1,
      -1,    -1,    -1,    63,    64,    -1,    -1,    -1,    -1,    -1,
     106,    71,   108,    -1,    38,    39,    -1,    41,    42,    43,
      44,    45,    -1,    -1,    -1,    -1,    -1,    15,    -1,    89,
      90,    -1,    -1,    93,    94,    -1,    -1,    -1,    -1,    63,
      64,    -1,    -1,    -1,    -1,    -1,   106,    71,   108,    -1,
      38,    39,    -1,    41,    42,    43,    44,    45,    -1,    -1,
      -1,    -1,    -1,    15,    -1,    89,    90,    -1,    -1,    93,
      94,    -1,    -1,    -1,    -1,    63,    64,    -1,    -1,    -1,
      -1,    -1,   106,    71,   108,    -1,    38,    39,    -1,    41,
      42,    43,    44,    45,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    89,    90,    -1,    -1,    93,    94,    95,    -1,    -1,
      -1,    63,    64,    -1,    -1,    -1,    -1,    -1,   106,    71,
     108,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    89,    90,    -1,
      -1,    93,    94,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   106,    -1,   108]])


m4_define([b4_symbol(15, id)],
[[DEF]])


m4_define([b4_symbol(57, type)],
[[]])


m4_define([b4_symbol(125, tag)],
[[augassign]])


m4_define([b4_symbol(49, has_printer)],
[[0]])


m4_define([b4_symbol(160, has_type)],
[[0]])


m4_define([b4_symbol(148, has_destructor)],
[[0]])


m4_define([b4_symbol(180, number)],
[[180]])


m4_define([b4_symbol(189, has_type)],
[[0]])


m4_define([b4_symbol(132, has_printer)],
[[0]])


m4_define([b4_symbol(147, is_token)],
[[0]])


m4_define([b4_symbol(53, type)],
[[]])


m4_define([b4_symbol(136, user_number)],
[[-1]])


m4_define([b4_symbol(167, type)],
[[]])


m4_define([b4_symbol(98, has_printer)],
[[0]])


m4_define([b4_merger_max],
[[0]])


m4_define([b4_symbol(181, has_printer)],
[[0]])


m4_define([b4_symbol(209, tag)],
[[comp_if]])


m4_define([b4_symbol(3, is_token)],
[[1]])


m4_define([b4_symbol(163, type)],
[[]])


m4_define([b4_symbol(185, user_number)],
[[-1]])


m4_define([b4_symbol(48, has_destructor)],
[[0]])


m4_define([b4_symbol(203, id)],
[[comma_default_arg_seq]])


m4_define([b4_symbol(195, has_destructor)],
[[0]])


m4_define([b4_symbol(206, has_type)],
[[0]])


m4_define([b4_rline],
[[     0,   115,   115,   125,   126,   130,   134,   151,   159,   160,
     161,   170,   178,   179,   180,   188,   196,   197,   198,   206,
     214,   222,   223,   230,   238,   239,   240,   248,   255,   256,
     257,   265,   273,   274,   275,   283,   290,   291,   292,   299,
     308,   309,   312,   313,   315,   317,   318,   319,   320,   321,
     322,   323,   324,   327,   328,   329,   332,   333,   336,   337,
     338,   339,   340,   341,   342,   345,   346,   349,   350,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   366,   367,   368,   370,   371,   374,   377,   378,   379,
     382,   385,   388,   389,   393,   396,   399,   400,   402,   409,
     419,   420,   423,   424,   427,   431,   437,   438,   441,   442,
     445,   446,   449,   450,   451,   452,   453,   454,   457,   462,
     463,   466,   467,   468,   469,   472,   473,   476,   477,   480,
     481,   482,   483,   486,   487,   490,   491,   494,   495,   498,
     499,   502,   503,   504,   507,   508,   514,   518,   521,   522,
     525,   526,   529,   530,   533,   534,   537,   538,   541,   542,
     545,   546,   549,   550,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   566,   569,   570,   572,   573,
     576,   577,   580,   581,   584,   585,   588,   589,   592,   593,
     594,   595,   598,   599,   602,   606,   610,   614,   620,   621,
     631,   635,   639,   643,   644,   648,   652,   656,   659,   660,
     665,   666,   667,   668,   671,   672,   675,   676,   677,   678,
     681,   682,   685,   686,   687,   688,   689,   690,   691,   692,
     697,   704,   710,   716,   722,   728,   734,   740,   746,   752,
     758,   764,   770,   776,   782,   788,   792,   796,   800,   801,
     804,   805,   806,   809,   814,   815,   816,   817,   820,   821,
     822,   823,   824,   825,   826,   827,   828,   829,   832,   833,
     834,   835,   838,   839,   842,   843,   844,   845,   848,   849,
     850,   851,   852,   853,   854,   855,   856,   859,   860,   863,
     864,   865,   866,   869,   870,   871,   872,   873,   874,   875,
     876,   879,   880,   883,   884,   885,   886,   889,   890,   892,
     893,   896,   897,   898,   899,   900,   901,   902,   903,   904,
     905,   907,   913,   921,   928,   935,   942,   949,   956,   963,
     970,   977,   984,   991,   998,  1005,  1012,  1019,  1026,  1034,
    1041,  1048,  1055,  1062,  1069,  1076,  1083,  1090,  1097,  1104,
    1111,  1118,  1125,  1132,  1139,  1146,  1153,  1160,  1167,  1174,
    1181,  1188,  1195,  1202,  1209,  1210,  1211,  1218,  1225,  1232,
    1242,  1243,  1246,  1247,  1250,  1251,  1253,  1255,  1263,  1276,
    1285,  1294,  1302,  1314,  1321,  1322,  1323,  1324,  1326,  1334,
    1347,  1355,  1363,  1371,  1384,  1394,  1395,  1398,  1399,  1402,
    1404,  1405,  1409,  1410,  1413,  1414,  1417,  1418]])


m4_define([b4_percent_define_loc(parse.error)],
[[[[C:\Users\AMER-HY\Source\Repos\compiler-project - Copy - Copy\yaccFinal.y:2.1]], [[C:\Users\AMER-HY\Source\Repos\compiler-project - Copy - Copy\yaccFinal.y:2.15]]]])


m4_define([b4_symbol(55, has_type)],
[[0]])


m4_define([b4_symbol(196, has_id)],
[[1]])


m4_define([b4_symbol(13, is_token)],
[[1]])


m4_define([b4_symbol(97, tag)],
[['%']])


m4_define([b4_symbol(163, number)],
[[163]])


m4_define([b4_symbol(95, has_destructor)],
[[0]])


m4_define([b4_symbol(9, has_printer)],
[[0]])


m4_define([b4_symbol(113, has_printer)],
[[0]])


m4_define([b4_symbol(57, tag)],
[[RAISE]])


m4_define([b4_symbol(117, user_number)],
[[-1]])


m4_define([b4_symbol(150, has_type)],
[[0]])


m4_define([b4_symbol(79, has_printer)],
[[0]])


m4_define([b4_symbol(179, has_type)],
[[0]])


m4_define([b4_symbol(137, is_token)],
[[0]])


m4_define([b4_symbol(17, tag)],
[[IF]])


m4_define([b4_symbol(107, has_destructor)],
[[0]])


m4_define([b4_symbol(162, has_printer)],
[[0]])


m4_define([b4_symbol(142, has_id)],
[[1]])


m4_define([b4_symbol(166, user_number)],
[[-1]])


m4_define([b4_symbol(93, has_id)],
[[0]])


m4_define([b4_symbol(179, has_id)],
[[1]])


m4_define([b4_percent_define_loc(lr.keep-unreachable-state)],
[[[[<default value>:-1.-1]], [[<default value>:-1.-1]]]])


m4_define([b4_symbol(60, number)],
[[60]])


m4_define([b4_symbol(146, number)],
[[146]])


m4_define([b4_symbol(179, tag)],
[[factor]])


m4_define([b4_symbol(97, number)],
[[97]])


m4_define([b4_symbol(46, type)],
[[]])


m4_define([b4_symbol(154, has_destructor)],
[[0]])


m4_define([b4_symbol(45, has_type)],
[[0]])


m4_define([b4_defines_flag],
[[1]])


m4_define([b4_symbol(139, tag)],
[[dotted_name]])


m4_define([b4_symbol(42, type)],
[[]])


m4_define([b4_symbol(156, type)],
[[]])


m4_define([b4_symbol(1, has_id)],
[[1]])


m4_define([b4_symbol(98, is_token)],
[[1]])


m4_define([b4_symbol(125, has_id)],
[[1]])


m4_define([b4_symbol(191, id)],
[[comma_expr_star_seq]])


m4_define([b4_symbol(76, has_id)],
[[1]])


m4_define([b4_symbol(54, has_destructor)],
[[0]])


m4_define([b4_symbol(152, type)],
[[]])


m4_define([b4_symbol(5, number)],
[[5]])


m4_define([b4_symbol(190, tag)],
[[sliceop]])


m4_define([b4_symbol(43, number)],
[[43]])


m4_define([b4_symbol(179, id)],
[[factor]])


m4_define([b4_symbol(143, has_printer)],
[[0]])


m4_define([b4_symbol(140, has_type)],
[[0]])


m4_define([b4_symbol(129, number)],
[[129]])


m4_define([b4_symbol(127, is_token)],
[[0]])


m4_define([b4_symbol(147, user_number)],
[[-1]])


m4_define([b4_symbol(169, has_type)],
[[0]])


m4_define([b4_symbol(164, id)],
[[comparison]])


m4_define([b4_r1_min],
[[0]])


m4_define([b4_symbol(150, tag)],
[[try_except_cla_seq]])


m4_define([b4_symbol(193, is_token)],
[[0]])


m4_define([b4_symbol(192, has_printer)],
[[0]])


m4_define([b4_symbol(137, id)],
[[dotted_as_names]])


m4_define([b4_symbol(196, user_number)],
[[-1]])


m4_define([b4_symbol(122, id)],
[[testlist_star_expr]])


m4_define([b4_symbol(110, tag)],
[[$][accept]])


m4_define([b4_symbol(201, user_number)],
[[-1]])


m4_define([b4_states_number],
[[763]])


m4_define([b4_symbol(22, has_id)],
[[1]])


m4_define([b4_symbol(108, has_id)],
[[0]])


m4_define([b4_symbol(59, has_id)],
[[1]])


m4_define([b4_symbol(8, tag)],
[[OR]])


m4_define([b4_conflicting_rules_max],
[[0]])


m4_define([b4_symbol(113, has_destructor)],
[[0]])


m4_define([b4_symbol(26, number)],
[[26]])


m4_define([b4_symbol(35, has_type)],
[[0]])


m4_define([b4_symbol(10, user_number)],
[[265]])


m4_define([b4_symbol(88, is_token)],
[[1]])


m4_define([b4_symbol(124, has_printer)],
[[0]])


m4_define([b4_symbol(39, type)],
[[]])


m4_define([b4_symbol(206, has_id)],
[[1]])


m4_define([b4_symbol(128, user_number)],
[[-1]])


m4_define([b4_symbol(13, has_destructor)],
[[0]])


m4_define([b4_symbol(160, has_destructor)],
[[0]])


m4_define([b4_symbol(130, has_type)],
[[0]])


m4_define([b4_symbol(35, type)],
[[]])


m4_define([b4_symbol(159, has_type)],
[[0]])


m4_define([b4_symbol(149, type)],
[[]])


m4_define([b4_symbol(117, is_token)],
[[0]])


m4_define([b4_symbol(173, has_printer)],
[[0]])


m4_define([b4_symbol(82, tag)],
[[stmt_9]])


m4_define([b4_symbol(177, user_number)],
[[-1]])


m4_define([b4_symbol(183, is_token)],
[[0]])


m4_define([b4_symbol(31, type)],
[[]])


m4_define([b4_symbol(145, type)],
[[]])


m4_define([b4_symbol(42, tag)],
[[NUMBER_LONG]])


m4_define([b4_symbol(60, has_destructor)],
[[0]])


m4_define([b4_percent_define_kind(lr.type)],
[[keyword]])


m4_define([b4_symbol(89, id)],
[[]])


m4_define([b4_symbol(141, type)],
[[]])


m4_define([b4_symbol(181, has_id)],
[[1]])


m4_define([b4_spec_name_prefix],
[[]])


m4_define([b4_r2_min],
[[0]])


m4_define([b4_symbol(74, id)],
[[stmt_1]])


m4_define([b4_symbol(169, has_destructor)],
[[0]])


m4_define([b4_symbol(200, is_token)],
[[0]])


m4_define([b4_symbol(25, has_type)],
[[0]])


m4_define([b4_symbol(185, number)],
[[185]])


m4_define([b4_symbol(105, has_printer)],
[[0]])


m4_define([b4_symbol(47, id)],
[[WITH]])


m4_define([b4_symbol(91, has_type)],
[[0]])


m4_define([b4_symbol(109, user_number)],
[[125]])


m4_define([b4_symbol(32, id)],
[[SHAPOO_EQUAL]])


m4_define([b4_symbol(40, user_number)],
[[295]])


m4_define([b4_symbol(78, is_token)],
[[1]])


m4_define([b4_symbol(8, has_destructor)],
[[0]])


m4_define([b4_symbol(164, tag)],
[[comparison]])


m4_define([b4_symbol(69, has_destructor)],
[[0]])


m4_define([b4_symbol(154, has_printer)],
[[0]])


m4_define([b4_symbol(158, user_number)],
[[-1]])


m4_define([b4_symbol(120, has_type)],
[[0]])


m4_define([b4_symbol(124, tag)],
[[comma_test_star_seqJ]])


m4_define([b4_symbol(107, is_token)],
[[1]])


m4_define([b4_symbol(149, has_type)],
[[0]])


m4_define([b4_symbol(164, has_id)],
[[1]])


m4_define([b4_synclines_flag],
[[1]])


m4_define([b4_symbol(173, is_token)],
[[0]])


m4_define([b4_symbol(131, number)],
[[131]])


m4_define([b4_symbol(82, number)],
[[82]])


m4_define([b4_symbol(5, has_type)],
[[0]])


m4_define([b4_symbol(168, number)],
[[168]])


m4_define([b4_symbol(28, type)],
[[]])


m4_define([b4_symbol(208, tag)],
[[comp_for]])


m4_define([b4_symbol(208, id)],
[[comp_for]])


m4_define([b4_symbol(24, type)],
[[]])


m4_define([b4_user_token_number_max],
[[342]])


m4_define([b4_symbol(138, type)],
[[]])


m4_define([b4_symbol(128, has_destructor)],
[[0]])


m4_define([b4_symbol(21, user_number)],
[[276]])


m4_define([b4_symbol(15, has_type)],
[[0]])


m4_define([b4_symbol(0, user_number)],
[[0]])


m4_define([b4_symbol(110, has_id)],
[[0]])


m4_define([b4_symbol(135, has_printer)],
[[0]])


m4_define([b4_symbol(61, has_id)],
[[1]])


m4_define([b4_symbol(20, type)],
[[]])


m4_define([b4_symbol(81, has_type)],
[[0]])


m4_define([b4_symbol(147, has_id)],
[[1]])


m4_define([b4_symbol(96, tag)],
[['/']])


m4_define([b4_symbol(134, type)],
[[]])


m4_define([b4_symbol(68, is_token)],
[[1]])


m4_define([b4_percent_define_how(parse.error)],
[[2]])


m4_define([b4_symbol(139, user_number)],
[[-1]])


m4_define([b4_symbol(114, number)],
[[114]])


m4_define([b4_symbol(98, has_id)],
[[0]])


m4_define([b4_symbol(70, user_number)],
[[325]])


m4_define([b4_symbol(65, number)],
[[65]])


m4_define([b4_symbol(184, has_printer)],
[[0]])


m4_define([b4_yacc_flag],
[[0]])


m4_define([b4_symbol(56, tag)],
[[LESS_THAN_2]])


m4_define([b4_symbol(130, type)],
[[]])


m4_define([b4_symbol(28, has_destructor)],
[[0]])


m4_define([b4_symbol(175, has_destructor)],
[[0]])


m4_define([b4_symbol(110, has_type)],
[[0]])


m4_define([b4_symbol(139, has_type)],
[[0]])


m4_define([b4_symbol(188, user_number)],
[[-1]])


m4_define([b4_symbol(2, id)],
[[]])


m4_define([b4_symbol(16, tag)],
[[ELSE]])


m4_define([b4_symbol(163, is_token)],
[[0]])


m4_define([b4_symbol(6, has_id)],
[[1]])


m4_define([b4_symbol(75, has_destructor)],
[[0]])


m4_define([b4_symbol(44, has_id)],
[[1]])


m4_define([b4_symbol(11, number)],
[[11]])


m4_define([b4_symbol(178, tag)],
[[term]])


m4_define([b4_symbol(48, number)],
[[48]])


m4_define([b4_symbol(209, is_token)],
[[0]])


m4_define([b4_symbol(116, has_printer)],
[[0]])


m4_define([b4_symbol(138, tag)],
[[dotted_as_name]])


m4_define([b4_symbol(51, user_number)],
[[306]])


m4_define([b4_symbol(71, has_type)],
[[0]])


m4_define([b4_symbol(58, is_token)],
[[1]])


m4_define([b4_parser_file_name],
[[yacc.cpp]])


m4_define([b4_symbol(165, has_printer)],
[[0]])


m4_define([b4_symbol(196, id)],
[[comma_test_seq]])


m4_define([b4_symbol(17, type)],
[[]])


m4_define([b4_symbol(169, user_number)],
[[-1]])


m4_define([b4_symbol(181, id)],
[[power]])


m4_define([b4_symbol(100, has_type)],
[[0]])


m4_define([b4_symbol(169, id)],
[[sha_and_expr_seq]])


m4_define([b4_symbol(27, has_id)],
[[1]])


m4_define([b4_symbol(129, has_type)],
[[0]])


m4_define([b4_symbol(134, has_destructor)],
[[0]])


m4_define([b4_symbol(13, type)],
[[]])


m4_define([b4_symbol(127, type)],
[[]])


m4_define([b4_symbol(203, has_destructor)],
[[0]])


m4_define([b4_symbol(154, id)],
[[except_clause]])


m4_define([b4_symbol(153, is_token)],
[[0]])


m4_define([b4_symbol(195, has_type)],
[[0]])


m4_define([b4_symbol(123, type)],
[[]])


m4_define([b4_symbol(127, id)],
[[print_stmt]])


m4_define([b4_symbol(112, id)],
[[program]])


m4_define([b4_symbol(34, has_destructor)],
[[0]])


m4_define([b4_symbol(170, number)],
[[170]])


m4_define([b4_symbol(181, has_destructor)],
[[0]])


m4_define([b4_symbol(32, user_number)],
[[287]])


m4_define([b4_symbol(7, tag)],
[[PRIMARY]])


m4_define([b4_symbol(146, has_printer)],
[[0]])


m4_define([b4_symbol(61, has_type)],
[[0]])


m4_define([b4_symbol(48, is_token)],
[[1]])


m4_define([b4_symbol(81, user_number)],
[[336]])


m4_define([b4_symbol(81, has_destructor)],
[[0]])


m4_define([b4_symbol(195, has_printer)],
[[0]])


m4_define([b4_symbol(199, user_number)],
[[-1]])


m4_define([b4_symbol(200, has_printer)],
[[0]])


m4_define([b4_symbol(119, has_type)],
[[0]])


m4_define([b4_symbol(204, user_number)],
[[-1]])


m4_define([b4_symbol(186, has_id)],
[[1]])


m4_define([b4_symbol(153, number)],
[[153]])


m4_define([b4_symbol(81, tag)],
[[stmt_8]])


m4_define([b4_symbol(185, has_type)],
[[0]])


m4_define([b4_symbol(143, is_token)],
[[0]])


m4_define([b4_symbol(41, tag)],
[[NUMBER_INT]])


m4_define([b4_symbol(91, id)],
[[]])


m4_define([b4_symbol(13, user_number)],
[[268]])


m4_define([b4_symbol(127, has_printer)],
[[0]])


m4_define([b4_symbol(79, id)],
[[stmt_6]])


m4_define([b4_toknum_max],
[[342]])


m4_define([b4_symbol(202, has_type)],
[[0]])


m4_define([b4_symbol(64, id)],
[[NONE]])


m4_define([b4_symbol(140, has_destructor)],
[[0]])


m4_define([b4_symbol(132, has_id)],
[[1]])


m4_define([b4_symbol(62, user_number)],
[[317]])


m4_define([b4_translate_min],
[[0]])


m4_define([b4_symbol(116, type)],
[[]])


m4_define([b4_symbol(83, has_id)],
[[1]])


m4_define([b4_symbol(51, has_type)],
[[0]])


m4_define([b4_symbol(169, has_id)],
[[1]])


m4_define([b4_symbol(176, has_printer)],
[[0]])


m4_define([b4_symbol(50, number)],
[[50]])


m4_define([b4_symbol(38, is_token)],
[[1]])


m4_define([b4_symbol(37, id)],
[[MORE_LESS]])


m4_define([b4_symbol(136, number)],
[[136]])


m4_define([b4_symbol(112, type)],
[[]])


m4_define([b4_symbol(22, id)],
[[TRY]])


m4_define([b4_symbol(163, tag)],
[[comp_op_seq]])


m4_define([b4_symbol(87, number)],
[[87]])


m4_define([b4_symbol(40, has_destructor)],
[[0]])


m4_define([b4_symbol(109, has_type)],
[[0]])


m4_define([b4_symbol(149, has_destructor)],
[[0]])


m4_define([b4_symbol(123, tag)],
[[comma_test_star]])


m4_define([b4_symbol(175, has_type)],
[[0]])


m4_define([b4_symbol(133, is_token)],
[[0]])


m4_define([b4_symbol(115, has_id)],
[[1]])


m4_define([b4_symbol(108, has_printer)],
[[0]])


m4_define([b4_symbol(66, has_id)],
[[1]])


m4_define([b4_symbol(33, number)],
[[33]])


m4_define([b4_symbol(207, tag)],
[[comp_iter]])


m4_define([b4_symbol(119, number)],
[[119]])


m4_define([b4_symbol(49, has_destructor)],
[[0]])


m4_define([b4_symbol(43, user_number)],
[[298]])


m4_define([b4_symbol(196, has_destructor)],
[[0]])


m4_define([b4_symbol(157, has_printer)],
[[0]])


m4_define([b4_symbol(92, user_number)],
[[62]])


m4_define([b4_symbol(41, has_type)],
[[0]])


m4_define([b4_symbol(28, is_token)],
[[1]])


m4_define([b4_symbol(95, tag)],
[['*']])


m4_define([b4_symbol(96, has_destructor)],
[[0]])


m4_define([b4_symbol(94, is_token)],
[[1]])


m4_define([b4_symbol(12, has_id)],
[[1]])


m4_define([b4_symbol(49, has_id)],
[[1]])


m4_define([b4_symbol(109, type)],
[[]])


m4_define([b4_symbol(55, tag)],
[[STAR_EQUAL]])


m4_define([b4_symbol(16, number)],
[[16]])


m4_define([b4_symbol(7, id)],
[[PRIMARY]])


m4_define([b4_symbol(165, has_type)],
[[0]])


m4_define([b4_symbol(108, has_destructor)],
[[0]])


m4_define([b4_symbol(123, is_token)],
[[0]])


m4_define([b4_symbol(105, type)],
[[]])


m4_define([b4_symbol(20, has_printer)],
[[0]])


m4_define([b4_symbol(15, tag)],
[[DEF]])


m4_define([b4_symbol(24, user_number)],
[[279]])


m4_define([b4_merger_min],
[[0]])


m4_define([b4_symbol(3, user_number)],
[[258]])


m4_define([b4_symbol(101, type)],
[[]])


m4_define([b4_symbol(138, has_printer)],
[[0]])


m4_define([b4_symbol(8, is_token)],
[[1]])


m4_define([b4_symbol(192, number)],
[[192]])


m4_define([b4_symbol(73, user_number)],
[[328]])


m4_define([b4_symbol(177, tag)],
[[factor_seq]])


m4_define([b4_symbol(155, has_destructor)],
[[0]])


m4_define([b4_symbol(187, has_printer)],
[[0]])


m4_define([b4_symbol(31, has_type)],
[[0]])


m4_define([b4_symbol(18, is_token)],
[[1]])


m4_define([b4_symbol(137, tag)],
[[dotted_as_names]])


m4_define([b4_symbol(84, is_token)],
[[1]])


m4_define([b4_symbol(186, id)],
[[trailer]])


m4_define([b4_symbol(171, has_id)],
[[1]])


m4_define([b4_symbol(55, has_destructor)],
[[0]])


m4_define([b4_symbol(171, id)],
[[and_shift_expr_seq]])


m4_define([b4_symbol(159, id)],
[[or_test]])


m4_define([b4_symbol(175, number)],
[[175]])


m4_define([b4_symbol(113, is_token)],
[[0]])


m4_define([b4_symbol(155, has_type)],
[[0]])


m4_define([b4_symbol(144, id)],
[[compound_stmt]])


m4_define([b4_symbol(119, has_printer)],
[[0]])


m4_define([b4_symbol(50, has_printer)],
[[0]])


m4_define([b4_symbol(54, user_number)],
[[309]])


m4_define([b4_symbol(117, id)],
[[stmt]])


m4_define([b4_symbol(102, id)],
[[]])


m4_define([b4_symbol(168, has_printer)],
[[0]])


m4_define([b4_symbol(154, has_id)],
[[1]])


m4_define([b4_symbol(121, number)],
[[121]])


m4_define([b4_symbol(114, has_destructor)],
[[0]])


m4_define([b4_symbol(6, tag)],
[[END]])


m4_define([b4_symbol(72, number)],
[[72]])


m4_define([b4_symbol(21, has_type)],
[[0]])


m4_define([b4_symbol(69, tag)],
[[EXCEPT]])


m4_define([b4_symbol(158, number)],
[[158]])


m4_define([b4_symbol(74, is_token)],
[[1]])


m4_define([b4_symbol(29, tag)],
[[MOD_EQUAL]])


m4_define([b4_symbol(14, has_destructor)],
[[0]])


m4_define([b4_symbol(161, has_destructor)],
[[0]])


m4_define([b4_symbol(100, has_id)],
[[0]])


m4_define([b4_symbol(103, is_token)],
[[1]])


m4_define([b4_symbol(31, has_printer)],
[[0]])


m4_define([b4_symbol(145, has_type)],
[[0]])


m4_define([b4_symbol(51, has_id)],
[[1]])


m4_define([b4_symbol(137, has_id)],
[[1]])


m4_define([b4_symbol(35, user_number)],
[[290]])


m4_define([b4_symbol(80, tag)],
[[stmt_7]])


m4_define([b4_symbol(88, has_id)],
[[0]])


m4_define([b4_symbol(198, is_token)],
[[0]])


m4_define([b4_symbol(104, number)],
[[104]])


m4_define([b4_symbol(0, has_destructor)],
[[0]])


m4_define([b4_symbol(149, has_printer)],
[[0]])


m4_define([b4_symbol(55, number)],
[[55]])


m4_define([b4_symbol(96, id)],
[[]])


m4_define([b4_symbol(80, has_printer)],
[[0]])


m4_define([b4_symbol(40, tag)],
[[STAR_2]])


m4_define([b4_symbol(1, has_type)],
[[0]])


m4_define([b4_symbol(61, has_destructor)],
[[0]])


m4_define([b4_symbol(84, user_number)],
[[339]])


m4_define([b4_symbol(81, id)],
[[stmt_8]])


m4_define([b4_symbol(69, id)],
[[EXCEPT]])


m4_define([b4_symbol(198, has_printer)],
[[0]])


m4_define([b4_symbol(54, id)],
[[GLOBAL]])


m4_define([b4_symbol(203, has_printer)],
[[0]])


m4_define([b4_conflicting_rules_min],
[[0]])


m4_define([b4_symbol(202, number)],
[[202]])


m4_define([b4_symbol(11, has_type)],
[[0]])


m4_define([b4_symbol(207, user_number)],
[[-1]])


m4_define([b4_symbol(34, has_id)],
[[1]])


m4_define([b4_symbol(9, has_destructor)],
[[0]])


m4_define([b4_symbol(27, id)],
[[MINUS_EQUAL]])


m4_define([b4_symbol(64, is_token)],
[[1]])


m4_define([b4_symbol(12, id)],
[[FINAL]])


m4_define([b4_symbol(162, tag)],
[[not_test]])


m4_define([b4_symbol(98, type)],
[[]])


m4_define([b4_symbol(12, has_printer)],
[[0]])


m4_define([b4_symbol(38, number)],
[[38]])


m4_define([b4_symbol(16, user_number)],
[[271]])


m4_define([b4_symbol(135, has_type)],
[[0]])


m4_define([b4_symbol(122, tag)],
[[testlist_star_expr]])


m4_define([b4_symbol(94, type)],
[[]])


m4_define([b4_symbol(120, has_destructor)],
[[0]])


m4_define([b4_symbol(61, has_printer)],
[[0]])


m4_define([b4_symbol(65, user_number)],
[[320]])


m4_define([b4_symbol(188, is_token)],
[[0]])


m4_define([b4_symbol(90, type)],
[[]])


m4_define([b4_symbol(179, has_printer)],
[[0]])


m4_define([b4_symbol(200, id)],
[[arg_comma_seq]])


m4_define([b4_symbol(17, has_id)],
[[1]])


m4_define([b4_symbol(206, tag)],
[[argument]])


m4_define([b4_symbol(20, has_destructor)],
[[0]])


m4_define([b4_symbol(129, has_destructor)],
[[0]])


m4_define([b4_symbol(205, is_token)],
[[0]])


m4_define([b4_symbol(96, has_type)],
[[0]])


m4_define([b4_symbol(193, has_id)],
[[1]])


m4_define([b4_symbol(54, is_token)],
[[1]])


m4_define([b4_symbol(94, tag)],
[['-']])


m4_define([b4_symbol(160, number)],
[[160]])


m4_define([b4_union_members],
[[]b4_syncline(73, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])[

	struct R{
		int intVal;
		float floatVal;
		long longVal;
		char charVal;
		char* strVal;
		int lineNum;
		int colNum;
	}r;
		class YaccSimpleType * yaccSimpleType;
		class Variable * var;
		class Function * function;
		class Type * type;
		class Node * tn;
]])


m4_define([b4_symbol(29, has_destructor)],
[[0]])


m4_define([b4_symbol(176, has_destructor)],
[[0]])


m4_define([b4_symbol(197, number)],
[[197]])


m4_define([b4_symbol(42, has_printer)],
[[0]])


m4_define([b4_symbol(54, tag)],
[[GLOBAL]])


m4_define([b4_symbol(46, user_number)],
[[301]])


m4_define([b4_symbol(125, has_type)],
[[0]])


m4_define([b4_symbol(191, has_type)],
[[0]])


m4_define([b4_symbol(14, tag)],
[[SELF]])


m4_define([b4_symbol(91, has_printer)],
[[0]])


m4_define([b4_symbol(178, is_token)],
[[0]])


m4_define([b4_version],
[[3.0]])


m4_define([b4_symbol(95, user_number)],
[[42]])


m4_define([b4_symbol(76, has_destructor)],
[[0]])


m4_define([b4_symbol(87, type)],
[[]])


m4_define([b4_symbol(90, has_id)],
[[0]])


m4_define([b4_symbol(176, has_id)],
[[1]])


m4_define([b4_symbol(143, number)],
[[143]])


m4_define([b4_symbol(176, tag)],
[[arith_expr]])


m4_define([b4_symbol(94, number)],
[[94]])


m4_define([b4_symbol(83, type)],
[[]])


m4_define([b4_symbol(197, type)],
[[]])


m4_define([b4_symbol(136, tag)],
[[comma_dotted_as_name_seq]])


m4_define([b4_symbol(44, is_token)],
[[1]])


m4_define([b4_symbol(86, has_type)],
[[0]])


m4_define([b4_symbol(23, has_printer)],
[[0]])


m4_define([b4_symbol(193, type)],
[[]])


m4_define([b4_symbol(2, has_printer)],
[[0]])


m4_define([b4_symbol(27, user_number)],
[[282]])


m4_define([b4_symbol(176, id)],
[[arith_expr]])


m4_define([b4_symbol(6, user_number)],
[[261]])


m4_define([b4_symbol(110, user_number)],
[[-1]])


m4_define([b4_symbol(122, has_id)],
[[1]])


m4_define([b4_symbol(161, id)],
[[and_test]])


m4_define([b4_symbol(72, has_printer)],
[[0]])


m4_define([b4_symbol(135, has_destructor)],
[[0]])


m4_define([b4_symbol(73, has_id)],
[[1]])


m4_define([b4_symbol(115, has_type)],
[[0]])


m4_define([b4_symbol(149, id)],
[[try_stmt]])


m4_define([b4_symbol(204, has_destructor)],
[[0]])


m4_define([b4_symbol(2, number)],
[[2]])


m4_define([b4_symbol(159, has_id)],
[[1]])


m4_define([b4_symbol(40, number)],
[[40]])


m4_define([b4_symbol(76, user_number)],
[[331]])


m4_define([b4_symbol(181, has_type)],
[[0]])


m4_define([b4_symbol(134, id)],
[[import_stmt]])


m4_define([b4_symbol(126, number)],
[[126]])


m4_define([b4_symbol(168, is_token)],
[[0]])


m4_define([b4_symbol(77, number)],
[[77]])


m4_define([b4_symbol(107, id)],
[[]])


m4_define([b4_symbol(35, has_destructor)],
[[0]])


m4_define([b4_symbol(182, has_destructor)],
[[0]])


m4_define([b4_symbol(105, has_id)],
[[0]])


m4_define([b4_symbol(5, tag)],
[[CLASS]])


m4_define([b4_symbol(56, has_id)],
[[1]])


m4_define([b4_symbol(68, tag)],
[[MORE_OR_EQUAL]])


m4_define([b4_symbol(23, number)],
[[23]])


m4_define([b4_symbol(76, has_type)],
[[0]])


m4_define([b4_symbol(34, is_token)],
[[1]])


m4_define([b4_symbol(109, number)],
[[109]])


m4_define([b4_symbol(82, has_destructor)],
[[0]])


m4_define([b4_symbol(53, has_printer)],
[[0]])


m4_define([b4_symbol(28, tag)],
[[DIV_EQUAL]])


m4_define([b4_symbol(76, type)],
[[]])


m4_define([b4_symbol(57, user_number)],
[[312]])


m4_define([b4_symbol(203, has_id)],
[[1]])


m4_define([b4_symbol(105, has_type)],
[[0]])


m4_define([b4_symbol(140, user_number)],
[[-1]])


m4_define([b4_symbol(6, type)],
[[]])


m4_define([b4_symbol(72, type)],
[[]])


m4_define([b4_symbol(186, type)],
[[]])


m4_define([b4_symbol(171, has_type)],
[[0]])


m4_define([b4_symbol(158, is_token)],
[[0]])


m4_define([b4_symbol(207, number)],
[[207]])


m4_define([b4_symbol(2, type)],
[[]])


m4_define([b4_symbol(86, id)],
[[stmt_13]])


m4_define([b4_symbol(39, has_id)],
[[1]])


m4_define([b4_symbol(182, type)],
[[]])


m4_define([b4_symbol(71, id)],
[[CHAR_VALUE]])


m4_define([b4_symbol(141, has_destructor)],
[[0]])


m4_define([b4_symbol(59, id)],
[[PUBLIC]])


m4_define([b4_symbol(44, id)],
[[NAME]])


m4_define([b4_symbol(34, has_printer)],
[[0]])


m4_define([b4_symbol(66, has_type)],
[[0]])


m4_define([b4_symbol(24, is_token)],
[[1]])


m4_define([b4_symbol(38, user_number)],
[[293]])


m4_define([b4_symbol(17, id)],
[[IF]])


m4_define([b4_symbol(182, number)],
[[182]])


m4_define([b4_symbol(121, user_number)],
[[-1]])


m4_define([b4_symbol(90, is_token)],
[[1]])


m4_define([b4_symbol(161, tag)],
[[and_test]])


m4_define([b4_symbol(41, has_destructor)],
[[0]])


m4_define([b4_symbol(83, has_printer)],
[[0]])


m4_define([b4_symbol(87, user_number)],
[[342]])


m4_define([b4_symbol(170, user_number)],
[[-1]])


m4_define([b4_symbol(121, tag)],
[[right_testlist]])


m4_define([b4_symbol(161, has_type)],
[[0]])


m4_define([b4_symbol(148, is_token)],
[[0]])


m4_define([b4_symbol(206, has_printer)],
[[0]])


m4_define([b4_symbol(69, type)],
[[]])


m4_define([b4_symbol(161, has_id)],
[[1]])


m4_define([b4_symbol(205, id)],
[[default_arg]])


m4_define([b4_symbol(198, has_id)],
[[1]])


m4_define([b4_symbol(165, number)],
[[165]])


m4_define([b4_symbol(205, tag)],
[[default_arg]])


m4_define([b4_symbol(197, has_destructor)],
[[0]])


m4_define([b4_symbol(65, type)],
[[]])


m4_define([b4_symbol(4, is_token)],
[[1]])


m4_define([b4_symbol(179, type)],
[[]])


m4_define([b4_symbol(15, has_printer)],
[[0]])


m4_define([b4_symbol(207, has_type)],
[[0]])


m4_define([b4_toknum_min],
[[0]])


m4_define([b4_symbol(100, has_destructor)],
[[0]])


m4_define([b4_symbol(19, user_number)],
[[274]])


m4_define([b4_symbol(61, type)],
[[]])


m4_define([b4_symbol(175, type)],
[[]])


m4_define([b4_symbol(102, user_number)],
[[46]])


m4_define([b4_symbol(14, is_token)],
[[1]])


m4_define([b4_spec_graph_file],
[[]])


m4_define([b4_symbol(56, has_type)],
[[0]])


m4_define([b4_symbol(64, has_printer)],
[[0]])


m4_define([b4_symbol(97, has_destructor)],
[[0]])


m4_define([b4_symbol(80, is_token)],
[[1]])


m4_define([b4_symbol(171, type)],
[[]])


m4_define([b4_symbol(68, user_number)],
[[323]])


m4_define([b4_symbol(93, tag)],
[['+']])


m4_define([b4_symbol(144, has_id)],
[[1]])


m4_define([b4_symbol(207, type)],
[[]])


m4_define([b4_symbol(151, user_number)],
[[-1]])


m4_define([b4_symbol(95, has_id)],
[[0]])


m4_define([b4_symbol(111, number)],
[[111]])


m4_define([b4_symbol(62, number)],
[[62]])


m4_define([b4_symbol(53, tag)],
[[PRINT]])


m4_define([b4_symbol(109, has_destructor)],
[[0]])


m4_define([b4_symbol(203, type)],
[[]])


m4_define([b4_symbol(148, number)],
[[148]])


m4_define([b4_symbol(151, has_type)],
[[0]])


m4_define([b4_symbol(99, number)],
[[99]])


m4_define([b4_symbol(138, is_token)],
[[0]])


m4_define([b4_symbol(13, tag)],
[[STATIC]])


m4_define([b4_symbol(3, has_id)],
[[1]])


m4_define([b4_symbol(41, has_id)],
[[1]])


m4_define([b4_symbol(156, has_destructor)],
[[0]])


m4_define([b4_symbol(127, has_id)],
[[1]])


m4_define([b4_symbol(175, tag)],
[[term_seq]])


m4_define([b4_symbol(45, has_printer)],
[[0]])


m4_define([b4_symbol(78, has_id)],
[[1]])


m4_define([b4_symbol(7, number)],
[[7]])


m4_define([b4_symbol(49, user_number)],
[[304]])


m4_define([b4_symbol(45, number)],
[[45]])


m4_define([b4_symbol(46, has_type)],
[[0]])


m4_define([b4_symbol(193, id)],
[[comma_test]])


m4_define([b4_symbol(132, user_number)],
[[-1]])


m4_define([b4_symbol(135, tag)],
[[import_name]])


m4_define([b4_symbol(58, type)],
[[]])


m4_define([b4_symbol(94, has_printer)],
[[0]])


m4_define([b4_symbol(70, is_token)],
[[1]])


m4_define([b4_symbol(56, has_destructor)],
[[0]])


m4_define([b4_symbol(99, is_token)],
[[1]])


m4_define([b4_symbol(166, id)],
[[star_expr]])


m4_define([b4_symbol(98, user_number)],
[[59]])


m4_define([b4_symbol(54, type)],
[[]])


m4_define([b4_symbol(181, user_number)],
[[-1]])


m4_define([b4_symbol(151, id)],
[[with_seq]])


m4_define([b4_symbol(168, type)],
[[]])


m4_define([b4_symbol(139, id)],
[[dotted_name]])


m4_define([b4_symbol(141, has_type)],
[[0]])


m4_define([b4_symbol(128, is_token)],
[[0]])


m4_define([b4_symbol(50, type)],
[[]])


m4_define([b4_symbol(24, has_id)],
[[1]])


m4_define([b4_symbol(124, id)],
[[comma_test_star_seqJ]])


m4_define([b4_symbol(164, type)],
[[]])


m4_define([b4_symbol(194, is_token)],
[[0]])


m4_define([b4_symbol(28, number)],
[[28]])


m4_define([b4_symbol(160, type)],
[[]])


m4_define([b4_symbol(26, has_printer)],
[[0]])


m4_define([b4_symbol(5, has_printer)],
[[0]])


m4_define([b4_symbol(115, has_destructor)],
[[0]])


m4_define([b4_symbol(208, has_id)],
[[1]])


m4_define([b4_symbol(9, user_number)],
[[264]])


m4_define([b4_symbol(113, user_number)],
[[-1]])


m4_define([b4_symbol(4, tag)],
[[IMPORT]])


m4_define([b4_symbol(75, has_printer)],
[[0]])


m4_define([b4_symbol(67, tag)],
[[LESS_OR_EQUAL]])


m4_define([b4_symbol(36, has_type)],
[[0]])


m4_define([b4_symbol(79, user_number)],
[[334]])


m4_define([b4_symbol(60, is_token)],
[[1]])


m4_define([b4_symbol(162, user_number)],
[[-1]])


m4_define([b4_symbol(89, is_token)],
[[1]])


m4_define([b4_symbol(27, tag)],
[[MINUS_EQUAL]])


m4_define([b4_symbol(15, has_destructor)],
[[0]])


m4_define([b4_symbol(162, has_destructor)],
[[0]])


m4_define([b4_symbol(131, has_type)],
[[0]])


m4_define([b4_symbol(118, is_token)],
[[0]])


m4_define([b4_symbol(183, has_id)],
[[1]])


m4_define([b4_symbol(184, is_token)],
[[0]])


m4_define([b4_symbol(189, tag)],
[[subscript]])


m4_define([b4_symbol(150, number)],
[[150]])


m4_define([b4_symbol(1, has_destructor)],
[[0]])


m4_define([b4_symbol(47, type)],
[[]])


m4_define([b4_symbol(187, number)],
[[187]])


m4_define([b4_symbol(76, id)],
[[stmt_3]])


m4_define([b4_symbol(62, has_destructor)],
[[0]])


m4_define([b4_symbol(149, tag)],
[[try_stmt]])


m4_define([b4_symbol(61, id)],
[[YIELD]])


m4_define([b4_symbol(43, type)],
[[]])


m4_define([b4_symbol(56, has_printer)],
[[0]])


m4_define([b4_symbol(157, type)],
[[]])


m4_define([b4_symbol(49, id)],
[[ASSERT]])


m4_define([b4_symbol(34, id)],
[[MORE_THAN_2_EQUAL]])


m4_define([b4_symbol(201, is_token)],
[[0]])


m4_define([b4_symbol(109, tag)],
[['}']])


m4_define([b4_symbol(143, user_number)],
[[-1]])


m4_define([b4_symbol(26, has_type)],
[[0]])


m4_define([b4_symbol(153, type)],
[[]])


m4_define([b4_symbol(80, has_id)],
[[1]])


m4_define([b4_symbol(50, is_token)],
[[1]])


m4_define([b4_symbol(92, has_type)],
[[0]])


m4_define([b4_symbol(166, has_id)],
[[1]])


m4_define([b4_symbol(79, is_token)],
[[1]])


m4_define([b4_symbol(133, number)],
[[133]])


m4_define([b4_symbol(192, user_number)],
[[-1]])


m4_define([b4_symbol(160, tag)],
[[and_seq]])


m4_define([b4_symbol(84, number)],
[[84]])


m4_define([b4_symbol(121, has_destructor)],
[[0]])


m4_define([b4_symbol(121, has_type)],
[[0]])


m4_define([b4_symbol(108, is_token)],
[[1]])


m4_define([b4_symbol(120, tag)],
[[expr_stmt]])


m4_define([b4_symbol(174, is_token)],
[[0]])


m4_define([b4_percent_define_kind(parse.error)],
[[keyword]])


m4_define([b4_symbol(112, has_id)],
[[1]])


m4_define([b4_tag_seen_flag],
[[1]])


m4_define([b4_symbol(37, has_printer)],
[[0]])


m4_define([b4_symbol(6, has_type)],
[[0]])


m4_define([b4_symbol(63, has_id)],
[[1]])


m4_define([b4_symbol(21, has_destructor)],
[[0]])


m4_define([b4_symbol(120, has_printer)],
[[0]])


m4_define([b4_symbol(149, has_id)],
[[1]])


m4_define([b4_symbol(204, tag)],
[[default_arg_comma_seq]])


m4_define([b4_symbol(30, number)],
[[30]])


m4_define([b4_symbol(124, user_number)],
[[-1]])


m4_define([b4_symbol(116, number)],
[[116]])


m4_define([b4_symbol(86, has_printer)],
[[0]])


m4_define([b4_conflicting_rules],
[[     0]])


m4_define([b4_symbol(67, number)],
[[67]])


m4_define([b4_symbol(16, has_type)],
[[0]])


m4_define([b4_symbol(173, user_number)],
[[-1]])


m4_define([b4_symbol(82, has_type)],
[[0]])


m4_define([b4_symbol(40, is_token)],
[[1]])


m4_define([b4_symbol(36, type)],
[[]])


m4_define([b4_symbol(69, is_token)],
[[1]])


m4_define([b4_symbol(209, has_printer)],
[[0]])


m4_define([b4_symbol(92, tag)],
[['>']])


m4_define([b4_symbol(4, id)],
[[IMPORT]])


m4_define([b4_symbol(177, has_destructor)],
[[0]])


m4_define([b4_symbol(32, type)],
[[]])


m4_define([b4_symbol(146, type)],
[[]])


m4_define([b4_symbol(8, has_id)],
[[1]])


m4_define([b4_symbol(111, has_type)],
[[0]])


m4_define([b4_symbol(52, tag)],
[[RETURN]])


m4_define([b4_symbol(46, has_id)],
[[1]])


m4_define([b4_symbol(13, number)],
[[13]])


m4_define([b4_symbol(18, has_printer)],
[[0]])


m4_define([b4_symbol(142, type)],
[[]])


m4_define([b4_symbol(164, is_token)],
[[0]])


m4_define([b4_symbol(12, tag)],
[[FINAL]])


m4_define([b4_symbol(101, has_printer)],
[[0]])


m4_define([b4_symbol(77, has_destructor)],
[[0]])


m4_define([b4_symbol(105, user_number)],
[[38]])


m4_define([b4_symbol(67, has_printer)],
[[0]])


m4_define([b4_symbol(150, has_printer)],
[[0]])


m4_define([b4_symbol(154, user_number)],
[[-1]])


m4_define([b4_symbol(174, tag)],
[[shift_expr]])


m4_define([b4_symbol(198, id)],
[[classdef]])


m4_define([b4_symbol(29, has_id)],
[[1]])


m4_define([b4_symbol(183, id)],
[[atom]])


m4_define([b4_symbol(72, has_type)],
[[0]])


m4_define([b4_symbol(30, is_token)],
[[1]])


m4_define([b4_symbol(134, tag)],
[[import_stmt]])


m4_define([b4_symbol(59, is_token)],
[[1]])


m4_define([b4_symbol(156, id)],
[[suite]])


m4_define([b4_symbol(136, has_destructor)],
[[0]])


m4_define([b4_symbol(141, id)],
[[comma_name_seq]])


m4_define([b4_symbol(101, has_type)],
[[0]])


m4_define([b4_symbol(205, has_destructor)],
[[0]])


m4_define([b4_symbol(129, id)],
[[pass_stmt]])


m4_define([b4_symbol(29, type)],
[[]])


m4_define([b4_symbol(172, number)],
[[172]])


m4_define([b4_symbol(154, is_token)],
[[0]])


m4_define([b4_symbol(196, has_type)],
[[0]])


m4_define([b4_symbol(114, id)],
[[funcdef]])


m4_define([b4_symbol(48, has_printer)],
[[0]])


m4_define([b4_check_max],
[[751]])


m4_define([b4_spec_defines_file],
[[yacc.hpp]])


m4_define([b4_symbol(131, has_printer)],
[[0]])


m4_define([b4_symbol(25, type)],
[[]])


m4_define([b4_symbol(139, type)],
[[]])


m4_define([b4_symbol(135, user_number)],
[[-1]])


m4_define([b4_symbol(36, has_destructor)],
[[0]])


m4_define([b4_symbol(183, has_destructor)],
[[0]])


m4_define([b4_symbol(97, has_printer)],
[[0]])


m4_define([b4_symbol(21, type)],
[[]])


m4_define([b4_symbol(180, has_printer)],
[[0]])


m4_define([b4_symbol(135, type)],
[[]])


m4_define([b4_symbol(151, has_id)],
[[1]])


m4_define([b4_symbol(184, user_number)],
[[-1]])


m4_define([b4_symbol(3, tag)],
[[ENDMARKER]])


m4_define([b4_symbol(188, has_id)],
[[1]])


m4_define([b4_symbol(66, tag)],
[[DIV_2]])


m4_define([b4_symbol(131, type)],
[[]])


m4_define([b4_symbol(20, is_token)],
[[1]])


m4_define([b4_symbol(62, has_type)],
[[0]])


m4_define([b4_symbol(83, has_destructor)],
[[0]])


m4_define([b4_symbol(49, is_token)],
[[1]])


m4_define([b4_symbol(155, number)],
[[155]])


m4_define([b4_symbol(26, tag)],
[[PLUS_EQUAL]])


m4_define([b4_symbol(29, has_printer)],
[[0]])


m4_define([b4_symbol(8, has_printer)],
[[0]])


m4_define([b4_symbol(112, has_printer)],
[[0]])


m4_define([b4_symbol(144, is_token)],
[[0]])


m4_define([b4_symbol(93, id)],
[[]])


m4_define([b4_symbol(186, has_type)],
[[0]])


m4_define([b4_symbol(116, user_number)],
[[-1]])


m4_define([b4_symbol(134, has_id)],
[[1]])


m4_define([b4_symbol(188, tag)],
[[subscriptlist]])


m4_define([b4_symbol(78, has_printer)],
[[0]])


m4_define([b4_symbol(85, has_id)],
[[1]])


m4_define([b4_symbol(101, number)],
[[101]])


m4_define([b4_symbol(66, id)],
[[DIV_2]])


m4_define([b4_symbol(161, has_printer)],
[[0]])


m4_define([b4_symbol(52, number)],
[[52]])


m4_define([b4_symbol(0, is_token)],
[[1]])


m4_define([b4_symbol(165, user_number)],
[[-1]])


m4_define([b4_symbol(51, id)],
[[DEL]])


m4_define([b4_symbol(138, number)],
[[138]])


m4_define([b4_symbol(148, tag)],
[[for_stmt]])


m4_define([b4_symbol(142, has_destructor)],
[[0]])


m4_define([b4_symbol(89, number)],
[[89]])


m4_define([b4_symbol(39, id)],
[[TRUE]])


m4_define([b4_symbol(203, has_type)],
[[0]])


m4_define([b4_symbol(24, id)],
[[ARROW]])


m4_define([b4_symbol(108, tag)],
[['{']])


m4_define([b4_symbol(18, type)],
[[]])


m4_define([b4_symbol(10, is_token)],
[[1]])


m4_define([b4_symbol(52, has_type)],
[[0]])


m4_define([b4_symbol(39, is_token)],
[[1]])


m4_define([b4_symbol(14, type)],
[[]])


m4_define([b4_symbol(128, type)],
[[]])


m4_define([b4_symbol(42, has_destructor)],
[[0]])


m4_define([b4_symbol(31, has_id)],
[[1]])


m4_define([b4_symbol(117, has_id)],
[[1]])


m4_define([b4_symbol(68, has_id)],
[[1]])


m4_define([b4_symbol(10, type)],
[[]])


m4_define([b4_symbol(124, type)],
[[]])


m4_define([b4_symbol(35, number)],
[[35]])


m4_define([b4_symbol(59, has_printer)],
[[0]])


m4_define([b4_symbol(176, has_type)],
[[0]])


m4_define([b4_symbol(134, is_token)],
[[0]])


m4_define([b4_symbol(142, has_printer)],
[[0]])


m4_define([b4_symbol(120, type)],
[[]])


m4_define([b4_symbol(146, user_number)],
[[-1]])


m4_define([b4_symbol(198, has_destructor)],
[[0]])


m4_define([b4_symbol(191, has_printer)],
[[0]])


m4_define([b4_symbol(203, tag)],
[[comma_default_arg_seq]])


m4_define([b4_symbol(14, has_id)],
[[1]])


m4_define([b4_symbol(195, user_number)],
[[-1]])


m4_define([b4_symbol(101, has_destructor)],
[[0]])


m4_define([b4_symbol(200, user_number)],
[[-1]])


m4_define([b4_symbol(18, number)],
[[18]])


m4_define([b4_symbol(42, has_type)],
[[0]])


m4_define([b4_symbol(29, is_token)],
[[1]])


m4_define([b4_symbol(98, has_destructor)],
[[0]])


m4_define([b4_symbol(91, tag)],
[['<']])


m4_define([b4_symbol(190, has_id)],
[[1]])


m4_define([b4_symbol(95, is_token)],
[[1]])


m4_define([b4_symbol(9, id)],
[[AND]])


m4_define([b4_symbol(123, has_printer)],
[[0]])


m4_define([b4_symbol(51, tag)],
[[DEL]])


m4_define([b4_symbol(194, number)],
[[194]])


m4_define([b4_symbol(127, user_number)],
[[-1]])


m4_define([b4_symbol(124, is_token)],
[[0]])


m4_define([b4_symbol(166, has_type)],
[[0]])


m4_define([b4_symbol(89, has_printer)],
[[0]])


m4_define([b4_symbol(11, tag)],
[[NOT_EQUAL]])


m4_define([b4_symbol(190, is_token)],
[[0]])


m4_define([b4_symbol(172, has_printer)],
[[0]])


m4_define([b4_symbol(176, user_number)],
[[-1]])


m4_define([b4_symbol(117, type)],
[[]])


m4_define([b4_symbol(9, is_token)],
[[1]])


m4_define([b4_symbol(157, has_destructor)],
[[0]])


m4_define([b4_symbol(173, has_id)],
[[1]])


m4_define([b4_percent_define(lr.default-reduction)],
[[most]])


m4_define([b4_symbol(113, type)],
[[]])


m4_define([b4_symbol(140, number)],
[[140]])


m4_define([b4_symbol(173, tag)],
[[arith_seq]])


m4_define([b4_nterms_number],
[[100]])


m4_define([b4_symbol(91, number)],
[[91]])


m4_define([b4_defact],
[[     0,     0,     0,     0,     0,    81,    82,    83,     0,     0,
       4,     0,     0,    94,     6,     0,   102,    95,    98,   100,
       0,     0,     0,     0,     0,     0,     0,     1,     2,     0,
       0,     0,     0,     5,   147,     0,     0,     0,     0,     0,
       0,     0,   253,   252,   245,   247,   246,   228,   250,     0,
       0,    93,     0,     0,   220,   251,    86,   248,    90,    91,
      60,     0,     0,     0,     0,     0,     0,     0,   117,     0,
     144,    42,     0,    45,    54,    68,    58,    52,    46,    47,
      48,    87,    88,    89,    49,    50,    51,    43,   112,   113,
     114,   115,   116,     0,   321,    62,   148,   152,   156,   159,
       0,   162,   178,   182,   186,   192,   198,   208,   213,   249,
     216,     0,   103,     0,    99,     0,     0,   322,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     3,     0,   158,     0,     0,   229,     0,
     118,     0,     0,   295,   293,     0,     0,   110,     0,   139,
      85,   303,    92,    84,   108,    65,    66,   222,   259,   264,
       0,   224,     0,   210,   211,   175,   212,   225,   317,     0,
       7,   145,    44,    69,    70,    72,    73,    74,    75,    76,
      77,    78,    79,    80,    71,     0,    55,     0,    59,    67,
     146,     0,    61,     0,     0,   153,     0,   157,    64,     0,
       0,   170,   171,   169,   166,   173,   168,   167,   164,   165,
     163,     0,     0,   179,     0,   183,     0,   187,     0,     0,
     193,     0,     0,   199,     0,     0,     0,     0,   209,   221,
       0,     0,     0,     0,   217,   214,   104,     0,    96,     0,
     101,     0,     0,     0,   325,     0,     0,     0,     0,     0,
     324,     0,     0,     0,     0,     0,   323,     0,     0,     0,
       0,     0,     0,   229,     0,     0,   232,     0,     0,   231,
       0,     0,     0,     0,     0,   230,     0,     0,   299,   296,
     297,   294,     0,     0,     0,   111,     0,     0,     0,     0,
     305,   304,   109,     0,   261,   260,   258,   266,   265,   263,
     223,   226,   318,     0,   319,   316,   227,    57,    53,     0,
     150,     0,   154,     0,    63,   172,   174,     0,   160,   176,
       0,   180,     0,   184,     0,   188,   189,     0,     0,   194,
     195,     0,     0,   203,   200,   201,   202,     0,     0,     0,
       0,   219,     0,     0,   268,   400,     0,     0,   375,   374,
     279,   278,     0,   274,   271,     0,   215,   105,    97,   338,
       0,     0,     0,     0,   327,     0,     0,   328,     0,     0,
       0,     0,   326,     0,     0,   329,     0,     0,     0,     0,
     333,     0,     0,   332,     0,     0,   232,     0,     0,   231,
       0,     0,     0,   230,   234,     0,     0,     0,   236,   233,
       0,     0,     0,   235,    41,     0,     0,    10,     0,   240,
       0,   239,     0,   121,   125,   290,   289,   300,   298,     0,
       0,   141,   129,     0,   106,     0,   135,   137,     0,     0,
     140,   301,   306,     0,   254,   255,   262,   267,   309,   312,
     320,    56,     0,   151,   155,   161,   177,   181,   185,   190,
     191,   196,   197,   207,   204,   205,   206,   383,   377,     0,
     401,     0,     0,     0,   385,   384,   269,   370,   287,   284,
     285,   280,   270,   276,   275,   218,   354,   341,     0,     0,
       0,     0,   331,     0,     0,     0,   337,   340,     0,     0,
       0,     0,   330,     0,     0,     0,   336,   339,     0,     0,
       0,     0,   335,     0,     0,     0,   334,   234,     0,     0,
     236,   233,     0,     0,   235,     0,   240,     0,   239,     0,
     238,     0,    15,   244,     0,     0,   237,     0,    14,   243,
       0,    40,     0,   242,     0,   241,     0,     0,    11,     0,
       0,   122,     0,   292,   291,     0,     0,   142,     0,     0,
       0,     0,   107,   136,   138,   302,     0,   256,   257,   313,
     314,   311,   310,   149,     0,   379,   380,   399,   394,   388,
       0,   386,   397,   371,   288,   286,   281,   282,   272,   277,
     357,   343,     0,     0,     0,   345,     0,     0,     0,   356,
     342,     0,     0,     0,   344,     0,     0,     0,   355,   349,
       0,     0,     0,   348,     0,     0,     0,   238,   244,   237,
     243,   242,   241,     0,    19,     0,     0,     0,     0,    23,
       0,    18,     0,     0,     0,     0,    22,     8,     0,     0,
      31,     0,     0,    30,     0,     0,     0,     0,     0,     0,
     127,   132,     0,     0,     0,     0,   133,   404,     0,   315,
       0,   395,   372,     0,   381,     0,     0,   390,   391,   398,
     283,   273,   359,   347,     0,   361,   353,     0,   358,   346,
       0,   360,   352,     0,   365,   351,     0,   364,   350,     0,
       0,     0,    27,    13,     0,    39,     0,     0,     0,    26,
      12,     0,    38,     0,     0,    35,     0,     0,    34,     0,
       9,   123,     0,     0,     0,   126,     0,   143,   130,   131,
     134,     0,   405,   402,   403,     0,     0,   378,     0,   373,
     396,     0,     0,   392,   363,   369,   362,   368,   367,   366,
      17,     0,     0,    20,    16,     0,     0,    21,     0,    29,
       0,    28,   119,   124,     0,     0,   406,   307,     0,   382,
     389,     0,    25,    37,    24,    36,    33,    32,   120,   128,
     407,   308,   393]])


m4_define([b4_symbol(188, id)],
[[subscriptlist]])


m4_define([b4_symbol(177, number)],
[[177]])


m4_define([b4_symbol(32, has_type)],
[[0]])


m4_define([b4_symbol(19, is_token)],
[[1]])


m4_define([b4_symbol(173, id)],
[[arith_seq]])


m4_define([b4_symbol(133, tag)],
[[return_stmt]])


m4_define([b4_symbol(57, has_destructor)],
[[0]])


m4_define([b4_symbol(104, has_printer)],
[[0]])


m4_define([b4_symbol(85, is_token)],
[[1]])


m4_define([b4_symbol(146, id)],
[[if_stmt]])


m4_define([b4_symbol(108, user_number)],
[[123]])


m4_define([b4_symbol(131, id)],
[[break_stmt]])


m4_define([b4_symbol(153, has_printer)],
[[0]])


m4_define([b4_symbol(114, is_token)],
[[0]])


m4_define([b4_dprec_max],
[[0]])


m4_define([b4_symbol(156, has_type)],
[[0]])


m4_define([b4_symbol(70, has_id)],
[[1]])


m4_define([b4_symbol(119, id)],
[[small_stmt]])


m4_define([b4_symbol(157, user_number)],
[[-1]])


m4_define([b4_symbol(156, has_id)],
[[1]])


m4_define([b4_symbol(104, id)],
[[]])


m4_define([b4_symbol(123, number)],
[[123]])


m4_define([b4_symbol(180, is_token)],
[[0]])


m4_define([b4_symbol(74, number)],
[[74]])


m4_define([b4_symbol(116, has_destructor)],
[[0]])


m4_define([b4_symbol(2, tag)],
[[$][undefined]])


m4_define([b4_symbol(102, has_id)],
[[0]])


m4_define([b4_symbol(22, has_type)],
[[0]])


m4_define([b4_symbol(65, tag)],
[[IS]])


m4_define([b4_symbol(53, has_id)],
[[1]])


m4_define([b4_symbol(139, has_id)],
[[1]])


m4_define([b4_symbol(20, user_number)],
[[275]])


m4_define([b4_symbol(75, is_token)],
[[1]])


m4_define([b4_symbol(20, number)],
[[20]])


m4_define([b4_symbol(16, has_destructor)],
[[0]])


m4_define([b4_symbol(106, type)],
[[]])


m4_define([b4_symbol(106, number)],
[[106]])


m4_define([b4_symbol(163, has_destructor)],
[[0]])


m4_define([b4_symbol(25, tag)],
[[NONLOCAL]])


m4_define([b4_symbol(134, has_printer)],
[[0]])


m4_define([b4_symbol(57, number)],
[[57]])


m4_define([b4_symbol(138, user_number)],
[[-1]])


m4_define([b4_symbol(102, type)],
[[]])


m4_define([b4_symbol(200, has_id)],
[[1]])


m4_define([b4_symbol(104, is_token)],
[[1]])


m4_define([b4_symbol(98, id)],
[[]])


m4_define([b4_symbol(146, has_type)],
[[0]])


m4_define([b4_symbol(183, has_printer)],
[[0]])


m4_define([b4_symbol(83, id)],
[[stmt_10]])


m4_define([b4_symbol(2, has_destructor)],
[[0]])


m4_define([b4_symbol(170, is_token)],
[[0]])


m4_define([b4_dir_prefix],
[[]])


m4_define([b4_symbol(187, user_number)],
[[-1]])


m4_define([b4_symbol(187, tag)],
[[comma_subscript_seq]])


m4_define([b4_symbol(204, number)],
[[204]])


m4_define([b4_symbol(199, is_token)],
[[0]])


m4_define([b4_symbol(63, has_destructor)],
[[0]])


m4_define([b4_symbol(2, has_type)],
[[0]])


m4_define([b4_symbol(56, id)],
[[LESS_THAN_2]])


m4_define([b4_symbol(36, has_id)],
[[1]])


m4_define([b4_symbol(41, id)],
[[NUMBER_INT]])


m4_define([b4_symbol(147, tag)],
[[while_stmt]])


m4_define([b4_symbol(29, id)],
[[MOD_EQUAL]])


m4_define([b4_symbol(14, id)],
[[SELF]])


m4_define([b4_symbol(107, tag)],
[['@}']])


m4_define([b4_symbol(12, has_type)],
[[0]])


m4_define([b4_symbol(115, has_printer)],
[[0]])


m4_define([b4_symbol(119, user_number)],
[[-1]])


m4_define([b4_symbol(65, is_token)],
[[1]])


m4_define([b4_symbol(50, user_number)],
[[305]])


m4_define([b4_symbol(122, has_destructor)],
[[0]])


m4_define([b4_symbol(164, has_printer)],
[[0]])


m4_define([b4_use_push_for_pull_flag],
[[0]])


m4_define([b4_symbol(168, user_number)],
[[-1]])


m4_define([b4_symbol(19, has_id)],
[[1]])


m4_define([b4_symbol(136, has_type)],
[[0]])


m4_define([b4_symbol(202, id)],
[[arglist]])


m4_define([b4_symbol(160, is_token)],
[[0]])


m4_define([b4_symbol(189, is_token)],
[[0]])


m4_define([b4_symbol(22, has_destructor)],
[[0]])


m4_define([b4_symbol(79, tag)],
[[stmt_6]])


m4_define([b4_symbol(195, has_id)],
[[1]])


m4_define([b4_symbol(202, tag)],
[[arglist]])


m4_define([b4_symbol(162, number)],
[[162]])


m4_define([b4_symbol(39, tag)],
[[TRUE]])


m4_define([b4_symbol(199, number)],
[[199]])


m4_define([b4_symbol(206, is_token)],
[[0]])


m4_define([b4_symbol(31, user_number)],
[[286]])


m4_define([b4_symbol(55, is_token)],
[[1]])


m4_define([b4_symbol(97, has_type)],
[[0]])


m4_define([b4_symbol(145, has_printer)],
[[0]])


m4_define([b4_symbol(178, has_destructor)],
[[0]])


m4_define([b4_symbol(149, user_number)],
[[-1]])


m4_define([b4_symbol(90, tag)],
[['@{']])


m4_define([b4_symbol(80, user_number)],
[[335]])


m4_define([b4_symbol(141, has_id)],
[[1]])


m4_define([b4_symbol(92, has_id)],
[[0]])


m4_define([b4_symbol(194, has_printer)],
[[0]])


m4_define([b4_symbol(50, tag)],
[[EQUAL]])


m4_define([b4_symbol(126, has_type)],
[[0]])


m4_define([b4_symbol(178, has_id)],
[[1]])


m4_define([b4_symbol(198, user_number)],
[[-1]])


m4_define([b4_spec_outfile],
[[yacc.cpp]])


m4_define([b4_symbol(145, number)],
[[145]])


m4_define([b4_symbol(150, is_token)],
[[0]])


m4_define([b4_symbol(203, user_number)],
[[-1]])


m4_define([b4_symbol(192, has_type)],
[[0]])


m4_define([b4_symbol(179, is_token)],
[[0]])


m4_define([b4_symbol(96, number)],
[[96]])


m4_define([b4_symbol(78, has_destructor)],
[[0]])


m4_define([b4_symbol(10, tag)],
[[NOT]])


m4_define([b4_tokens_number],
[[110]])


m4_define([b4_symbol(12, user_number)],
[[267]])


m4_define([b4_symbol(0, has_id)],
[[0]])


m4_define([b4_symbol(190, id)],
[[sliceop]])


m4_define([b4_symbol(172, tag)],
[[and_expr]])


m4_define([b4_symbol(99, type)],
[[]])


m4_define([b4_symbol(124, has_id)],
[[1]])


m4_define([b4_symbol(126, has_printer)],
[[0]])


m4_define([b4_symbol(75, has_id)],
[[1]])


m4_define([b4_symbol(178, id)],
[[term]])


m4_define([b4_symbol(4, number)],
[[4]])


m4_define([b4_symbol(163, id)],
[[comp_op_seq]])


m4_define([b4_symbol(42, number)],
[[42]])


m4_define([b4_symbol(61, user_number)],
[[316]])


m4_define([b4_symbol(95, type)],
[[]])


m4_define([b4_symbol(128, number)],
[[128]])


m4_define([b4_symbol(132, tag)],
[[continue_stmt]])


m4_define([b4_symbol(87, has_type)],
[[0]])


m4_define([b4_symbol(45, is_token)],
[[1]])


m4_define([b4_symbol(175, has_printer)],
[[0]])


m4_define([b4_symbol(79, number)],
[[79]])


m4_define([b4_symbol(179, user_number)],
[[-1]])


m4_define([b4_symbol(137, has_destructor)],
[[0]])


m4_define([b4_symbol(136, id)],
[[comma_dotted_as_name_seq]])


m4_define([b4_symbol(91, type)],
[[]])


m4_define([b4_symbol(206, has_destructor)],
[[0]])


m4_define([b4_symbol(121, id)],
[[right_testlist]])


m4_define([b4_symbol(116, has_type)],
[[0]])


m4_define([b4_merger],
[[     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0]])


m4_define([b4_symbol(109, id)],
[[]])


m4_define([b4_symbol(140, is_token)],
[[0]])


m4_define([b4_symbol(182, has_type)],
[[0]])


m4_define([b4_symbol(21, has_id)],
[[1]])


m4_define([b4_symbol(169, is_token)],
[[0]])


m4_define([b4_symbol(107, has_id)],
[[0]])


m4_define([b4_symbol(58, has_id)],
[[1]])


m4_define([b4_symbol(37, has_destructor)],
[[0]])


m4_define([b4_symbol(184, has_destructor)],
[[0]])


m4_define([b4_symbol(25, number)],
[[25]])


m4_define([b4_symbol(107, has_printer)],
[[0]])


m4_define([b4_symbol(42, user_number)],
[[297]])


m4_define([b4_symbol(205, has_id)],
[[1]])


m4_define([b4_symbol(1, tag)],
[[error]])


m4_define([b4_symbol(156, has_printer)],
[[0]])


m4_define([b4_symbol(64, tag)],
[[NONE]])


m4_define([b4_symbol(84, has_destructor)],
[[0]])


m4_define([b4_symbol(35, is_token)],
[[1]])


m4_define([b4_symbol(77, has_type)],
[[0]])


m4_define([b4_symbol(91, user_number)],
[[60]])


m4_define([b4_symbol(209, number)],
[[209]])


m4_define([b4_symbol(24, tag)],
[[ARROW]])


m4_define([b4_symbol(106, has_type)],
[[0]])


m4_define([b4_symbol(88, type)],
[[]])


m4_define([b4_symbol(88, id)],
[[]])


m4_define([b4_symbol(130, is_token)],
[[0]])


m4_define([b4_symbol(172, has_type)],
[[0]])


m4_define([b4_symbol(73, id)],
[[CONTINUE]])


m4_define([b4_symbol(159, is_token)],
[[0]])


m4_define([b4_symbol(180, has_id)],
[[1]])


m4_define([b4_check_min],
[[-1]])


m4_define([b4_symbol(186, tag)],
[[trailer]])


m4_define([b4_symbol(84, type)],
[[]])


m4_define([b4_symbol(198, type)],
[[]])


m4_define([b4_symbol(46, id)],
[[EXPECT]])


m4_define([b4_symbol(23, user_number)],
[[278]])


m4_define([b4_symbol(143, has_destructor)],
[[0]])


m4_define([b4_symbol(184, number)],
[[184]])


m4_define([b4_symbol(146, tag)],
[[if_stmt]])


m4_define([b4_symbol(2, user_number)],
[[257]])


m4_define([b4_symbol(31, id)],
[[OR_EQUAL]])


m4_define([b4_symbol(80, type)],
[[]])


m4_define([b4_symbol(137, has_printer)],
[[0]])


m4_define([b4_symbol(194, type)],
[[]])


m4_define([b4_immediate],
[[     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0]])


m4_define([b4_symbol(19, id)],
[[WHILE]])


m4_define([b4_symbol(106, tag)],
[['~']])


m4_define([b4_percent_define_syncline(lr.type)],
[[]])


m4_define([b4_symbol(72, user_number)],
[[327]])


m4_define([b4_symbol(190, type)],
[[]])


m4_define([b4_symbol(67, has_type)],
[[0]])


m4_define([b4_symbol(25, is_token)],
[[1]])


m4_define([b4_symbol(186, has_printer)],
[[0]])


m4_define([b4_symbol(43, has_destructor)],
[[0]])


m4_define([b4_final_state_number],
[[27]])


m4_define([b4_symbol(190, has_destructor)],
[[0]])


m4_define([b4_pgoto_max],
[[813]])


m4_define([b4_symbol(163, has_id)],
[[1]])


m4_define([b4_symbol(91, is_token)],
[[1]])


m4_define([b4_symbol(130, number)],
[[130]])


m4_define([b4_symbol(81, number)],
[[81]])


m4_define([b4_symbol(167, number)],
[[167]])


m4_define([b4_symbol(207, id)],
[[comp_iter]])


m4_define([b4_symbol(120, is_token)],
[[0]])


m4_define([b4_symbol(162, has_type)],
[[0]])


m4_define([b4_symbol(149, is_token)],
[[0]])


m4_define([b4_symbol(90, has_destructor)],
[[0]])


m4_define([b4_symbol(199, has_destructor)],
[[0]])


m4_define([b4_symbol(118, has_printer)],
[[0]])


m4_define([b4_symbol(78, tag)],
[[stmt_5]])


m4_define([b4_symbol(5, is_token)],
[[1]])


m4_define([b4_symbol(102, has_destructor)],
[[0]])


m4_define([b4_symbol(201, tag)],
[[comma_arg_seq]])


m4_define([b4_symbol(60, has_id)],
[[1]])


m4_define([b4_symbol(53, user_number)],
[[308]])


m4_define([b4_symbol(146, has_id)],
[[1]])


m4_define([b4_symbol(208, has_type)],
[[0]])


m4_define([b4_symbol(97, has_id)],
[[0]])


m4_define([b4_symbol(38, tag)],
[[FALSE]])


m4_define([b4_symbol(167, has_printer)],
[[0]])


m4_define([b4_symbol(113, number)],
[[113]])


m4_define([b4_file_name],
[["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])


m4_define([b4_symbol(77, type)],
[[]])


m4_define([b4_symbol(64, number)],
[[64]])


m4_define([b4_symbol(99, has_destructor)],
[[0]])


m4_define([b4_symbol(15, is_token)],
[[1]])


m4_define([b4_symbol(57, has_type)],
[[0]])


m4_define([b4_symbol(1, id)],
[[error]])


m4_define([b4_symbol(7, type)],
[[]])


m4_define([b4_symbol(73, type)],
[[]])


m4_define([b4_symbol(187, type)],
[[]])


m4_define([b4_symbol(81, is_token)],
[[1]])


m4_define([b4_symbol(3, type)],
[[]])


m4_define([b4_symbol(183, type)],
[[]])


m4_define([b4_symbol(5, has_id)],
[[1]])


m4_define([b4_symbol(152, has_type)],
[[0]])


m4_define([b4_symbol(43, has_id)],
[[1]])


m4_define([b4_symbol(110, is_token)],
[[0]])


m4_define([b4_symbol(139, is_token)],
[[0]])


m4_define([b4_symbol(129, has_id)],
[[1]])


m4_define([b4_percent_define(lr.type)],
[[lalr]])


m4_define([b4_symbol(10, number)],
[[10]])


m4_define([b4_symbol(30, has_printer)],
[[0]])


m4_define([b4_symbol(9, number)],
[[9]])


m4_define([b4_symbol(34, user_number)],
[[289]])


m4_define([b4_symbol(47, number)],
[[47]])


m4_define([b4_symbol(158, has_destructor)],
[[0]])


m4_define([b4_symbol(148, has_printer)],
[[0]])


m4_define([b4_symbol(195, id)],
[[comma_test_colon_test_seq]])


m4_define([b4_symbol(83, user_number)],
[[338]])


m4_define([b4_symbol(180, id)],
[[trailer_seq]])


m4_define([b4_symbol(171, tag)],
[[and_shift_expr_seq]])


m4_define([b4_symbol(197, has_printer)],
[[0]])


m4_define([b4_symbol(168, id)],
[[expr]])


m4_define([b4_symbol(47, has_type)],
[[0]])


m4_define([b4_symbol(202, has_printer)],
[[0]])


m4_define([b4_symbol(153, id)],
[[with_item]])


m4_define([b4_symbol(26, has_id)],
[[1]])


m4_define([b4_symbol(58, has_destructor)],
[[0]])


m4_define([b4_symbol(131, tag)],
[[break_stmt]])


m4_define([b4_symbol(206, user_number)],
[[-1]])


m4_define([b4_symbol(71, is_token)],
[[1]])


m4_define([b4_symbol(126, id)],
[[access]])


m4_define([b4_symbol(111, id)],
[[file_input]])


m4_define([b4_symbol(11, has_printer)],
[[0]])


m4_define([b4_symbol(100, is_token)],
[[1]])


m4_define([b4_symbol(142, has_type)],
[[0]])


m4_define([b4_symbol(66, type)],
[[]])


m4_define([b4_symbol(129, is_token)],
[[0]])


m4_define([b4_symbol(15, user_number)],
[[270]])


m4_define([b4_symbol(129, has_printer)],
[[0]])


m4_define([b4_symbol(195, is_token)],
[[0]])


m4_define([b4_symbol(60, has_printer)],
[[0]])


m4_define([b4_symbol(62, type)],
[[]])


m4_define([b4_symbol(176, type)],
[[]])


m4_define([b4_symbol(64, user_number)],
[[319]])


m4_define([b4_symbol(117, has_destructor)],
[[0]])


m4_define([b4_symbol(178, has_printer)],
[[0]])


m4_define([b4_symbol(172, type)],
[[]])


m4_define([b4_symbol(208, type)],
[[]])


m4_define([b4_spec_verbose_file],
[[yacc.output]])


m4_define([b4_symbol(37, has_type)],
[[0]])


m4_define([b4_symbol(0, tag)],
[[$][end]])


m4_define([b4_symbol(63, tag)],
[[STRING]])


m4_define([b4_symbol(185, has_id)],
[[1]])


m4_define([b4_symbol(204, type)],
[[]])


m4_define([b4_symbol(17, has_destructor)],
[[0]])


m4_define([b4_symbol(61, is_token)],
[[1]])


m4_define([b4_symbol(152, number)],
[[152]])


m4_define([b4_symbol(164, has_destructor)],
[[0]])


m4_define([b4_symbol(23, tag)],
[[FINALLY]])


m4_define([b4_symbol(189, number)],
[[189]])


m4_define([b4_symbol(200, type)],
[[]])


m4_define([b4_symbol(90, id)],
[[]])


m4_define([b4_stos_max],
[[209]])


m4_define([b4_symbol(132, has_type)],
[[0]])


m4_define([b4_dprec_min],
[[0]])


m4_define([b4_symbol(119, is_token)],
[[0]])


m4_define([b4_symbol(78, id)],
[[stmt_5]])


m4_define([b4_symbol(41, has_printer)],
[[0]])


m4_define([b4_symbol(3, has_destructor)],
[[0]])


m4_define([b4_symbol(63, id)],
[[STRING]])


m4_define([b4_symbol(45, user_number)],
[[300]])


m4_define([b4_symbol(64, has_destructor)],
[[0]])


m4_define([b4_symbol(185, is_token)],
[[0]])


m4_define([b4_percent_define_loc(lr.default-reduction)],
[[[[<default value>:-1.-1]], [[<default value>:-1.-1]]]])


m4_define([b4_pkgdatadir],
[[C:\Users\AMER-HY\Source\Repos\compiler-project - Copy - Copy\data]])


m4_define([b4_symbol(185, tag)],
[[testlist_comp]])


m4_define([b4_symbol(159, has_printer)],
[[0]])


m4_define([b4_symbol(131, has_id)],
[[1]])


m4_define([b4_symbol(90, has_printer)],
[[0]])


m4_define([b4_symbol(36, id)],
[[DIV_2_EQUAL]])


m4_define([b4_symbol(82, has_id)],
[[1]])


m4_define([b4_symbol(168, has_id)],
[[1]])


m4_define([b4_symbol(94, user_number)],
[[45]])


m4_define([b4_symbol(21, id)],
[[IN]])


m4_define([b4_symbol(145, tag)],
[[elif_seq]])


m4_define([b4_symbol(59, type)],
[[]])


m4_define([b4_symbol(135, number)],
[[135]])


m4_define([b4_symbol(86, number)],
[[86]])


m4_define([b4_symbol(202, is_token)],
[[0]])


m4_define([b4_symbol(55, type)],
[[]])


m4_define([b4_symbol(105, tag)],
[['&']])


m4_define([b4_symbol(169, type)],
[[]])


m4_define([b4_symbol(27, has_type)],
[[0]])


m4_define([b4_symbol(51, is_token)],
[[1]])


m4_define([b4_symbol(93, has_type)],
[[0]])


m4_define([b4_symbol(51, type)],
[[]])


m4_define([b4_symbol(165, type)],
[[]])


m4_define([b4_pact_max],
[[1338]])


m4_define([b4_symbol(123, has_destructor)],
[[0]])


m4_define([b4_symbol(22, has_printer)],
[[0]])


m4_define([b4_symbol(114, has_id)],
[[1]])


m4_define([b4_symbol(1, has_printer)],
[[0]])


m4_define([b4_rules_number],
[[407]])


m4_define([b4_symbol(65, has_id)],
[[1]])


m4_define([b4_symbol(26, user_number)],
[[281]])


m4_define([b4_symbol(5, user_number)],
[[260]])


m4_define([b4_symbol(122, has_type)],
[[0]])


m4_define([b4_symbol(161, type)],
[[]])


m4_define([b4_symbol(109, is_token)],
[[1]])


m4_define([b4_symbol(32, number)],
[[32]])


m4_define([b4_symbol(118, number)],
[[118]])


m4_define([b4_symbol(71, has_printer)],
[[0]])


m4_define([b4_symbol(69, number)],
[[69]])


m4_define([b4_symbol(175, is_token)],
[[0]])


m4_define([b4_symbol(75, user_number)],
[[330]])


m4_define([b4_symbol(23, has_destructor)],
[[0]])


m4_define([b4_symbol(170, has_destructor)],
[[0]])


m4_define([b4_symbol(7, has_type)],
[[0]])


m4_define([b4_symbol(189, has_printer)],
[[0]])


m4_define([b4_symbol(77, tag)],
[[stmt_4]])


m4_define([b4_symbol(200, tag)],
[[arg_comma_seq]])


m4_define([b4_symbol(11, has_id)],
[[1]])


m4_define([b4_symbol(37, tag)],
[[MORE_LESS]])


m4_define([b4_symbol(17, has_type)],
[[0]])


m4_define([b4_symbol(48, has_id)],
[[1]])


m4_define([b4_symbol(6, id)],
[[END]])


m4_define([b4_symbol(70, has_destructor)],
[[0]])


m4_define([b4_symbol(15, number)],
[[15]])


m4_define([b4_symbol(83, has_type)],
[[0]])


m4_define([b4_table_max],
[[762]])


m4_define([b4_symbol(41, is_token)],
[[1]])


m4_define([b4_stos],
[[     0,     4,     5,    12,    13,    58,    59,    60,   111,   112,
     113,   126,   134,   135,   198,   199,    44,   137,   138,   139,
      44,     5,    13,   126,     5,    12,   126,     0,     3,     5,
      12,    13,    98,   113,     6,    10,    15,    17,    19,    20,
      22,    25,    38,    39,    41,    42,    43,    44,    45,    47,
      51,    52,    53,    54,    63,    64,    70,    71,    72,    73,
      88,    89,    90,    93,    94,    95,   106,   108,   114,   115,
     117,   118,   119,   120,   122,   123,   124,   127,   128,   129,
     130,   131,   132,   133,   134,   142,   143,   144,   146,   147,
     148,   149,   152,   155,   156,   157,   159,   161,   162,   164,
     166,   168,   170,   172,   174,   176,   178,   179,   181,   182,
     183,   102,   140,    88,   136,    48,    89,    99,    44,     5,
     126,     5,    13,    44,     5,   126,     5,    12,    44,     5,
      13,     5,    12,   113,    15,   162,    12,    13,    44,   126,
     198,   157,   157,   166,   168,   192,    99,    44,   153,   157,
     192,   157,   194,   192,    44,   157,   166,   100,   157,   166,
     185,   107,   185,   179,   179,   168,   179,   109,   157,   197,
     156,   155,    98,    26,    27,    28,    29,    30,    31,    32,
      33,    34,    35,    36,    55,   101,   121,   125,    88,   123,
       6,    88,   124,    17,     8,   158,     9,   160,    88,   124,
      10,    11,    21,    37,    50,    65,    67,    68,    91,    92,
     163,   165,   103,   167,   104,   169,   105,   171,    56,    62,
     173,    93,    94,   175,    66,    95,    96,    97,   177,    63,
      40,    89,    90,   102,   180,   186,    44,   102,   138,    88,
      44,   100,   137,    89,    99,    44,     5,    44,     5,    89,
      99,    44,     5,    44,     5,    89,    99,    44,     5,    44,
       5,    12,    13,    44,   126,    13,    44,   126,    12,    44,
     126,    89,   116,    12,    13,    44,    99,    99,    88,   191,
      88,   191,    21,   156,    88,   141,    88,    99,   151,    48,
      88,   193,   141,    20,    88,   184,   208,    88,   184,   208,
     100,   107,    88,    99,   196,   208,   109,   122,   194,   159,
     161,     8,   162,     9,    88,    21,    10,   165,   168,   170,
     103,   172,   104,   174,   105,   176,   176,    56,    62,   178,
     178,    93,    94,   179,   179,   179,   179,    66,    95,    96,
      97,   179,    40,    95,   100,   157,   200,   202,   205,   206,
      99,   157,   188,   189,    44,    40,   186,    44,   138,    99,
     100,   100,   137,    89,    99,    44,    89,    99,    44,   100,
     137,    89,    99,    44,    89,    99,    44,   100,   137,    89,
      99,    44,    89,    99,    44,    13,    44,   126,    12,    44,
     126,    12,    13,    44,    44,   126,   116,    13,    44,    44,
     126,   116,    12,    44,   100,   202,    24,    99,    13,    44,
      12,    44,   116,   156,   156,   166,   168,    88,    88,   194,
      23,    69,   150,   154,    44,    88,   153,   156,    88,    99,
     168,   157,    88,   192,   157,   166,    88,    88,   157,   157,
      88,   121,    16,   161,   162,   168,   170,   172,   174,   176,
     176,   178,   178,   179,   179,   179,   179,   157,   157,   101,
     208,    40,    95,   204,   205,   206,   100,    88,    99,   157,
     190,    99,   107,    88,   187,   179,    99,    99,   100,   100,
     137,    89,    99,   100,   137,    89,    99,    99,   100,   100,
     137,    89,    99,   100,   137,    89,    99,    99,   100,   100,
     137,    89,    99,   100,   137,    89,    99,    44,   126,    13,
      44,    44,   126,    12,    44,    13,    44,    12,    44,   116,
      44,    24,    99,    44,   116,   116,    44,    24,    99,    44,
     116,   100,   157,    44,   116,    44,   116,    24,    99,    16,
      18,   145,    16,   166,   168,    99,    99,   157,    16,    23,
     154,    99,    44,   153,   156,   193,    21,   157,   166,    88,
     195,   208,   157,   157,    88,   201,   203,   157,   157,   157,
     157,   205,    88,    88,   157,   190,   157,   190,   189,    88,
      99,    99,   100,   100,   137,    99,   100,   100,   137,    99,
      99,   100,   100,   137,    99,   100,   100,   137,    99,    99,
     100,   100,   137,    99,   100,   100,   137,    44,    44,    44,
      44,    44,    44,    24,    99,   116,   157,   116,    24,    99,
      24,    99,   116,   157,   116,    24,    99,    99,   116,    24,
      99,   116,    24,    99,   157,    99,   157,    16,    18,    99,
     156,   156,    48,    99,    99,    99,   156,   159,   157,    88,
      40,   205,   206,    88,   203,    88,    88,   201,   203,    88,
     190,   189,    99,    99,   100,    99,    99,   100,    99,    99,
     100,    99,    99,   100,    99,    99,   100,    99,    99,   100,
     157,    24,    99,    99,    24,    99,   157,   157,    24,    99,
      99,    24,    99,   157,    24,    99,   157,    24,    99,   157,
      99,   156,    99,    99,   157,   156,    16,    44,   156,   156,
     156,    17,   207,   208,   209,    99,   157,   157,    40,   206,
     205,    40,    88,   203,    99,    99,    99,    99,    99,    99,
      99,   157,   157,    99,    99,   157,   157,    99,   157,    99,
     157,    99,   156,   156,    99,    99,   159,   157,    99,   157,
     157,    40,    99,    99,    99,    99,    99,    99,   156,   156,
     207,   157,   157]])


m4_define([b4_symbol(179, has_destructor)],
[[0]])


m4_define([b4_symbol(199, tag)],
[[classheader]])


m4_define([b4_symbol(48, type)],
[[]])


m4_define([b4_symbol(52, has_printer)],
[[0]])


m4_define([b4_symbol(112, has_type)],
[[0]])


m4_define([b4_symbol(56, user_number)],
[[311]])


m4_define([b4_symbol(159, tag)],
[[or_test]])


m4_define([b4_symbol(191, number)],
[[191]])


m4_define([b4_symbol(44, type)],
[[]])


m4_define([b4_symbol(165, is_token)],
[[0]])


m4_define([b4_symbol(79, has_destructor)],
[[0]])


m4_define([b4_symbol(158, type)],
[[]])


m4_define([b4_symbol(119, tag)],
[[small_stmt]])


m4_define([b4_symbol(40, type)],
[[]])


m4_define([b4_conflict_list_heads],
[[     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0]])


m4_define([b4_symbol(154, type)],
[[]])


m4_define([b4_symbol(185, id)],
[[testlist_comp]])


m4_define([b4_symbol(150, type)],
[[]])


m4_define([b4_symbol(170, id)],
[[xor_expr]])


m4_define([b4_symbol(170, has_id)],
[[1]])


m4_define([b4_symbol(170, tag)],
[[xor_expr]])


m4_define([b4_symbol(158, id)],
[[or_seq]])


m4_define([b4_symbol(143, id)],
[[nonlocal_stmt]])


m4_define([b4_symbol(73, has_type)],
[[0]])


m4_define([b4_symbol(31, is_token)],
[[1]])


m4_define([b4_symbol(174, number)],
[[174]])


m4_define([b4_symbol(130, tag)],
[[flow_stmt]])


m4_define([b4_symbol(33, has_printer)],
[[0]])


m4_define([b4_symbol(138, has_destructor)],
[[0]])


m4_define([b4_symbol(37, user_number)],
[[292]])


m4_define([b4_symbol(207, has_destructor)],
[[0]])


m4_define([b4_symbol(116, id)],
[[parameters]])


m4_define([b4_symbol(120, user_number)],
[[-1]])


m4_define([b4_symbol(102, has_type)],
[[0]])


m4_define([b4_symbol(101, id)],
[[]])


m4_define([b4_symbol(82, has_printer)],
[[0]])


m4_define([b4_symbol(86, user_number)],
[[341]])


m4_define([b4_symbol(155, is_token)],
[[0]])


m4_define([b4_symbol(197, has_type)],
[[0]])


m4_define([b4_symbol(153, has_id)],
[[1]])


m4_define([b4_symbol(38, has_destructor)],
[[0]])


m4_define([b4_symbol(185, has_destructor)],
[[0]])


m4_define([b4_symbol(120, number)],
[[120]])


m4_define([b4_symbol(205, has_printer)],
[[0]])


m4_define([b4_symbol(71, number)],
[[71]])


m4_define([b4_symbol(157, number)],
[[157]])


m4_define([b4_symbol(209, user_number)],
[[-1]])


m4_define([b4_symbol(37, type)],
[[]])


m4_define([b4_symbol(85, has_destructor)],
[[0]])


m4_define([b4_symbol(33, type)],
[[]])


m4_define([b4_symbol(14, has_printer)],
[[0]])


m4_define([b4_symbol(147, type)],
[[]])


m4_define([b4_symbol(18, user_number)],
[[273]])


m4_define([b4_symbol(63, has_type)],
[[0]])


m4_define([b4_pact_ninf],
[[-524]])


m4_define([b4_symbol(62, tag)],
[[MORE_THAN_2]])


m4_define([b4_symbol(21, is_token)],
[[1]])


m4_define([b4_symbol(101, user_number)],
[[61]])


m4_define([b4_symbol(50, has_id)],
[[1]])


m4_define([b4_symbol(136, has_id)],
[[1]])


m4_define([b4_symbol(63, has_printer)],
[[0]])


m4_define([b4_symbol(143, type)],
[[]])


m4_define([b4_symbol(22, tag)],
[[TRY]])


m4_define([b4_symbol(103, number)],
[[103]])


m4_define([b4_symbol(87, has_id)],
[[1]])


m4_define([b4_symbol(95, id)],
[[]])


m4_define([b4_symbol(67, user_number)],
[[322]])


m4_define([b4_symbol(80, id)],
[[stmt_7]])


m4_define([b4_symbol(54, number)],
[[54]])


m4_define([b4_symbol(150, user_number)],
[[-1]])


m4_define([b4_symbol(68, id)],
[[MORE_OR_EQUAL]])


m4_define([b4_symbol(145, is_token)],
[[0]])


m4_define([b4_symbol(187, has_type)],
[[0]])


m4_define([b4_symbol(53, id)],
[[PRINT]])


m4_define([b4_symbol(184, tag)],
[[comma_test_star_seq]])


m4_define([b4_symbol(201, number)],
[[201]])


m4_define([b4_symbol(144, has_destructor)],
[[0]])


m4_define([b4_symbol(26, id)],
[[PLUS_EQUAL]])


m4_define([b4_symbol(1, is_token)],
[[0]])


m4_define([b4_symbol(144, tag)],
[[compound_stmt]])


m4_define([b4_symbol(11, id)],
[[NOT_EQUAL]])


m4_define([b4_symbol(33, has_id)],
[[1]])


m4_define([b4_symbol(119, has_id)],
[[1]])


m4_define([b4_symbol(204, has_type)],
[[0]])


m4_define([b4_symbol(37, number)],
[[37]])


m4_define([b4_symbol(104, tag)],
[['^']])


m4_define([b4_symbol(53, has_type)],
[[0]])


m4_define([b4_symbol(11, is_token)],
[[1]])


m4_define([b4_symbol(44, has_printer)],
[[0]])


m4_define([b4_symbol(44, has_destructor)],
[[0]])


m4_define([b4_symbol(191, has_destructor)],
[[0]])


m4_define([b4_symbol(48, user_number)],
[[303]])


m4_define([b4_symbol(131, user_number)],
[[-1]])


m4_define([b4_symbol(93, has_printer)],
[[0]])


m4_define([b4_symbol(26, type)],
[[]])


m4_define([b4_symbol(97, user_number)],
[[37]])


m4_define([b4_symbol(16, has_id)],
[[1]])


m4_define([b4_symbol(180, user_number)],
[[-1]])


m4_define([b4_symbol(177, has_type)],
[[0]])


m4_define([b4_symbol(135, is_token)],
[[0]])


m4_define([b4_symbol(91, has_destructor)],
[[0]])


m4_define([b4_symbol(22, type)],
[[]])


m4_define([b4_symbol(136, type)],
[[]])


m4_define([b4_symbol(132, type)],
[[]])


m4_define([b4_symbol(76, tag)],
[[stmt_3]])


m4_define([b4_symbol(103, has_destructor)],
[[0]])


m4_define([b4_symbol(192, has_id)],
[[1]])


m4_define([b4_symbol(25, has_printer)],
[[0]])


m4_define([b4_symbol(4, has_printer)],
[[0]])


m4_define([b4_symbol(36, tag)],
[[DIV_2_EQUAL]])


m4_define([b4_symbol(29, user_number)],
[[284]])


m4_define([b4_symbol(8, user_number)],
[[263]])


m4_define([b4_symbol(196, number)],
[[196]])


m4_define([b4_symbol(112, user_number)],
[[-1]])


m4_define([b4_symbol(43, has_type)],
[[0]])


m4_define([b4_symbol(74, has_printer)],
[[0]])


m4_define([b4_symbol(150, has_destructor)],
[[0]])


m4_define([b4_pgoto_min],
[[-524]])


m4_define([b4_symbol(78, user_number)],
[[333]])


m4_define([b4_symbol(96, is_token)],
[[1]])


m4_define([b4_symbol(161, user_number)],
[[-1]])


m4_define([b4_symbol(198, tag)],
[[classdef]])


m4_define([b4_symbol(175, has_id)],
[[1]])


m4_define([b4_symbol(167, has_type)],
[[0]])


m4_define([b4_symbol(158, tag)],
[[or_seq]])


m4_define([b4_symbol(125, is_token)],
[[0]])


m4_define([b4_symbol(142, number)],
[[142]])


m4_define([b4_symbol(50, has_destructor)],
[[0]])


m4_define([b4_symbol(191, is_token)],
[[0]])


m4_define([b4_symbol(93, number)],
[[93]])


m4_define([b4_symbol(19, type)],
[[]])


m4_define([b4_symbol(159, has_destructor)],
[[0]])


m4_define([b4_symbol(179, number)],
[[179]])


m4_define([b4_symbol(118, tag)],
[[simple_stmt]])


m4_define([b4_max_left_semantic_context],
[[0]])


m4_define([b4_symbol(15, type)],
[[]])


m4_define([b4_symbol(175, id)],
[[term_seq]])


m4_define([b4_symbol(129, type)],
[[]])


m4_define([b4_symbol(160, id)],
[[and_seq]])


m4_define([b4_symbol(55, has_printer)],
[[0]])


m4_define([b4_symbol(121, has_id)],
[[1]])


m4_define([b4_undef_token_number],
[[2]])


m4_define([b4_symbol(33, has_type)],
[[0]])


m4_define([b4_symbol(11, type)],
[[]])


m4_define([b4_symbol(148, id)],
[[for_stmt]])


m4_define([b4_symbol(59, user_number)],
[[314]])


m4_define([b4_symbol(59, has_destructor)],
[[0]])


m4_define([b4_symbol(72, has_id)],
[[1]])


m4_define([b4_symbol(125, type)],
[[]])


m4_define([b4_symbol(133, id)],
[[return_stmt]])


m4_define([b4_symbol(1, number)],
[[1]])


m4_define([b4_symbol(142, user_number)],
[[-1]])


m4_define([b4_symbol(158, has_id)],
[[1]])


m4_define([b4_symbol(86, is_token)],
[[1]])


m4_define([b4_symbol(125, number)],
[[125]])


m4_define([b4_symbol(76, number)],
[[76]])


m4_define([b4_symbol(121, type)],
[[]])


m4_define([b4_symbol(106, id)],
[[]])


m4_define([b4_symbol(191, user_number)],
[[-1]])


m4_define([b4_symbol(115, is_token)],
[[0]])


m4_define([b4_symbol(157, has_type)],
[[0]])


m4_define([b4_symbol(181, is_token)],
[[0]])


m4_define([b4_symbol(104, has_id)],
[[0]])


m4_define([b4_symbol(55, has_id)],
[[1]])


m4_define([b4_symbol(118, has_destructor)],
[[0]])


m4_define([b4_symbol(36, has_printer)],
[[0]])


m4_define([b4_symbol(22, number)],
[[22]])


m4_define([b4_symbol(108, number)],
[[108]])


m4_define([b4_symbol(59, number)],
[[59]])


m4_define([b4_symbol(123, user_number)],
[[-1]])


m4_define([b4_symbol(85, has_printer)],
[[0]])


m4_define([b4_symbol(202, has_id)],
[[1]])


m4_define([b4_symbol(23, has_type)],
[[0]])


m4_define([b4_symbol(89, user_number)],
[[40]])


m4_define([b4_symbol(61, tag)],
[[YIELD]])


m4_define([b4_symbol(18, has_destructor)],
[[0]])


m4_define([b4_symbol(165, has_destructor)],
[[0]])


m4_define([b4_symbol(172, user_number)],
[[-1]])


m4_define([b4_symbol(76, is_token)],
[[1]])


m4_define([b4_symbol(206, number)],
[[206]])


m4_define([b4_symbol(21, tag)],
[[IN]])


m4_define([b4_symbol(208, has_printer)],
[[0]])


m4_define([b4_symbol(85, id)],
[[stmt_12]])


m4_define([b4_symbol(38, has_id)],
[[1]])


m4_define([b4_symbol(70, id)],
[[PASS]])


m4_define([b4_symbol(118, type)],
[[]])


m4_define([b4_symbol(4, has_destructor)],
[[0]])


m4_define([b4_symbol(147, has_type)],
[[0]])


m4_define([b4_symbol(105, is_token)],
[[1]])


m4_define([b4_symbol(58, id)],
[[PRIVATE]])


m4_define([b4_symbol(65, has_destructor)],
[[0]])


m4_define([b4_symbol(171, is_token)],
[[0]])


m4_define([b4_symbol(43, id)],
[[NUMBER_FLOAT]])


m4_define([b4_symbol(114, type)],
[[]])


m4_define([b4_symbol(17, has_printer)],
[[0]])


m4_define([b4_symbol(183, tag)],
[[atom]])


m4_define([b4_symbol(3, has_type)],
[[0]])


m4_define([b4_symbol(100, has_printer)],
[[0]])


m4_define([b4_symbol(16, id)],
[[ELSE]])


m4_define([b4_symbol(110, type)],
[[]])


m4_define([b4_symbol(104, user_number)],
[[94]])


m4_define([b4_symbol(181, number)],
[[181]])


m4_define([b4_symbol(143, tag)],
[[nonlocal_stmt]])


m4_define([b4_symbol(66, has_printer)],
[[0]])


m4_define([b4_symbol(13, has_type)],
[[0]])


m4_define([b4_symbol(153, user_number)],
[[-1]])


m4_define([b4_symbol(103, tag)],
[['|']])


m4_define([b4_symbol(66, is_token)],
[[1]])


m4_define([b4_symbol(124, has_destructor)],
[[0]])


m4_define([b4_epilogue],
[[]b4_syncline(1421, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])[

void yyerror(const char *s) 
{
	Program::addError(new SyntaxError(s));
	fprintf(stderr, "Error:%s\n", s);
	//cout<<s;
}

int strlength(char * str)
{
	int i = 0;
	while (str@{i@} != '\0')
		i++;
	return i;
}

int yylex()
{
	return lexer->yylex();

}
void main(void)
{
	string input = "code.txt";
	dir_path="";
	//addFile(input);
	sourceFile=input;
	ifstream inf(input);
	lexer = new yyFlexLexer(&inf);
	Parser* p = new Parser();
	p->parse();
	//Program::printErrors();
	err->printErrQueue();
	system("pause");
}
]])


m4_define([b4_symbol(204, id)],
[[default_arg_comma_seq]])


m4_define([b4_symbol(160, has_id)],
[[1]])


m4_define([b4_stos_min],
[[0]])


m4_define([b4_symbol(197, has_id)],
[[1]])


m4_define([b4_symbol(137, has_type)],
[[0]])


m4_define([b4_symbol(164, number)],
[[164]])


m4_define([b4_symbol(161, is_token)],
[[0]])


m4_define([b4_symbol(24, has_destructor)],
[[0]])


m4_define([b4_symbol(171, has_destructor)],
[[0]])


m4_define([b4_symbol(47, has_printer)],
[[0]])


m4_define([b4_symbol(75, tag)],
[[stmt_2]])


m4_define([b4_symbol(130, has_printer)],
[[0]])


m4_define([b4_symbol(134, user_number)],
[[-1]])


m4_define([b4_symbol(96, has_printer)],
[[0]])


m4_define([b4_symbol(143, has_id)],
[[1]])


m4_define([b4_symbol(107, type)],
[[]])


m4_define([b4_symbol(35, tag)],
[[STAR_2_EQUAL]])


m4_define([b4_symbol(207, is_token)],
[[0]])


m4_define([b4_symbol(110, number)],
[[110]])


m4_define([b4_symbol(94, has_id)],
[[0]])


m4_define([b4_symbol(71, has_destructor)],
[[0]])


m4_define([b4_rline_max],
[[1418]])


m4_define([b4_symbol(183, user_number)],
[[-1]])


m4_define([b4_symbol(61, number)],
[[61]])


m4_define([b4_symbol(103, type)],
[[]])


m4_define([b4_symbol(147, number)],
[[147]])


m4_define([b4_symbol(56, is_token)],
[[1]])


m4_define([b4_symbol(98, has_type)],
[[0]])


m4_define([b4_symbol(98, number)],
[[98]])


m4_define([b4_pact_min],
[[-524]])


m4_define([b4_symbol(197, tag)],
[[dictorsetmaker]])


m4_define([b4_symbol(127, has_type)],
[[0]])


m4_define([b4_symbol(2, has_id)],
[[0]])


m4_define([b4_symbol(157, tag)],
[[test]])


m4_define([b4_symbol(28, has_printer)],
[[0]])


m4_define([b4_symbol(193, has_type)],
[[0]])


m4_define([b4_symbol(151, is_token)],
[[0]])


m4_define([b4_symbol(40, has_id)],
[[1]])


m4_define([b4_symbol(7, has_printer)],
[[0]])


m4_define([b4_symbol(126, has_id)],
[[1]])


m4_define([b4_symbol(111, has_printer)],
[[0]])


m4_define([b4_symbol(77, has_id)],
[[1]])


m4_define([b4_symbol(130, has_destructor)],
[[0]])


m4_define([b4_symbol(192, id)],
[[exprlist]])


m4_define([b4_symbol(6, number)],
[[6]])


m4_define([b4_symbol(117, tag)],
[[stmt]])


m4_define([b4_symbol(115, user_number)],
[[-1]])


m4_define([b4_symbol(44, number)],
[[44]])


m4_define([b4_symbol(77, has_printer)],
[[0]])


m4_define([b4_symbol(160, has_printer)],
[[0]])


m4_define([b4_symbol(165, id)],
[[comp_op]])


m4_define([b4_symbol(164, user_number)],
[[-1]])


m4_define([b4_symbol(150, id)],
[[try_except_cla_seq]])


m4_define([b4_toknum],
[[     0,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,    44,    40,
      91,    60,    62,    43,    45,    42,    47,    37,    59,    58,
      41,    61,    46,   124,    94,    38,   126,    93,   123,   125]])


m4_define([b4_symbol(138, id)],
[[dotted_as_name]])


m4_define([b4_symbol(30, has_destructor)],
[[0]])


m4_define([b4_table_min],
[[-388]])


m4_define([b4_symbol(123, id)],
[[comma_test_star]])


m4_define([b4_symbol(88, has_type)],
[[0]])


m4_define([b4_symbol(46, is_token)],
[[1]])


m4_define([b4_symbol(139, has_destructor)],
[[0]])


m4_define([b4_symbol(23, has_id)],
[[1]])


m4_define([b4_symbol(109, has_id)],
[[0]])


m4_define([b4_symbol(208, has_destructor)],
[[0]])


m4_define([b4_symbol(27, number)],
[[27]])


m4_define([b4_symbol(117, has_type)],
[[0]])


m4_define([b4_symbol(89, tag)],
[['(']])


m4_define([b4_symbol(141, is_token)],
[[0]])


m4_define([b4_symbol(183, has_type)],
[[0]])


m4_define([b4_symbol(39, has_destructor)],
[[0]])


m4_define([b4_symbol(186, has_destructor)],
[[0]])


m4_define([b4_symbol(207, has_id)],
[[1]])


m4_define([b4_symbol(58, has_printer)],
[[0]])


m4_define([b4_symbol(49, tag)],
[[ASSERT]])


m4_define([b4_symbol(141, has_printer)],
[[0]])


m4_define([b4_symbol(145, user_number)],
[[-1]])


m4_define([b4_symbol(190, has_printer)],
[[0]])


m4_define([b4_symbol(200, has_type)],
[[0]])


m4_define([b4_symbol(86, has_destructor)],
[[0]])


m4_define([b4_symbol(194, user_number)],
[[-1]])


m4_define([b4_symbol(60, tag)],
[[PROTECTED]])


m4_define([b4_symbol(36, is_token)],
[[1]])


m4_define([b4_symbol(78, has_type)],
[[0]])


m4_define([b4_symbol(182, has_id)],
[[1]])


m4_define([b4_symbol(20, tag)],
[[FOR]])


m4_define([b4_symbol(75, id)],
[[stmt_2]])


m4_define([b4_symbol(60, id)],
[[PROTECTED]])


m4_define([b4_defgoto],
[[    -1,     8,     9,    10,    68,    69,   272,    70,    71,    72,
      73,   186,    74,    75,    76,   187,    11,    77,    78,    79,
      80,    81,    82,    83,    84,    13,   114,    17,    18,    19,
     112,   285,    85,    86,    87,   541,    88,    89,    90,    91,
     422,   288,    92,   148,   423,    93,    94,    95,   195,    96,
     197,    97,    98,   210,    99,   211,   100,   213,   101,   215,
     102,   217,   103,   220,   104,   223,   105,   228,   106,   107,
     234,   108,   109,   110,   295,   160,   235,   474,   352,   353,
     470,   279,   145,   291,   152,   560,   304,   169,    14,    15,
     346,   565,   347,   566,   463,   651,   349,   712,   713,   714]])


m4_define([b4_symbol(186, number)],
[[186]])


m4_define([b4_symbol(107, has_type)],
[[0]])


m4_define([b4_symbol(39, has_printer)],
[[0]])


m4_define([b4_symbol(131, is_token)],
[[0]])


m4_define([b4_symbol(48, id)],
[[AS]])


m4_define([b4_symbol(173, has_type)],
[[0]])


m4_define([b4_symbol(122, has_printer)],
[[0]])


m4_define([b4_symbol(33, id)],
[[LESS_THAN_2_EQUAL]])


m4_define([b4_symbol(126, user_number)],
[[-1]])


m4_define([b4_symbol(182, tag)],
[[str_seq]])


m4_define([b4_symbol(145, has_destructor)],
[[0]])


m4_define([b4_symbol(88, has_printer)],
[[0]])


m4_define([b4_nondeterministic_flag],
[[1]])


m4_define([b4_symbol(171, has_printer)],
[[0]])


m4_define([b4_symbol(175, user_number)],
[[-1]])


m4_define([b4_symbol(96, type)],
[[]])


m4_define([b4_symbol(142, tag)],
[[global_stmt]])


m4_define([b4_symbol(165, has_id)],
[[1]])


m4_define([b4_symbol(132, number)],
[[132]])


m4_define([b4_symbol(83, number)],
[[83]])


m4_define([b4_symbol(92, type)],
[[]])


m4_define([b4_symbol(45, has_destructor)],
[[0]])


m4_define([b4_symbol(102, tag)],
[['.']])


m4_define([b4_symbol(169, number)],
[[169]])


m4_define([b4_symbol(192, has_destructor)],
[[0]])


m4_define([b4_symbol(68, has_type)],
[[0]])


m4_define([b4_symbol(26, is_token)],
[[1]])


m4_define([b4_symbol(209, id)],
[[comp_if]])


m4_define([b4_symbol(92, is_token)],
[[1]])


m4_define([b4_symbol(103, has_printer)],
[[0]])


m4_define([b4_symbol(111, has_id)],
[[1]])


m4_define([b4_symbol(107, user_number)],
[[93]])


m4_define([b4_dprec],
[[     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0]])


m4_define([b4_symbol(92, has_destructor)],
[[0]])


m4_define([b4_symbol(62, has_id)],
[[1]])


m4_define([b4_symbol(163, has_type)],
[[0]])


m4_define([b4_symbol(69, has_printer)],
[[0]])


m4_define([b4_symbol(121, is_token)],
[[0]])


m4_define([b4_symbol(148, has_id)],
[[1]])


m4_define([b4_defact_max],
[[407]])


m4_define([b4_symbol(115, number)],
[[115]])


m4_define([b4_symbol(152, has_printer)],
[[0]])


m4_define([b4_symbol(99, has_id)],
[[0]])


m4_define([b4_tname],
[["$][end", "error", "$][undefined", "ENDMARKER", "IMPORT", "CLASS", "END",
  "PRIMARY", "OR", "AND", "NOT", "NOT_EQUAL", "FINAL", "STATIC", "SELF",
  "DEF", "ELSE", "IF", "ELIF", "WHILE", "FOR", "IN", "TRY", "FINALLY",
  "ARROW", "NONLOCAL", "PLUS_EQUAL", "MINUS_EQUAL", "DIV_EQUAL",
  "MOD_EQUAL", "AND_EQUAL", "OR_EQUAL", "SHAPOO_EQUAL",
  "LESS_THAN_2_EQUAL", "MORE_THAN_2_EQUAL", "STAR_2_EQUAL", "DIV_2_EQUAL",
  "MORE_LESS", "FALSE", "TRUE", "STAR_2", "NUMBER_INT", "NUMBER_LONG",
  "NUMBER_FLOAT", "NAME", "DOT_3", "EXPECT", "WITH", "AS", "ASSERT",
  "EQUAL", "DEL", "RETURN", "PRINT", "GLOBAL", "STAR_EQUAL", "LESS_THAN_2",
  "RAISE", "PRIVATE", "PUBLIC", "PROTECTED", "YIELD", "MORE_THAN_2",
  "STRING", "NONE", "IS", "DIV_2", "LESS_OR_EQUAL", "MORE_OR_EQUAL",
  "EXCEPT", "PASS", "CHAR_VALUE", "BREAK", "CONTINUE", "stmt_1", "stmt_2",
  "stmt_3", "stmt_4", "stmt_5", "stmt_6", "stmt_7", "stmt_8", "stmt_9",
  "stmt_10", "stmt_11", "stmt_12", "stmt_13", "stmt_14", "','", "'('",
  "'@{'", "'<'", "'>'", "'+'", "'-'", "'*'", "'/'", "'%'", "';'", "':'",
  "')'", "'='", "'.'", "'|'", "'^'", "'&'", "'~'", "'@}'", "'{'", "'}'",
  "$][accept", "file_input", "program", "temp2", "funcdef", "funcheader",
  "parameters", "stmt", "simple_stmt", "small_stmt", "expr_stmt",
  "right_testlist", "testlist_star_expr", "comma_test_star",
  "comma_test_star_seqJ", "augassign", "access", "print_stmt", "del_stmt",
  "pass_stmt", "flow_stmt", "break_stmt", "continue_stmt", "return_stmt",
  "import_stmt", "import_name", "comma_dotted_as_name_seq",
  "dotted_as_names", "dotted_as_name", "dotted_name", "dotted_name_seq",
  "comma_name_seq", "global_stmt", "nonlocal_stmt", "compound_stmt",
  "elif_seq", "if_stmt", "while_stmt", "for_stmt", "try_stmt",
  "try_except_cla_seq", "with_seq", "with_stmt", "with_item",
  "except_clause", "list_stmt", "suite", "test", "or_seq", "or_test",
  "and_seq", "and_test", "not_test", "comp_op_seq", "comparison",
  "comp_op", "star_expr", "or_xor_expr_seq", "expr", "sha_and_expr_seq",
  "xor_expr", "and_shift_expr_seq", "and_expr", "arith_seq", "shift_expr",
  "term_seq", "arith_expr", "factor_seq", "term", "factor", "trailer_seq",
  "power", "str_seq", "atom", "comma_test_star_seq", "testlist_comp",
  "trailer", "comma_subscript_seq", "subscriptlist", "subscript",
  "sliceop", "comma_expr_star_seq", "exprlist", "comma_test", "testlist",
  "comma_test_colon_test_seq", "comma_test_seq", "dictorsetmaker",
  "classdef", "classheader", "arg_comma_seq", "comma_arg_seq", "arglist",
  "comma_default_arg_seq", "default_arg_comma_seq", "default_arg",
  "argument", "comp_iter", "comp_for", "comp_if", ]b4_null[]])


m4_define([b4_symbol(66, number)],
[[66]])


m4_define([b4_symbol(156, user_number)],
[[-1]])


m4_define([b4_symbol(104, has_destructor)],
[[0]])


m4_define([b4_symbol(6, is_token)],
[[1]])


m4_define([b4_symbol(74, tag)],
[[stmt_1]])


m4_define([b4_symbol(3, id)],
[[ENDMARKER]])


m4_define([b4_symbol(209, has_type)],
[[0]])


m4_define([b4_symbol(34, tag)],
[[MORE_THAN_2_EQUAL]])


m4_define([b4_symbol(7, has_id)],
[[1]])


m4_define([b4_symbol(16, is_token)],
[[1]])


m4_define([b4_symbol(58, has_type)],
[[0]])


m4_define([b4_symbol(45, has_id)],
[[1]])


m4_define([b4_symbol(151, has_destructor)],
[[0]])


m4_define([b4_symbol(12, number)],
[[12]])


m4_define([b4_symbol(89, type)],
[[]])


m4_define([b4_symbol(82, is_token)],
[[1]])


m4_define([b4_symbol(49, number)],
[[49]])


m4_define([b4_symbol(196, tag)],
[[comma_test_seq]])


m4_define([b4_symbol(85, type)],
[[]])


m4_define([b4_symbol(133, has_printer)],
[[0]])


m4_define([b4_symbol(199, type)],
[[]])


m4_define([b4_symbol(137, user_number)],
[[-1]])


m4_define([b4_symbol(153, has_type)],
[[0]])


m4_define([b4_symbol(111, is_token)],
[[0]])


m4_define([b4_symbol(51, has_destructor)],
[[0]])


m4_define([b4_symbol(156, tag)],
[[suite]])


m4_define([b4_symbol(81, type)],
[[]])


m4_define([b4_symbol(99, has_printer)],
[[0]])


m4_define([b4_symbol(195, type)],
[[]])


m4_define([b4_symbol(182, has_printer)],
[[0]])


m4_define([b4_symbol(197, id)],
[[dictorsetmaker]])


m4_define([b4_symbol(116, tag)],
[[parameters]])


m4_define([b4_symbol(182, id)],
[[str_seq]])


m4_define([b4_symbol(186, user_number)],
[[-1]])


m4_define([b4_symbol(28, has_id)],
[[1]])


m4_define([b4_symbol(191, type)],
[[]])


m4_define([b4_symbol(155, id)],
[[list_stmt]])


m4_define([b4_symbol(140, id)],
[[dotted_name_seq]])


m4_define([b4_symbol(48, has_type)],
[[0]])


m4_define([b4_symbol(128, id)],
[[del_stmt]])


m4_define([b4_symbol(113, id)],
[[temp2]])


m4_define([b4_symbol(110, has_destructor)],
[[0]])


m4_define([b4_symbol(171, number)],
[[171]])


m4_define([b4_symbol(72, is_token)],
[[1]])


m4_define([b4_symbol(114, has_printer)],
[[0]])


m4_define([b4_symbol(118, user_number)],
[[-1]])


m4_define([b4_symbol(88, tag)],
[[',']])


m4_define([b4_symbol(163, has_printer)],
[[0]])


m4_define([b4_symbol(143, has_type)],
[[0]])


m4_define([b4_symbol(101, is_token)],
[[1]])


m4_define([b4_symbol(167, user_number)],
[[-1]])


m4_define([b4_symbol(10, has_destructor)],
[[0]])


m4_define([b4_symbol(196, is_token)],
[[0]])


m4_define([b4_symbol(150, has_id)],
[[1]])


m4_define([b4_symbol(48, tag)],
[[AS]])


m4_define([b4_symbol(119, has_destructor)],
[[0]])


m4_define([b4_symbol(78, type)],
[[]])


m4_define([b4_symbol(187, has_id)],
[[1]])


m4_define([b4_symbol(8, type)],
[[]])


m4_define([b4_symbol(154, number)],
[[154]])


m4_define([b4_symbol(74, type)],
[[]])


m4_define([b4_symbol(188, type)],
[[]])


m4_define([b4_symbol(4, type)],
[[]])


m4_define([b4_symbol(38, has_type)],
[[0]])


m4_define([b4_symbol(70, type)],
[[]])


m4_define([b4_symbol(19, has_destructor)],
[[0]])


m4_define([b4_symbol(166, has_destructor)],
[[0]])


m4_define([b4_symbol(184, type)],
[[]])


m4_define([b4_symbol(92, id)],
[[]])


m4_define([b4_symbol(62, is_token)],
[[1]])


m4_define([b4_symbol(30, user_number)],
[[285]])


m4_define([b4_symbol(0, type)],
[[]])


m4_define([b4_symbol(144, has_printer)],
[[0]])


m4_define([b4_symbol(180, type)],
[[]])


m4_define([b4_symbol(133, has_id)],
[[1]])


m4_define([b4_symbol(65, id)],
[[IS]])


m4_define([b4_symbol(84, has_id)],
[[1]])


m4_define([b4_symbol(5, has_destructor)],
[[0]])


m4_define([b4_symbol(100, number)],
[[100]])


m4_define([b4_symbol(148, user_number)],
[[-1]])


m4_define([b4_symbol(50, id)],
[[EQUAL]])


m4_define([b4_symbol(133, has_type)],
[[0]])


m4_define([b4_symbol(51, number)],
[[51]])


m4_define([b4_symbol(137, number)],
[[137]])


m4_define([b4_symbol(66, has_destructor)],
[[0]])


m4_define([b4_symbol(38, id)],
[[FALSE]])


m4_define([b4_symbol(193, has_printer)],
[[0]])


m4_define([b4_symbol(88, number)],
[[88]])


m4_define([b4_symbol(186, is_token)],
[[0]])


m4_define([b4_symbol(197, user_number)],
[[-1]])


m4_define([b4_symbol(23, id)],
[[FINALLY]])


m4_define([b4_symbol(181, tag)],
[[power]])


m4_define([b4_symbol(202, user_number)],
[[-1]])


m4_define([b4_symbol(141, tag)],
[[comma_name_seq]])


m4_define([b4_symbol(30, has_id)],
[[1]])


m4_define([b4_symbol(116, has_id)],
[[1]])


m4_define([b4_symbol(203, is_token)],
[[0]])


m4_define([b4_symbol(67, has_id)],
[[1]])


m4_define([b4_symbol(11, user_number)],
[[266]])


m4_define([b4_symbol(101, tag)],
[['=']])


m4_define([b4_symbol(28, has_type)],
[[0]])


m4_define([b4_symbol(34, number)],
[[34]])


m4_define([b4_symbol(125, has_printer)],
[[0]])


m4_define([b4_symbol(52, is_token)],
[[1]])


m4_define([b4_symbol(94, has_type)],
[[0]])


m4_define([b4_symbol(125, has_destructor)],
[[0]])


m4_define([b4_symbol(67, type)],
[[]])


m4_define([b4_symbol(129, user_number)],
[[-1]])


m4_define([b4_symbol(60, user_number)],
[[315]])


m4_define([b4_symbol(174, has_printer)],
[[0]])


m4_define([b4_symbol(63, type)],
[[]])


m4_define([b4_symbol(123, has_type)],
[[0]])


m4_define([b4_symbol(178, user_number)],
[[-1]])


m4_define([b4_symbol(177, type)],
[[]])


m4_define([b4_symbol(13, has_id)],
[[1]])


m4_define([b4_symbol(25, has_destructor)],
[[0]])


m4_define([b4_symbol(176, is_token)],
[[0]])


m4_define([b4_symbol(172, has_destructor)],
[[0]])


m4_define([b4_symbol(173, type)],
[[]])


m4_define([b4_symbol(209, type)],
[[]])


m4_define([b4_symbol(17, number)],
[[17]])


m4_define([b4_symbol(8, has_type)],
[[0]])


m4_define([b4_symbol(73, tag)],
[[CONTINUE]])


m4_define([b4_symbol(8, id)],
[[OR]])


m4_define([b4_symbol(205, type)],
[[]])


m4_define([b4_symbol(72, has_destructor)],
[[0]])


m4_define([b4_symbol(106, has_printer)],
[[0]])


m4_define([b4_symbol(33, tag)],
[[LESS_THAN_2_EQUAL]])


m4_define([b4_symbol(18, has_type)],
[[0]])


m4_define([b4_symbol(201, type)],
[[]])


m4_define([b4_symbol(41, user_number)],
[[296]])


m4_define([b4_symbol(193, number)],
[[193]])


m4_define([b4_symbol(84, has_type)],
[[0]])


m4_define([b4_symbol(42, is_token)],
[[1]])


m4_define([b4_percent_define_loc(lr.type)],
[[[[<default value>:-1.-1]], [[<default value>:-1.-1]]]])


m4_define([b4_symbol(155, has_printer)],
[[0]])


m4_define([b4_symbol(159, user_number)],
[[-1]])


m4_define([b4_symbol(90, user_number)],
[[91]])


m4_define([b4_symbol(195, tag)],
[[comma_test_colon_test_seq]])


m4_define([b4_symbol(113, has_type)],
[[0]])


m4_define([b4_symbol(155, tag)],
[[list_stmt]])


m4_define([b4_symbol(172, has_id)],
[[1]])


m4_define([b4_symbol(166, is_token)],
[[0]])


m4_define([b4_symbol(131, has_destructor)],
[[0]])


m4_define([b4_symbol(187, id)],
[[comma_subscript_seq]])


m4_define([b4_symbol(200, has_destructor)],
[[0]])


m4_define([b4_symbol(56, type)],
[[]])


m4_define([b4_symbol(115, tag)],
[[funcheader]])


m4_define([b4_symbol(172, id)],
[[and_expr]])


m4_define([b4_symbol(90, number)],
[[90]])


m4_define([b4_symbol(176, number)],
[[176]])


m4_define([b4_immediate_max],
[[0]])


m4_define([b4_symbol(145, id)],
[[elif_seq]])


m4_define([b4_symbol(52, type)],
[[]])


m4_define([b4_symbol(22, user_number)],
[[277]])


m4_define([b4_symbol(1, user_number)],
[[256]])


m4_define([b4_symbol(166, type)],
[[]])


m4_define([b4_symbol(130, id)],
[[flow_stmt]])


m4_define([b4_symbol(136, has_printer)],
[[0]])


m4_define([b4_rline_min],
[[0]])


m4_define([b4_symbol(31, has_destructor)],
[[0]])


m4_define([b4_last],
[[1446]])


m4_define([b4_symbol(118, id)],
[[simple_stmt]])


m4_define([b4_symbol(162, type)],
[[]])


m4_define([b4_symbol(71, user_number)],
[[326]])


m4_define([b4_symbol(74, has_type)],
[[0]])


m4_define([b4_symbol(32, is_token)],
[[1]])


m4_define([b4_symbol(103, id)],
[[]])


m4_define([b4_symbol(209, has_destructor)],
[[0]])


m4_define([b4_symbol(155, has_id)],
[[1]])


m4_define([b4_symbol(185, has_printer)],
[[0]])


m4_define([b4_symbol(122, number)],
[[122]])


m4_define([b4_symbol(189, user_number)],
[[-1]])


m4_define([b4_symbol(73, number)],
[[73]])


m4_define([b4_symbol(103, has_type)],
[[0]])


m4_define([b4_symbol(159, number)],
[[159]])


m4_define([b4_symbol(87, tag)],
[[stmt_14]])


m4_define([b4_symbol(156, is_token)],
[[0]])


m4_define([b4_symbol(198, has_type)],
[[0]])


m4_define([b4_symbol(187, has_destructor)],
[[0]])


m4_define([b4_symbol(47, tag)],
[[WITH]])


m4_define([b4_symbol(101, has_id)],
[[0]])


m4_define([b4_symbol(52, has_id)],
[[1]])


m4_define([b4_symbol(117, has_printer)],
[[0]])


m4_define([b4_symbol(138, has_id)],
[[1]])


m4_define([b4_symbol(89, has_id)],
[[0]])


m4_define([b4_symbol(87, has_destructor)],
[[0]])


m4_define([b4_symbol(105, number)],
[[105]])


m4_define([b4_symbol(52, user_number)],
[[307]])


m4_define([b4_symbol(56, number)],
[[56]])


m4_define([b4_conflict_list_heads_max],
[[0]])


m4_define([b4_symbol(49, type)],
[[]])


m4_define([b4_symbol(97, id)],
[[]])


m4_define([b4_symbol(166, has_printer)],
[[0]])


m4_define([b4_symbol(22, is_token)],
[[1]])


m4_define([b4_symbol(64, has_type)],
[[0]])


m4_define([b4_percent_define_syncline(lr.keep-unreachable-state)],
[[]])


m4_define([b4_symbol(82, id)],
[[stmt_9]])


m4_define([b4_symbol(169, tag)],
[[sha_and_expr_seq]])


m4_define([b4_symbol(45, type)],
[[]])


m4_define([b4_symbol(159, type)],
[[]])


m4_define([b4_symbol(203, number)],
[[203]])


m4_define([b4_symbol(55, id)],
[[STAR_EQUAL]])


m4_define([b4_symbol(129, tag)],
[[pass_stmt]])


m4_define([b4_symbol(41, type)],
[[]])


m4_define([b4_symbol(40, id)],
[[STAR_2]])


m4_define([b4_symbol(155, type)],
[[]])


m4_define([b4_symbol(35, has_id)],
[[1]])


m4_define([b4_symbol(28, id)],
[[DIV_EQUAL]])


m4_define([b4_symbol(188, has_type)],
[[0]])


m4_define([b4_symbol(146, is_token)],
[[0]])


m4_define([b4_symbol(146, has_destructor)],
[[0]])


m4_define([b4_symbol(13, id)],
[[STATIC]])


m4_define([b4_symbol(39, number)],
[[39]])


m4_define([b4_percent_define(parse.error)],
[[verbose]])


m4_define([b4_symbol(151, type)],
[[]])


m4_define([b4_symbol(180, tag)],
[[trailer_seq]])


m4_define([b4_symbol(33, user_number)],
[[288]])


m4_define([b4_symbol(2, is_token)],
[[0]])


m4_define([b4_symbol(140, tag)],
[[dotted_name_seq]])


m4_define([b4_symbol(147, has_printer)],
[[0]])


m4_define([b4_symbol(205, has_type)],
[[0]])


m4_define([b4_symbol(46, has_destructor)],
[[0]])


m4_define([b4_symbol(82, user_number)],
[[337]])


m4_define([b4_symbol(193, has_destructor)],
[[0]])


m4_define([b4_symbol(100, tag)],
[[')']])


m4_define([b4_symbol(54, has_type)],
[[0]])


m4_define([b4_symbol(201, id)],
[[comma_arg_seq]])


m4_define([b4_symbol(12, is_token)],
[[1]])


m4_define([b4_symbol(18, has_id)],
[[1]])


m4_define([b4_symbol(196, has_printer)],
[[0]])


m4_define([b4_symbol(201, has_printer)],
[[0]])


m4_define([b4_pgoto],
[[  -524,  -524,  -524,    72,  -524,  -524,   -50,  -524,  -524,  -524,
    -524,   354,   656,   -63,   307,  -524,    70,  -524,  -524,  -524,
    -524,  -524,  -524,  -524,   759,  -524,  -524,   -52,  -102,  -524,
    -524,   613,  -524,  -524,  -524,  -524,  -524,  -524,  -524,  -524,
    -524,  -524,  -524,  -280,   370,   760,   -65,   -37,  -524,  -191,
    -524,  -178,   -28,  -524,  -524,   633,   -24,  -524,   -30,  -524,
    -185,  -524,  -180,  -524,  -177,  -524,  -187,  -524,  -204,     2,
    -524,  -524,  -524,  -524,   685,   783,   612,  -524,  -524,  -440,
    -450,   703,   -42,   417,  -158,  -524,  -524,  -524,   813,  -524,
    -524,   294,   598,  -523,  -524,  -228,  -341,   113,  -114,  -524]])


m4_define([b4_symbol(205, user_number)],
[[-1]])


m4_define([b4_percent_define_bison_variables(lr.type)],
[[]])


m4_define([b4_symbol(93, has_destructor)],
[[0]])


m4_define([b4_symbol(194, has_id)],
[[1]])


m4_define([b4_symbol(136, is_token)],
[[0]])


m4_define([b4_symbol(178, has_type)],
[[0]])


m4_define([b4_symbol(161, number)],
[[161]])


m4_define([b4_symbol(38, type)],
[[]])


m4_define([b4_symbol(10, has_printer)],
[[0]])


m4_define([b4_symbol(14, user_number)],
[[269]])


m4_define([b4_symbol(105, has_destructor)],
[[0]])


m4_define([b4_symbol(198, number)],
[[198]])


m4_define([b4_symbol(128, has_printer)],
[[0]])


m4_define([b4_symbol(34, type)],
[[]])


m4_define([b4_symbol(148, type)],
[[]])


m4_define([b4_symbol(72, tag)],
[[BREAK]])


m4_define([b4_symbol(63, user_number)],
[[318]])


m4_define([b4_symbol(30, type)],
[[]])


m4_define([b4_symbol(177, has_printer)],
[[0]])


m4_define([b4_symbol(144, type)],
[[]])


m4_define([b4_symbol(32, tag)],
[[SHAPOO_EQUAL]])


m4_define([b4_symbol(140, has_id)],
[[1]])


m4_define([b4_symbol(152, has_destructor)],
[[0]])


m4_define([b4_symbol(44, has_type)],
[[0]])


m4_define([b4_symbol(91, has_id)],
[[0]])


m4_define([b4_symbol(177, has_id)],
[[1]])


m4_define([b4_symbol(140, type)],
[[]])


m4_define([b4_symbol(144, number)],
[[144]])


m4_define([b4_symbol(97, is_token)],
[[1]])


m4_define([b4_symbol(95, number)],
[[95]])


m4_define([b4_translate],
[[     0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,    97,   105,     2,
      89,   100,    95,    93,    88,    94,   102,    96,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,    99,    98,
      91,   101,    92,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,    90,     2,   107,   104,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   108,   103,   109,   106,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     1,     2,     3,     4,
       5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    87]])


m4_define([b4_symbol(194, tag)],
[[testlist]])


m4_define([b4_symbol(52, has_destructor)],
[[0]])


m4_define([b4_symbol(126, is_token)],
[[0]])


m4_define([b4_symbol(168, has_type)],
[[0]])


m4_define([b4_symbol(154, tag)],
[[except_clause]])


m4_define([b4_defact_min],
[[0]])


m4_define([b4_symbol(109, has_printer)],
[[0]])


m4_define([b4_symbol(40, has_printer)],
[[0]])


m4_define([b4_symbol(192, is_token)],
[[0]])


m4_define([b4_symbol(177, id)],
[[factor_seq]])


m4_define([b4_symbol(123, has_id)],
[[1]])


m4_define([b4_symbol(44, user_number)],
[[299]])


m4_define([b4_symbol(74, has_id)],
[[1]])


m4_define([b4_symbol(114, tag)],
[[funcdef]])


m4_define([b4_symbol(162, id)],
[[not_test]])


m4_define([b4_symbol(3, number)],
[[3]])


m4_define([b4_symbol(158, has_printer)],
[[0]])


m4_define([b4_symbol(41, number)],
[[41]])


m4_define([b4_symbol(127, number)],
[[127]])


m4_define([b4_symbol(78, number)],
[[78]])


m4_define([b4_symbol(93, user_number)],
[[43]])


m4_define([b4_symbol(135, id)],
[[import_name]])


m4_define([b4_symbol(120, id)],
[[expr_stmt]])


m4_define([b4_symbol(34, has_type)],
[[0]])


m4_define([b4_symbol(27, type)],
[[]])


m4_define([b4_symbol(108, id)],
[[]])


m4_define([b4_symbol(111, has_destructor)],
[[0]])


m4_define([b4_symbol(87, is_token)],
[[1]])


m4_define([b4_symbol(20, has_id)],
[[1]])


m4_define([b4_symbol(23, type)],
[[]])


m4_define([b4_symbol(137, type)],
[[]])


m4_define([b4_defgoto_max],
[[714]])


m4_define([b4_symbol(106, has_id)],
[[0]])


m4_define([b4_symbol(57, has_id)],
[[1]])


m4_define([b4_symbol(21, has_printer)],
[[0]])


m4_define([b4_symbol(24, number)],
[[24]])


m4_define([b4_symbol(116, is_token)],
[[0]])


m4_define([b4_symbol(86, tag)],
[[stmt_13]])


m4_define([b4_symbol(133, type)],
[[]])


m4_define([b4_symbol(0, has_printer)],
[[0]])


m4_define([b4_symbol(158, has_type)],
[[0]])


m4_define([b4_symbol(11, has_destructor)],
[[0]])


m4_define([b4_symbol(25, user_number)],
[[280]])


m4_define([b4_symbol(4, user_number)],
[[259]])


m4_define([b4_symbol(182, is_token)],
[[0]])


m4_define([b4_symbol(139, has_printer)],
[[0]])


m4_define([b4_symbol(70, has_printer)],
[[0]])


m4_define([b4_symbol(204, has_id)],
[[1]])


m4_define([b4_symbol(46, tag)],
[[EXPECT]])


m4_define([b4_symbol(74, user_number)],
[[329]])


m4_define([b4_symbol(188, has_printer)],
[[0]])


m4_define([b4_symbol(208, number)],
[[208]])


m4_define([b4_percent_define_user_variables],
[[[[[[parse.error]], [[C:\Users\AMER-HY\Source\Repos\compiler-project - Copy - Copy\yaccFinal.y:2.1]], [[C:\Users\AMER-HY\Source\Repos\compiler-project - Copy - Copy\yaccFinal.y:2.15]]]]]])


m4_define([b4_symbol(24, has_type)],
[[0]])


m4_define([b4_symbol(167, has_destructor)],
[[0]])


m4_define([b4_symbol(87, id)],
[[stmt_14]])


m4_define([b4_symbol(72, id)],
[[BREAK]])


m4_define([b4_symbol(90, has_type)],
[[0]])


m4_define([b4_symbol(168, tag)],
[[expr]])


m4_define([b4_symbol(77, is_token)],
[[1]])


m4_define([b4_symbol(6, has_destructor)],
[[0]])


m4_define([b4_symbol(45, id)],
[[DOT_3]])


m4_define([b4_symbol(128, tag)],
[[del_stmt]])


m4_define([b4_symbol(67, has_destructor)],
[[0]])


m4_define([b4_symbol(30, id)],
[[AND_EQUAL]])


m4_define([b4_symbol(148, has_type)],
[[0]])


m4_define([b4_symbol(183, number)],
[[183]])


m4_define([b4_symbol(106, is_token)],
[[1]])


m4_define([b4_symbol(51, has_printer)],
[[0]])


m4_define([b4_symbol(18, id)],
[[ELIF]])


m4_define([b4_symbol(16, type)],
[[]])


m4_define([b4_symbol(55, user_number)],
[[310]])


m4_define([b4_symbol(172, is_token)],
[[0]])


m4_define([b4_symbol(169, has_printer)],
[[0]])


m4_define([b4_symbol(4, has_type)],
[[0]])


m4_define([b4_symbol(12, type)],
[[]])


m4_define([b4_symbol(126, type)],
[[]])


m4_define([b4_symbol(162, has_id)],
[[1]])


m4_define([b4_symbol(122, type)],
[[]])


m4_define([b4_symbol(14, has_type)],
[[0]])


m4_define([b4_symbol(206, id)],
[[argument]])


m4_define([b4_symbol(199, has_id)],
[[1]])


m4_define([b4_symbol(80, number)],
[[80]])


m4_define([b4_symbol(126, has_destructor)],
[[0]])


m4_define([b4_symbol(166, number)],
[[166]])


m4_define([b4_symbol(80, has_type)],
[[0]])


m4_define([b4_symbol(67, is_token)],
[[1]])


m4_define([b4_table],
[[   141,   142,   309,   348,   170,   465,   426,   135,   150,   144,
     153,   238,   149,   189,   151,   143,   310,   329,   330,   575,
     144,   577,   144,   155,   158,   158,   143,   319,   143,   308,
     168,   325,   326,   578,   321,   165,   156,   159,   159,   323,
     293,   293,   654,   348,   296,   299,   658,   406,   521,   293,
     200,   201,   230,   420,   305,   527,   286,   293,   246,    16,
      16,   202,   513,   537,   242,   163,   164,   287,   166,   613,
     618,   620,    16,    23,    26,   293,    20,   203,   625,    28,
     629,   283,   632,   681,   684,   688,    33,   691,   694,   428,
     204,   697,   120,    16,   514,   125,   539,   520,   540,   421,
     429,   231,   232,   548,   133,   205,   139,   206,   207,   302,
     549,   221,   222,    16,   233,   241,   361,   294,   464,    16,
     303,   459,   407,   522,   419,   297,   660,   451,   452,   189,
     528,   208,   209,   443,   723,   446,   189,   358,   538,   661,
     449,   450,   447,   559,   614,   619,   621,   448,   553,   369,
     151,   155,   355,   626,   155,   630,   421,   633,   682,   685,
     689,   155,   692,   695,   156,    16,   698,   156,   312,   377,
     248,    29,   331,   332,   156,   479,   126,    16,   273,   274,
      16,   318,   509,   402,     1,     2,    16,    16,    16,   515,
      16,   362,     3,     4,   345,   351,    16,   370,   517,    16,
      27,   231,   232,   378,   264,    16,   267,   270,    16,   523,
     275,   413,   414,   510,   233,   403,   396,   126,    32,   401,
     516,   483,   427,   652,   127,   412,   333,   334,   335,   336,
     518,   460,   341,   489,   345,   571,   493,   385,     5,     6,
       7,   252,   499,   503,   583,   151,   587,   111,   416,   149,
     416,   433,   592,   431,   415,   596,   415,   434,   113,   430,
     434,   601,   116,   144,   605,   438,   439,    29,   386,   143,
     435,   121,   117,   435,    30,    31,   115,   155,   129,   397,
     526,   121,     5,     6,     7,   444,   408,   445,   118,   122,
     156,   173,   174,   175,   176,   177,   178,   179,   180,   181,
     182,   183,   391,   392,   123,   457,   458,   254,   258,   345,
     398,   480,   719,   469,   484,   652,   131,   409,    21,   490,
     184,     2,   494,   410,   119,   561,    22,   500,   136,   137,
     504,   387,   390,   128,   393,   395,   146,   129,   400,   453,
     454,   455,   456,     2,   519,   130,   529,   533,   524,   525,
       3,     4,   637,   530,   638,   411,    24,   475,   243,   534,
     138,   536,    21,   268,   554,   647,   185,   260,   244,   532,
     265,     5,     6,     7,     5,     6,     7,     5,     6,     7,
     249,   719,   255,   711,   547,   172,   293,   544,   544,   224,
     250,   149,   256,   543,   543,   269,     5,     6,     7,   557,
     557,   266,   192,   562,   147,   563,   535,   199,   119,     5,
       6,     7,   558,   558,    24,     5,     6,     7,   225,   226,
     227,    25,   567,   154,   568,   569,   570,   720,   363,   584,
     366,   574,   371,   588,   576,   374,   351,   188,   364,   593,
     367,   379,   372,   597,   124,   375,   190,   394,   193,   602,
     194,   380,   131,   606,   382,   508,   481,   124,   512,   132,
      35,     5,     6,     7,   383,   134,   482,     5,     6,     7,
     615,   196,   485,   617,   191,   198,   622,   261,   262,   624,
     640,   641,   486,   628,   616,   631,   646,   388,    42,    43,
     623,    44,    45,    46,    47,    48,   399,     5,     6,     7,
     634,   337,   507,   636,   212,   491,   214,   229,   236,   263,
       5,     6,     7,    54,    55,   492,     5,     6,     7,   389,
     746,    57,   648,     5,     6,     7,   216,   345,   237,   239,
     338,   339,   340,     5,     6,     7,   511,   495,   501,    61,
      62,   240,   351,    63,    64,   505,   245,   496,   502,   246,
       5,     6,     7,   247,   218,   506,    66,   327,    67,   167,
     219,   248,   251,   328,   252,   253,   254,   257,   258,   259,
     701,   260,   271,   276,   705,   277,   680,   278,   708,   709,
     710,   686,   280,   687,   284,   282,   289,   290,   693,   301,
     300,   311,   696,   306,   313,   699,   314,   315,   316,   322,
     417,   704,   354,   320,   357,   359,   365,   360,   324,   368,
     418,   373,   716,   717,   376,   381,   345,   384,   570,   345,
     425,   424,   432,   436,   437,   440,   442,   185,   466,   467,
     471,   472,   476,   473,   542,   552,   556,   742,   743,   477,
    -388,   642,   478,   488,   731,   487,   497,   732,   498,   531,
     545,   735,   546,     1,   736,    34,   551,   738,   607,    35,
     740,   441,   564,   572,    36,   608,    37,   573,    38,    39,
     579,    40,  -376,   609,    41,   610,   611,   468,   747,   758,
     759,   749,   612,   580,   750,   345,   581,    42,    43,   582,
      44,    45,    46,    47,    48,   585,    49,   586,   589,   590,
      50,    51,    52,    53,   591,   594,   459,   595,   598,   706,
     599,   761,    54,    55,   762,   707,   600,   604,   603,    56,
      57,    58,    59,   627,   635,   639,   643,   644,   649,   645,
     653,   655,   656,   659,  -387,     1,   662,    60,    61,    62,
     663,    35,    63,    64,    65,   665,    36,   664,    37,   666,
      38,    39,   667,    40,   668,    66,    41,    67,   669,    12,
     670,   671,   672,   722,   673,   674,   675,   292,   676,    42,
      43,   677,    44,    45,    46,    47,    48,   678,    49,   679,
     683,    35,    50,    51,    52,    53,   134,   690,   700,   702,
     703,   715,   550,   724,    54,    55,   725,   726,   727,   728,
     729,    56,    57,    58,    59,   730,   733,   734,   737,    42,
      43,   342,    44,    45,    46,    47,    48,   739,   741,    60,
      61,    62,    35,   744,    63,    64,    65,   134,   745,   748,
     171,   752,   753,   754,    54,    55,   755,    66,   756,    67,
     757,   307,    57,   317,   298,   162,   356,   281,   555,   140,
      42,    43,   342,    44,    45,    46,    47,    48,     0,   760,
      61,    62,    35,   657,    63,    64,   343,   134,     0,   405,
       0,   344,     0,     0,     0,    54,    55,    66,     0,    67,
       0,     0,     0,    57,     0,     0,     0,     0,     0,     0,
      42,    43,     0,    44,    45,    46,    47,    48,     0,     0,
       0,    61,    62,    35,     0,    63,    64,   343,   134,     0,
       0,     0,   404,     0,     0,    54,    55,     0,    66,     0,
      67,     0,     0,    57,     0,     0,     0,     0,     0,     0,
       0,    42,    43,     0,    44,    45,    46,    47,    48,     0,
       0,    61,    62,    35,     0,    63,    64,    65,   134,     0,
       0,     0,   157,     0,     0,     0,    54,    55,    66,     0,
      67,     0,     0,     0,    57,     0,     0,     0,     0,     0,
       0,    42,    43,     0,    44,    45,    46,    47,    48,    35,
       0,     0,    61,    62,   134,     0,    63,    64,    65,     0,
       0,     0,     0,     0,     0,     0,    54,    55,     0,    66,
     161,    67,     0,     0,    57,     0,     0,    42,    43,   461,
      44,    45,    46,    47,    48,    35,     0,     0,     0,     0,
     134,    60,    61,    62,     0,     0,    63,    64,    65,     0,
       0,     0,    54,    55,     0,     0,     0,     0,     0,    66,
      57,    67,     0,    42,    43,     0,    44,    45,    46,    47,
      48,    35,     0,     0,     0,     0,   134,     0,    61,    62,
       0,     0,    63,    64,   462,     0,     0,     0,    54,    55,
       0,     0,     0,     0,     0,    66,    57,    67,     0,    42,
      43,     0,    44,    45,    46,    47,    48,     0,     0,     0,
       0,    35,     0,     0,    61,    62,   134,     0,    63,    64,
      65,     0,     0,     0,    54,    55,     0,     0,     0,     0,
       0,    66,    57,    67,     0,     0,     0,     0,     0,    42,
      43,     0,    44,    45,    46,    47,    48,     0,     0,     0,
      61,    62,    35,     0,    63,    64,     0,   134,     0,     0,
     350,     0,     0,     0,    54,    55,     0,    66,     0,    67,
       0,     0,    57,     0,     0,     0,     0,     0,     0,     0,
      42,    43,   650,    44,    45,    46,    47,    48,    35,     0,
      61,    62,     0,   134,    63,    64,     0,     0,     0,     0,
     468,     0,     0,     0,     0,    54,    55,    66,     0,    67,
       0,     0,     0,    57,     0,     0,    42,    43,   718,    44,
      45,    46,    47,    48,    35,     0,     0,     0,     0,   134,
       0,    61,    62,     0,     0,    63,    64,     0,     0,     0,
       0,    54,    55,     0,     0,     0,     0,     0,    66,    57,
      67,     0,    42,    43,   721,    44,    45,    46,    47,    48,
      35,     0,     0,     0,     0,   134,     0,    61,    62,     0,
       0,    63,    64,     0,     0,     0,     0,    54,    55,     0,
       0,     0,     0,     0,    66,    57,    67,     0,    42,    43,
     751,    44,    45,    46,    47,    48,    35,     0,     0,     0,
       0,   134,     0,    61,    62,     0,     0,    63,    64,     0,
       0,     0,     0,    54,    55,     0,     0,     0,     0,     0,
      66,    57,    67,     0,    42,    43,     0,    44,    45,    46,
      47,    48,     0,     0,     0,     0,     0,   134,     0,    61,
      62,     0,     0,    63,    64,     0,     0,     0,     0,    54,
      55,     0,     0,     0,     0,     0,    66,    57,    67,     0,
      42,    43,     0,    44,    45,    46,    47,    48,     0,     0,
       0,     0,     0,   134,     0,    61,    62,     0,     0,    63,
      64,     0,     0,     0,     0,    54,    55,     0,     0,     0,
       0,     0,    66,    57,    67,     0,    42,    43,     0,    44,
      45,    46,    47,    48,     0,     0,     0,     0,     0,     0,
       0,    61,    62,     0,     0,    63,    64,    65,     0,     0,
       0,    54,    55,     0,     0,     0,     0,     0,    66,    57,
      67,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    61,    62,     0,
       0,    63,    64,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    66,     0,    67]])


m4_define([b4_symbol(32, has_printer)],
[[0]])


m4_define([b4_symbol(36, user_number)],
[[291]])


m4_define([b4_symbol(138, has_type)],
[[0]])


m4_define([b4_symbol(26, has_destructor)],
[[0]])


m4_define([b4_symbol(173, has_destructor)],
[[0]])


m4_define([b4_symbol(81, has_printer)],
[[0]])


m4_define([b4_symbol(162, is_token)],
[[0]])


m4_define([b4_symbol(145, has_id)],
[[1]])


m4_define([b4_symbol(85, user_number)],
[[340]])


m4_define([b4_symbol(112, number)],
[[112]])


m4_define([b4_symbol(96, has_id)],
[[0]])


m4_define([b4_symbol(63, number)],
[[63]])


m4_define([b4_symbol(0, id)],
[[]])


m4_define([b4_symbol(199, has_printer)],
[[0]])


m4_define([b4_symbol(149, number)],
[[149]])


m4_define([b4_symbol(71, tag)],
[[CHAR_VALUE]])


m4_define([b4_symbol(204, has_printer)],
[[0]])


m4_define([b4_pre_prologue],
[[]b4_syncline(4, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])[

	#define _CRT_SECURE_NO_WARNINGS
	#include <iostream>
	#include <FlexLexer.h>
	#include <string>
	#include <stack>
	#include "Program.h"
	#include "SyntaxError.h"
	#include <fstream>
	#include "Streams.h"
	#include "ErrorRevovery.h"
	#include "compilerProject/AST.h"
	#include <set>
	#include "compilerProject/MyParser.h"
	using namespace std;
	class ColonStack
	{
		public:
		ColonStack(int line, int col){colNum = col; lineNum = line;}
		int colNum,lineNum;
	};
	stack<ColonStack*>colonStack;
	int yylex(void);
	int yyparse();
	int strlength(char *);
	void yyerror(const char *);
	int lineno=0,colnumber=0;
	ErrorRecovery* err=new ErrorRecovery();
	FlexLexer* lexer = new yyFlexLexer();
	extern string sourceFile="";
	string dir_path="";
	string temp_id="";
	stack<string> temp_id1;
	char* i_type;
	Node* k;
	char* t_id=new char@{10@};
	char* acc_mod=new char@{8@};
	vector<char*> sto_mod;
	bool ss=false;
	bool ff=false;
	bool pro= false;
	bool pp=true;
	bool is_list=false;
	bool is_dic=false;
	int linefunc=0;
	int colmfunc=0;
	operand op;
	bool v_static,v_final;
	vector<char *>inhertance_list;


	vector<char *>ID_list;
	Variable* v;
	Type* t;
	class Function * testfunction;
	vector<char *> parameters;
	class Parser
	{
		public:
		int	parse()
		{
			return yyparse();
		}
	};
	MyParser * p = new MyParser();
	AST * ast = new AST();
]])


m4_define([b4_symbol(73, has_destructor)],
[[0]])


m4_define([b4_symbol(208, user_number)],
[[-1]])


m4_define([b4_symbol(208, is_token)],
[[0]])


m4_define([b4_symbol(31, tag)],
[[OR_EQUAL]])


m4_define([b4_percent_define_bison_variables(lr.default-reduction)],
[[]])


m4_define([b4_symbol(4, has_id)],
[[1]])


m4_define([b4_symbol(119, type)],
[[]])


m4_define([b4_symbol(70, has_type)],
[[0]])


m4_define([b4_symbol(42, has_id)],
[[1]])


m4_define([b4_symbol(99, has_type)],
[[0]])


m4_define([b4_symbol(13, has_printer)],
[[0]])


m4_define([b4_symbol(57, is_token)],
[[1]])


m4_define([b4_symbol(128, has_id)],
[[1]])


m4_define([b4_symbol(17, user_number)],
[[272]])


m4_define([b4_symbol(79, has_id)],
[[1]])


m4_define([b4_symbol(8, number)],
[[8]])


m4_define([b4_symbol(100, user_number)],
[[41]])


m4_define([b4_symbol(115, type)],
[[]])


m4_define([b4_symbol(46, number)],
[[46]])


m4_define([b4_symbol(193, tag)],
[[comma_test]])


m4_define([b4_symbol(62, has_printer)],
[[0]])


m4_define([b4_symbol(128, has_type)],
[[0]])


m4_define([b4_symbol(66, user_number)],
[[321]])


m4_define([b4_symbol(194, id)],
[[testlist]])


m4_define([b4_symbol(111, type)],
[[]])


m4_define([b4_symbol(153, tag)],
[[with_item]])


m4_define([b4_symbol(194, has_type)],
[[0]])


m4_define([b4_symbol(152, is_token)],
[[0]])


m4_define([b4_symbol(132, has_destructor)],
[[0]])


m4_define([b4_symbol(201, has_destructor)],
[[0]])


m4_define([b4_symbol(167, id)],
[[or_xor_expr_seq]])


m4_define([b4_symbol(152, id)],
[[with_stmt]])


m4_define([b4_symbol(113, tag)],
[[temp2]])


m4_define([b4_symbol(25, has_id)],
[[1]])


m4_define([b4_symbol(125, id)],
[[augassign]])


m4_define([b4_symbol(32, has_destructor)],
[[0]])


m4_define([b4_symbol(110, id)],
[[]])


m4_define([b4_symbol(29, number)],
[[29]])


m4_define([b4_symbol(60, has_type)],
[[0]])


m4_define([b4_symbol(47, is_token)],
[[1]])


m4_define([b4_symbol(89, has_type)],
[[0]])


m4_define([b4_symbol(43, has_printer)],
[[0]])


m4_define([b4_symbol(209, has_id)],
[[1]])


m4_define([b4_symbol(47, user_number)],
[[302]])


m4_define([b4_symbol(130, user_number)],
[[-1]])


m4_define([b4_symbol(118, has_type)],
[[0]])


m4_define([b4_symbol(92, has_printer)],
[[0]])


m4_define([b4_symbol(85, tag)],
[[stmt_12]])


m4_define([b4_symbol(188, has_destructor)],
[[0]])


m4_define([b4_percent_define_kind(lr.default-reduction)],
[[keyword]])


m4_define([b4_symbol(96, user_number)],
[[47]])


m4_define([b4_symbol(184, has_type)],
[[0]])


m4_define([b4_symbol(142, is_token)],
[[0]])


m4_define([b4_symbol(108, type)],
[[]])


m4_define([b4_symbol(45, tag)],
[[DOT_3]])


m4_define([b4_symbol(184, has_id)],
[[1]])


m4_define([b4_symbol(104, type)],
[[]])


m4_define([b4_symbol(88, has_destructor)],
[[0]])


m4_define([b4_token_table_flag],
[[0]])


m4_define([b4_immediate_min],
[[0]])


m4_define([b4_symbol(151, number)],
[[151]])


m4_define([b4_symbol(201, has_type)],
[[0]])


m4_define([b4_symbol(100, type)],
[[]])


m4_define([b4_symbol(188, number)],
[[188]])


m4_define([b4_symbol(24, has_printer)],
[[0]])


m4_define([b4_symbol(77, id)],
[[stmt_4]])


m4_define([b4_symbol(3, has_printer)],
[[0]])


m4_define([b4_symbol(50, has_type)],
[[0]])


m4_define([b4_symbol(79, has_type)],
[[0]])


m4_define([b4_symbol(37, is_token)],
[[1]])


m4_define([b4_symbol(28, user_number)],
[[283]])


m4_define([b4_symbol(7, user_number)],
[[262]])


m4_define([b4_symbol(62, id)],
[[MORE_THAN_2]])


m4_define([b4_symbol(111, user_number)],
[[-1]])


m4_define([b4_symbol(167, tag)],
[[or_xor_expr_seq]])


m4_define([b4_symbol(73, has_printer)],
[[0]])


m4_define([b4_symbol(35, id)],
[[STAR_2_EQUAL]])


m4_define([b4_symbol(77, user_number)],
[[332]])


m4_define([b4_symbol(130, has_id)],
[[1]])


m4_define([b4_percent_define_kind(lr.keep-unreachable-state)],
[[keyword]])


m4_define([b4_symbol(108, has_type)],
[[0]])


m4_define([b4_symbol(127, tag)],
[[print_stmt]])


m4_define([b4_symbol(160, user_number)],
[[-1]])


m4_define([b4_symbol(81, has_id)],
[[1]])


m4_define([b4_symbol(20, id)],
[[FOR]])


m4_define([b4_percent_define_bison_variables(lr.keep-unreachable-state)],
[[]])


m4_define([b4_symbol(167, has_id)],
[[1]])


m4_define([b4_symbol(132, is_token)],
[[0]])


m4_define([b4_symbol(174, has_type)],
[[0]])


m4_define([b4_symbol(147, has_destructor)],
[[0]])


m4_define([b4_symbol(134, number)],
[[134]])


m4_define([b4_symbol(85, number)],
[[85]])


m4_define([b4_symbol(47, has_destructor)],
[[0]])


m4_define([b4_symbol(194, has_destructor)],
[[0]])


m4_define([b4_symbol(113, has_id)],
[[1]])


m4_define([b4_conflict_list_heads_min],
[[0]])


m4_define([b4_symbol(40, has_type)],
[[0]])


m4_define([b4_symbol(64, has_id)],
[[1]])


m4_define([b4_symbol(54, has_printer)],
[[0]])


m4_define([b4_symbol(69, has_type)],
[[0]])


m4_define([b4_symbol(27, is_token)],
[[1]])


m4_define([b4_symbol(31, number)],
[[31]])


m4_define([b4_symbol(99, tag)],
[[':']])


m4_define([b4_symbol(58, user_number)],
[[313]])


m4_define([b4_symbol(117, number)],
[[117]])


m4_define([b4_symbol(93, is_token)],
[[1]])


m4_define([b4_symbol(141, user_number)],
[[-1]])


m4_define([b4_symbol(68, number)],
[[68]])


m4_define([b4_symbol(59, tag)],
[[PUBLIC]])


m4_define([b4_symbol(94, has_destructor)],
[[0]])


m4_define([b4_file_name_all_but_ext],
[[yacc]])


m4_define([b4_symbol(164, has_type)],
[[0]])


m4_define([b4_symbol(190, user_number)],
[[-1]])


m4_define([b4_symbol(122, is_token)],
[[0]])


m4_define([b4_r1_max],
[[209]])


m4_define([b4_symbol(19, tag)],
[[WHILE]])


m4_define([b4_symbol(10, has_id)],
[[1]])


m4_define([b4_symbol(106, has_destructor)],
[[0]])


m4_define([b4_symbol(9, has_id)],
[[1]])


m4_define([b4_symbol(5, id)],
[[CLASS]])


m4_define([b4_symbol(47, has_id)],
[[1]])


m4_define([b4_symbol(14, number)],
[[14]])


m4_define([b4_symbol(7, is_token)],
[[1]])


m4_define([b4_symbol(70, tag)],
[[PASS]])


m4_define([b4_r1],
[[     0,   110,   111,   112,   112,   113,   113,   114,   115,   115,
     115,   115,   115,   115,   115,   115,   115,   115,   115,   115,
     115,   115,   115,   115,   115,   115,   115,   115,   115,   115,
     115,   115,   115,   115,   115,   115,   115,   115,   115,   115,
     116,   116,   117,   117,   118,   119,   119,   119,   119,   119,
     119,   119,   119,   120,   120,   120,   121,   121,   122,   122,
     122,   122,   122,   122,   122,   123,   123,   124,   124,   125,
     125,   125,   125,   125,   125,   125,   125,   125,   125,   125,
     125,   126,   126,   126,   127,   128,   129,   130,   130,   130,
     131,   132,   133,   133,   134,   135,   136,   136,   137,   137,
     138,   138,   139,   139,   140,   140,   141,   141,   142,   142,
     143,   143,   144,   144,   144,   144,   144,   144,   144,   145,
     145,   146,   146,   146,   146,   147,   147,   148,   148,   149,
     149,   149,   149,   150,   150,   151,   151,   152,   152,   153,
     153,   154,   154,   154,   155,   155,   156,   156,   157,   157,
     158,   158,   159,   159,   160,   160,   161,   161,   162,   162,
     163,   163,   164,   164,   165,   165,   165,   165,   165,   165,
     165,   165,   165,   165,   165,   166,   167,   167,   168,   168,
     169,   169,   170,   170,   171,   171,   172,   172,   173,   173,
     173,   173,   174,   174,   175,   175,   175,   175,   176,   176,
     177,   177,   177,   177,   177,   177,   177,   177,   178,   178,
     179,   179,   179,   179,   180,   180,   181,   181,   181,   181,
     182,   182,   183,   183,   183,   183,   183,   183,   183,   183,
     183,   183,   183,   183,   183,   183,   183,   183,   183,   183,
     183,   183,   183,   183,   183,   183,   183,   183,   183,   183,
     183,   183,   183,   183,   184,   184,   184,   184,   185,   185,
     185,   185,   185,   185,   185,   185,   185,   185,   186,   186,
     186,   186,   187,   187,   188,   188,   188,   188,   189,   189,
     189,   189,   189,   189,   189,   189,   189,   190,   190,   191,
     191,   191,   191,   192,   192,   192,   192,   192,   192,   192,
     192,   193,   193,   194,   194,   194,   194,   195,   195,   196,
     196,   197,   197,   197,   197,   197,   197,   197,   197,   197,
     197,   198,   199,   199,   199,   199,   199,   199,   199,   199,
     199,   199,   199,   199,   199,   199,   199,   199,   199,   199,
     199,   199,   199,   199,   199,   199,   199,   199,   199,   199,
     199,   199,   199,   199,   199,   199,   199,   199,   199,   199,
     199,   199,   199,   199,   199,   199,   199,   199,   199,   199,
     200,   200,   201,   201,   202,   202,   202,   202,   202,   202,
     202,   202,   202,   202,   202,   202,   202,   202,   202,   202,
     202,   202,   202,   202,   202,   203,   203,   204,   204,   205,
     206,   206,   207,   207,   208,   208,   209,   209]])


m4_define([b4_r2],
[[     0,     2,     2,     3,     1,     2,     1,     2,     6,     7,
       4,     5,     7,     7,     5,     5,     8,     8,     6,     6,
       8,     8,     6,     6,     9,     9,     7,     7,     8,     8,
       6,     6,     9,     9,     7,     7,     9,     9,     7,     7,
       3,     2,     1,     1,     2,     1,     1,     1,     1,     1,
       1,     1,     1,     3,     1,     2,     3,     2,     1,     2,
       1,     2,     1,     3,     2,     2,     2,     2,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     2,     2,     1,     1,     1,     1,
       1,     1,     2,     1,     1,     2,     2,     3,     1,     2,
       1,     3,     1,     2,     2,     3,     2,     3,     2,     3,
       2,     3,     1,     1,     1,     1,     1,     1,     2,     4,
       5,     4,     5,     7,     8,     4,     7,     6,     9,     4,
       7,     7,     6,     3,     4,     2,     3,     4,     5,     1,
       3,     1,     2,     4,     1,     2,     2,     1,     1,     5,
       2,     3,     1,     2,     2,     3,     1,     2,     2,     1,
       2,     3,     1,     2,     1,     1,     1,     1,     1,     1,
       1,     1,     2,     1,     2,     2,     2,     3,     1,     2,
       2,     3,     1,     2,     2,     3,     1,     2,     2,     2,
       3,     3,     1,     2,     2,     2,     3,     3,     1,     2,
       2,     2,     2,     2,     3,     3,     3,     3,     1,     2,
       2,     2,     2,     1,     1,     2,     1,     2,     4,     3,
       1,     2,     2,     3,     2,     2,     3,     3,     1,     2,
       3,     3,     3,     4,     4,     4,     4,     5,     5,     4,
       4,     5,     5,     5,     5,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     2,     2,     3,     3,     2,     1,
       2,     2,     3,     2,     1,     2,     2,     3,     2,     3,
       3,     2,     2,     3,     1,     2,     2,     3,     1,     1,
       2,     3,     3,     4,     2,     2,     3,     1,     2,     2,
       2,     3,     3,     1,     2,     1,     2,     2,     3,     2,
       3,     2,     3,     1,     2,     2,     3,     4,     5,     2,
       3,     4,     3,     4,     4,     5,     2,     1,     2,     2,
       3,     2,     3,     4,     4,     4,     5,     5,     5,     5,
       6,     6,     5,     5,     6,     6,     6,     6,     5,     6,
       6,     6,     7,     7,     7,     7,     8,     8,     7,     7,
       8,     8,     8,     8,     6,     7,     7,     7,     8,     8,
       8,     8,     9,     9,     8,     8,     9,     9,     9,     9,
       2,     3,     2,     3,     1,     1,     2,     2,     5,     3,
       3,     4,     6,     2,     2,     2,     3,     3,     3,     6,
       4,     4,     5,     7,     3,     2,     3,     2,     3,     3,
       1,     2,     1,     1,     4,     5,     2,     3]])


m4_define([b4_symbol(35, has_printer)],
[[0]])


m4_define([b4_symbol(30, tag)],
[[AND_EQUAL]])


m4_define([b4_symbol(153, has_destructor)],
[[0]])


m4_define([b4_symbol(39, user_number)],
[[294]])


m4_define([b4_symbol(30, has_type)],
[[0]])


m4_define([b4_symbol(17, is_token)],
[[1]])


m4_define([b4_symbol(59, has_type)],
[[0]])


m4_define([b4_symbol(122, user_number)],
[[-1]])


m4_define([b4_symbol(84, has_printer)],
[[0]])


m4_define([b4_symbol(190, number)],
[[190]])


m4_define([b4_symbol(83, is_token)],
[[1]])


m4_define([b4_symbol(88, user_number)],
[[44]])


m4_define([b4_symbol(171, user_number)],
[[-1]])


m4_define([b4_symbol(192, tag)],
[[exprlist]])


m4_define([b4_symbol(53, has_destructor)],
[[0]])


m4_define([b4_symbol(199, id)],
[[classheader]])


m4_define([b4_symbol(207, has_printer)],
[[0]])


m4_define([b4_spec_file_prefix],
[[]])


m4_define([b4_symbol(112, is_token)],
[[0]])


m4_define([b4_symbol(154, has_type)],
[[0]])


m4_define([b4_symbol(184, id)],
[[comma_test_star_seq]])


m4_define([b4_symbol(97, type)],
[[]])


m4_define([b4_symbol(152, tag)],
[[with_stmt]])


m4_define([b4_symbol(157, id)],
[[test]])


m4_define([b4_symbol(93, type)],
[[]])


m4_define([b4_symbol(112, tag)],
[[program]])


m4_define([b4_symbol(142, id)],
[[global_stmt]])


m4_define([b4_symbol(16, has_printer)],
[[0]])


m4_define([b4_symbol(173, number)],
[[173]])


m4_define([b4_r2_max],
[[9]])


m4_define([b4_symbol(115, id)],
[[funcheader]])


m4_define([b4_symbol(103, user_number)],
[[124]])


m4_define([b4_symbol(65, has_printer)],
[[0]])


m4_define([b4_symbol(100, id)],
[[]])


m4_define([b4_symbol(20, has_type)],
[[0]])


m4_define([b4_symbol(69, user_number)],
[[324]])


m4_define([b4_symbol(49, has_type)],
[[0]])


m4_define([b4_symbol(112, has_destructor)],
[[0]])


m4_define([b4_symbol(152, user_number)],
[[-1]])


m4_define([b4_symbol(73, is_token)],
[[1]])


m4_define([b4_symbol(152, has_id)],
[[1]])


m4_define([b4_symbol(189, has_id)],
[[1]])


m4_define([b4_symbol(70, number)],
[[70]])


m4_define([b4_symbol(102, is_token)],
[[1]])


m4_define([b4_symbol(144, has_type)],
[[0]])


m4_define([b4_symbol(12, has_destructor)],
[[0]])


m4_define([b4_symbol(156, number)],
[[156]])


m4_define([b4_symbol(84, tag)],
[[stmt_11]])


m4_define([b4_symbol(197, is_token)],
[[0]])


m4_define([b4_symbol(44, tag)],
[[NAME]])


m4_define([b4_symbol(0, has_type)],
[[0]])


m4_define([b4_symbol(46, has_printer)],
[[0]])


m4_define([b4_symbol(94, id)],
[[]])


m4_define([b4_symbol(135, has_id)],
[[1]])


m4_define([b4_symbol(102, number)],
[[102]])


m4_define([b4_symbol(86, has_id)],
[[1]])


m4_define([b4_symbol(133, user_number)],
[[-1]])


m4_define([b4_symbol(168, has_destructor)],
[[0]])


m4_define([b4_symbol(10, has_type)],
[[0]])


m4_define([b4_symbol(39, has_type)],
[[0]])


m4_define([b4_symbol(53, number)],
[[53]])


m4_define([b4_symbol(86, type)],
[[]])


m4_define([b4_symbol(95, has_printer)],
[[0]])


m4_define([b4_symbol(139, number)],
[[139]])


m4_define([b4_symbol(67, id)],
[[LESS_OR_EQUAL]])


m4_define([b4_symbol(99, user_number)],
[[58]])


m4_define([b4_symbol(52, id)],
[[RETURN]])


m4_define([b4_symbol(63, is_token)],
[[1]])


m4_define([b4_symbol(166, tag)],
[[star_expr]])


m4_define([b4_symbol(182, user_number)],
[[-1]])


m4_define([b4_table_ninf],
[[-388]])


m4_define([b4_symbol(7, has_destructor)],
[[0]])


m4_define([b4_symbol(82, type)],
[[]])


m4_define([b4_defgoto_min],
[[-1]])


m4_define([b4_symbol(196, type)],
[[]])


m4_define([b4_symbol(25, id)],
[[NONLOCAL]])


m4_define([b4_symbol(200, number)],
[[200]])


m4_define([b4_symbol(68, has_destructor)],
[[0]])


m4_define([b4_symbol(126, tag)],
[[access]])


m4_define([b4_symbol(10, id)],
[[NOT]])


m4_define([b4_symbol(134, has_type)],
[[0]])


m4_define([b4_symbol(192, type)],
[[]])


m4_define([b4_symbol(32, has_id)],
[[1]])


m4_define([b4_symbol(118, has_id)],
[[1]])


m4_define([b4_symbol(187, is_token)],
[[0]])


m4_define([b4_symbol(69, has_id)],
[[1]])


m4_define([b4_symbol(27, has_printer)],
[[0]])


m4_define([b4_symbol(36, number)],
[[36]])


m4_define([b4_symbol(6, has_printer)],
[[0]])


m4_define([b4_symbol(110, has_printer)],
[[0]])


m4_define([b4_symbol(114, user_number)],
[[-1]])


m4_define([b4_symbol(76, has_printer)],
[[0]])


m4_define([b4_symbol(204, is_token)],
[[0]])


m4_define([b4_symbol(163, user_number)],
[[-1]])


m4_define([b4_symbol(127, has_destructor)],
[[0]])


m4_define([b4_symbol(29, has_type)],
[[0]])


m4_define([b4_symbol(98, tag)],
[[';']])


m4_define([b4_symbol(53, is_token)],
[[1]])


m4_define([b4_symbol(15, has_id)],
[[1]])


m4_define([b4_symbol(95, has_type)],
[[0]])


m4_define([b4_symbol(19, number)],
[[19]])


m4_define([b4_symbol(58, tag)],
[[PRIVATE]])


m4_define([b4_symbols_number],
[[210]])


m4_define([b4_symbol(79, type)],
[[]])


m4_define([b4_symbol(124, has_type)],
[[0]])


m4_define([b4_symbol(27, has_destructor)],
[[0]])


m4_define([b4_symbol(174, has_destructor)],
[[0]])


m4_define([b4_symbol(9, type)],
[[]])


m4_define([b4_symbol(191, has_id)],
[[1]])


m4_define([b4_symbol(190, has_type)],
[[0]])


m4_define([b4_symbol(18, tag)],
[[ELIF]])


m4_define([b4_symbol(177, is_token)],
[[0]])


m4_define([b4_symbol(75, type)],
[[]])


m4_define([b4_symbol(189, type)],
[[]])


m4_define([b4_symbol(5, type)],
[[]])


m4_define([b4_symbol(195, number)],
[[195]])


m4_define([b4_symbol(9, has_type)],
[[0]])


m4_define([b4_symbol(57, has_printer)],
[[0]])


m4_define([b4_symbol(71, type)],
[[]])


m4_define([b4_symbol(140, has_printer)],
[[0]])


m4_define([b4_symbol(185, type)],
[[]])


m4_define([b4_symbol(74, has_destructor)],
[[0]])


m4_define([b4_symbol(144, user_number)],
[[-1]])


m4_define([b4_symbol(1, type)],
[[]])


m4_define([b4_percent_define_syncline(lr.default-reduction)],
[[]])


m4_define([b4_symbol(181, type)],
[[]])


m4_define([b4_symbol(19, has_type)],
[[0]])


m4_define([b4_symbol(193, user_number)],
[[-1]])


m4_define([b4_symbol(43, is_token)],
[[1]])


m4_define([b4_symbol(85, has_type)],
[[0]])


m4_define([b4_symbol(174, has_id)],
[[1]])


m4_define([b4_percent_define_syncline(parse.error)],
[[]b4_syncline(2, [["C:\\Users\\AMER-HY\\Source\\Repos\\compiler-project - Copy - Copy\\yaccFinal.y"]])[]])


m4_define([b4_symbol(141, number)],
[[141]])


m4_define([b4_symbol(92, number)],
[[92]])


m4_define([b4_symbol(178, number)],
[[178]])


m4_define([b4_symbol(191, tag)],
[[comma_expr_star_seq]])


m4_define([b4_percent_define(lr.keep-unreachable-state)],
[[false]])


m4_define([b4_symbol(114, has_type)],
[[0]])


m4_define([b4_glr_flag],
[[1]])


m4_define([b4_symbol(189, id)],
[[subscript]])


m4_define([b4_symbol(174, id)],
[[shift_expr]])


m4_define([b4_symbol(133, has_destructor)],
[[0]])


m4_define([b4_symbol(180, has_type)],
[[0]])


m4_define([b4_symbol(167, is_token)],
[[0]])


m4_define([b4_symbol(202, has_destructor)],
[[0]])


m4_define([b4_symbol(38, has_printer)],
[[0]])


m4_define([b4_symbol(151, tag)],
[[with_seq]])


m4_define([b4_symbol(121, has_printer)],
[[0]])


m4_define([b4_symbol(147, id)],
[[while_stmt]])


m4_define([b4_symbol(120, has_id)],
[[1]])


m4_define([b4_symbol(125, user_number)],
[[-1]])


m4_define([b4_symbol(132, id)],
[[continue_stmt]])


m4_define([b4_symbol(111, tag)],
[[file_input]])


m4_define([b4_symbol(87, has_printer)],
[[0]])


m4_define([b4_symbol(71, has_id)],
[[1]])


m4_define([b4_pact],
[[   180,    28,    32,   313,   409,  -524,  -524,  -524,   200,    76,
    -524,   262,   120,  -524,   338,   649,   145,  -524,   170,   228,
     173,   244,   319,   276,   260,   439,   212,  -524,  -524,   289,
     332,   447,   338,  -524,  -524,  1266,   316,  1266,  1266,  1302,
     237,   360,  -524,  -524,  -524,  -524,  -524,  -524,  -524,  1266,
    1302,  1266,  1302,   379,  -524,  -524,  -524,  -524,  -524,  -524,
    1005,   852,   893,  1338,  1338,  1338,  1338,   450,  -524,   649,
     731,  -524,   287,  -524,   265,  -524,   349,  -524,  -524,  -524,
    -524,  -524,  -524,  -524,  -524,  -524,  -524,  -524,  -524,  -524,
    -524,  -524,  -524,   440,  -524,   386,   431,   442,   462,  -524,
     387,    40,   401,   402,   421,   498,    18,   323,  -524,   444,
      12,   464,   426,    28,   441,   497,    15,  -524,   269,   502,
     544,   509,   556,   291,   518,   559,   521,   561,   293,   523,
     563,   525,   566,  -524,   465,  -524,   357,   351,   483,   166,
    -524,   474,   476,   489,   494,   564,   649,   496,   -32,   538,
    -524,   499,  -524,  -524,   496,  -524,  -524,  -524,    29,    37,
     490,  -524,   482,  -524,  -524,  -524,  -524,  -524,    21,   484,
    -524,  -524,  -524,  -524,  -524,  -524,  -524,  -524,  -524,  -524,
    -524,  -524,  -524,  -524,  -524,   933,  -524,  1266,  1005,  -524,
    -524,  1005,   386,  1266,  1266,   583,  1266,   585,  1005,   508,
     576,  -524,  -524,  -524,  -524,   588,  -524,  -524,  -524,  -524,
      40,  1338,  1338,   500,  1338,   495,  1338,   503,  1338,  1338,
     501,  1338,  1338,    79,  1338,  1338,  1338,  1338,   435,  -524,
    1338,   771,  1041,   558,   112,  -524,  -524,   560,  -524,    28,
    -524,   506,   507,    16,  -524,   339,   562,   341,   565,    49,
    -524,   343,   567,   346,   570,    69,  -524,   352,   571,   365,
     573,   224,   475,  -524,   290,   403,   483,   266,   452,   483,
     171,   812,    23,   273,   311,   483,   649,   649,  1302,   512,
    1302,   522,  1266,    30,   577,   532,  1266,   649,     1,  1338,
    1266,   534,   532,  1302,  1005,   535,  -524,  1005,   536,  -524,
    -524,  -524,  1266,  1266,   537,  -524,  -524,   526,  -524,   610,
    -524,  1266,  -524,  1266,  1005,  -524,  -524,  1338,  -524,  -524,
    1338,  -524,  1338,  -524,  1338,  -524,  -524,  1338,  1338,  -524,
    -524,  1338,  1338,  -524,  -524,  -524,  -524,  1338,  1338,  1338,
    1338,  -524,  1266,  1266,  -524,    20,   969,   528,  -524,   541,
    1081,   531,   524,   545,  -524,  1338,  -524,  -524,  -524,  -524,
     533,   540,   542,    75,  -524,   367,   121,  -524,   383,   546,
     543,   133,  -524,   416,   136,  -524,   448,   547,   548,   142,
    -524,   449,   143,  -524,   456,   458,  -524,   169,   492,  -524,
      50,   176,   186,  -524,   483,    53,    24,   165,   483,   483,
     236,    31,   302,   483,  -524,   549,  1266,  -524,   303,   483,
     362,   483,    39,    80,   618,  -524,  -524,  1302,  1302,   551,
     553,  1266,    87,   557,  -524,   591,  -524,  -524,  1266,   649,
    -524,   552,  -524,   615,  -524,  -524,  1005,  1005,  -524,    55,
    1266,  -524,  1266,  -524,  -524,  -524,  -524,  -524,  -524,  -524,
    -524,  -524,  -524,  -524,  -524,  -524,  -524,  -524,   574,  1266,
    -524,  1266,  1266,  1266,   575,   579,  -524,   572,  1266,   578,
    -524,  1081,  -524,  1041,   582,  -524,  -524,  -524,   584,   587,
     589,   144,  -524,   596,   597,   146,  -524,  -524,   599,   600,
     604,   152,  -524,   606,   607,   155,  -524,  -524,   609,   611,
     616,   161,  -524,   619,   617,   164,  -524,  -524,   614,   621,
    -524,  -524,   629,   631,  -524,   632,  -524,   638,  -524,    45,
     483,  1266,  -524,   483,    46,    47,   483,  1266,  -524,   483,
      54,  -524,   624,   483,    56,   483,    58,  1266,  -524,   625,
    1266,   336,   626,  -524,  -524,   649,   649,   593,   627,   628,
     630,   649,  -524,  -524,  -524,  -524,  1266,  -524,  -524,  1266,
     640,  -524,  -524,  -524,  1122,   642,   643,  -524,  -524,   644,
     605,   645,  -524,   634,  -524,  -524,   578,  -524,  -524,  1041,
    -524,  -524,   637,   641,   647,  -524,   646,   650,   652,  -524,
    -524,   655,   659,   660,  -524,   662,   663,   664,  -524,  -524,
     666,   667,   668,  -524,   672,   678,   679,  -524,  -524,  -524,
    -524,  -524,  -524,  1266,  -524,    59,   681,    60,  1266,  -524,
    1266,  -524,    61,   688,    63,  1266,  -524,  -524,    64,  1266,
    -524,    67,  1266,  -524,   689,   649,   690,   691,  1266,   649,
     693,  -524,   671,   649,   649,   649,  -524,   366,   692,  1266,
    1266,  -524,  -524,  1158,   643,  1266,  1194,   675,   643,  -524,
    -524,  -524,  -524,  -524,   694,  -524,  -524,   697,  -524,  -524,
     698,  -524,  -524,   699,  -524,  -524,   700,  -524,  -524,   701,
     706,  1266,  -524,  -524,  1266,  -524,   707,   708,  1266,  -524,
    -524,  1266,  -524,   709,  1266,  -524,   718,  1266,  -524,   719,
    -524,  -524,   649,   649,   724,  -524,   729,  -524,  -524,  -524,
    -524,  1266,  -524,  -524,  -524,  1266,   730,  -524,  1266,  -524,
    -524,  1266,  1230,   643,  -524,  -524,  -524,  -524,  -524,  -524,
    -524,   732,   733,  -524,  -524,   734,   737,  -524,   739,  -524,
     741,  -524,  -524,  -524,   649,   649,   366,  -524,  1266,  -524,
    -524,  1266,  -524,  -524,  -524,  -524,  -524,  -524,  -524,  -524,
    -524,  -524,  -524]])


m4_define([b4_symbol(157, has_id)],
[[1]])


m4_define([b4_symbol(0, number)],
[[0]])


m4_define([b4_symbol(170, has_printer)],
[[0]])


m4_define([b4_symbol(68, type)],
[[]])


m4_define([b4_symbol(124, number)],
[[124]])


m4_define([b4_symbol(33, has_destructor)],
[[0]])


m4_define([b4_symbol(174, user_number)],
[[-1]])


m4_define([b4_symbol(180, has_destructor)],
[[0]])


m4_define([b4_symbol(105, id)],
[[]])


m4_define([b4_symbol(9, tag)],
[[AND]])


m4_define([b4_symbol(75, number)],
[[75]])


m4_define([b4_translate_max],
[[109]])


m4_define([b4_symbol(64, type)],
[[]])


m4_define([b4_symbol(178, type)],
[[]])


m4_define([b4_symbol(75, has_type)],
[[0]])


m4_define([b4_symbol(33, is_token)],
[[1]])


m4_define([b4_symbol(60, type)],
[[]])


m4_define([b4_symbol(174, type)],
[[]])


m4_define([b4_symbol(80, has_destructor)],
[[0]])


m4_define([b4_symbol(103, has_id)],
[[0]])


m4_define([b4_symbol(19, has_printer)],
[[0]])


m4_define([b4_symbol(104, has_type)],
[[0]])


m4_define([b4_symbol(54, has_id)],
[[1]])


m4_define([b4_symbol(189, has_destructor)],
[[0]])


m4_define([b4_symbol(102, has_printer)],
[[0]])


m4_define([b4_symbol(83, tag)],
[[stmt_10]])


m4_define([b4_symbol(170, has_type)],
[[0]])


m4_define([b4_symbol(170, type)],
[[]])


m4_define([b4_symbol(21, number)],
[[21]])


m4_define([b4_symbol(157, is_token)],
[[0]])


m4_define([b4_symbol(206, type)],
[[]])


m4_define([b4_symbol(199, has_type)],
[[0]])


m4_define([b4_symbol(107, number)],
[[107]])


m4_define([b4_symbol(106, user_number)],
[[126]])


m4_define([b4_symbol(68, has_printer)],
[[0]])


m4_define([b4_symbol(58, number)],
[[58]])


m4_define([b4_symbol(151, has_printer)],
[[0]])


m4_define([b4_symbol(43, tag)],
[[NUMBER_FLOAT]])


m4_define([b4_symbol(201, has_id)],
[[1]])


m4_define([b4_symbol(202, type)],
[[]])


m4_define([b4_symbol(155, user_number)],
[[-1]])


m4_define([b4_symbol(89, has_destructor)],
[[0]])


m4_define([b4_symbol(99, id)],
[[]])


m4_define([b4_symbol(84, id)],
[[stmt_11]])


m4_define([b4_symbol(205, number)],
[[205]])


m4_define([b4_symbol(37, has_id)],
[[1]])


m4_define([b4_symbol(23, is_token)],
[[1]])


m4_define([b4_symbol(57, id)],
[[RAISE]])


m4_define([b4_symbol(65, has_type)],
[[0]])


m4_define([b4_symbol(42, id)],
[[NUMBER_LONG]])


m4_define([b4_symbol(165, tag)],
[[comp_op]])


